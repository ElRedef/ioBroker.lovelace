"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["vendors-node_modules_polymer_paper-input_paper-input_js"],{

/***/ "./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IronA11yAnnouncer: function() { return /* binding */ IronA11yAnnouncer; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n\nvar _templateObject;\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n/**\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\n\nExample:\n\n    Polymer({\n\n      is: 'x-chatty',\n\n      attached: function() {\n        // This will create the singleton element if it has not\n        // been created yet:\n        Polymer.IronA11yAnnouncer.requestAvailability();\n      }\n    });\n\nAfter the `iron-a11y-announcer` has been made available, elements can\nmake announces by firing bubbling `iron-announce` events.\n\nExample:\n\n    this.fire('iron-announce', {\n      text: 'This is an announcement!'\n    }, { bubbles: true });\n\nNote: announcements are only audible if you have a screen reader enabled.\n\n@demo demo/index.html\n*/\nvar IronA11yAnnouncer = (0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__.Polymer)({\n  /** @override */\n  _template: (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__.html)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        position: fixed;\\n        clip: rect(0px,0px,0px,0px);\\n      }\\n    </style>\\n    <div aria-live$=\\\"[[mode]]\\\">[[_text]]</div>\\n\"]))),\n  is: 'iron-a11y-announcer',\n  properties: {\n    /**\n     * The value of mode is used to set the `aria-live` attribute\n     * for the element that will be announced. Valid values are: `off`,\n     * `polite` and `assertive`.\n     */\n    mode: {\n      type: String,\n      value: 'polite'\n    },\n    /**\n     * The timeout on refreshing the announcement text. Larger timeouts are\n     * needed for certain screen readers to re-announce the same message.\n     */\n    timeout: {\n      type: Number,\n      value: 150\n    },\n    _text: {\n      type: String,\n      value: ''\n    }\n  },\n  /** @override */\n  created: function created() {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = this;\n    }\n    document.addEventListener('iron-announce', this._onIronAnnounce.bind(this));\n  },\n  /**\n   * Cause a text string to be announced by screen readers.\n   *\n   * @param {string} text The text that should be announced.\n   */\n  announce: function announce(text) {\n    this._text = '';\n    this.async(function () {\n      this._text = text;\n    }, this.timeout);\n  },\n  _onIronAnnounce: function _onIronAnnounce(event) {\n    if (event.detail && event.detail.text) {\n      this.announce(event.detail.text);\n    }\n  }\n});\nIronA11yAnnouncer.instance = null;\nIronA11yAnnouncer.requestAvailability = function () {\n  if (!IronA11yAnnouncer.instance) {\n    IronA11yAnnouncer.instance = document.createElement('iron-a11y-announcer');\n  }\n  if (document.body) {\n    document.body.appendChild(IronA11yAnnouncer.instance);\n  } else {\n    document.addEventListener('load', function () {\n      document.body.appendChild(IronA11yAnnouncer.instance);\n    });\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvaXJvbi1hMTF5LWFubm91bmNlci9pcm9uLWExMXktYW5ub3VuY2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBV0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcG9seW1lci9pcm9uLWExMXktYW5ub3VuY2VyL2lyb24tYTExeS1hbm5vdW5jZXIuanM/MTk5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbkBsaWNlbnNlXG5Db3B5cmlnaHQgKGMpIDIwMTUgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdFxuaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMudHh0IFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZVxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQgQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXNcbnBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnRcbmZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9QQVRFTlRTLnR4dFxuKi9cbmltcG9ydCAnQHBvbHltZXIvcG9seW1lci9wb2x5bWVyLWxlZ2FjeS5qcyc7XG5cbmltcG9ydCB7UG9seW1lcn0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9saWIvbGVnYWN5L3BvbHltZXItZm4uanMnO1xuaW1wb3J0IHtodG1sfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9odG1sLXRhZy5qcyc7XG5cbi8qKlxuYGlyb24tYTExeS1hbm5vdW5jZXJgIGlzIGEgc2luZ2xldG9uIGVsZW1lbnQgdGhhdCBpcyBpbnRlbmRlZCB0byBhZGQgYTExeVxudG8gZmVhdHVyZXMgdGhhdCByZXF1aXJlIG9uLWRlbWFuZCBhbm5vdW5jZW1lbnQgZnJvbSBzY3JlZW4gcmVhZGVycy4gSW5cbm9yZGVyIHRvIG1ha2UgdXNlIG9mIHRoZSBhbm5vdW5jZXIsIGl0IGlzIGJlc3QgdG8gcmVxdWVzdCBpdHMgYXZhaWxhYmlsaXR5XG5pbiB0aGUgYW5ub3VuY2luZyBlbGVtZW50LlxuXG5FeGFtcGxlOlxuXG4gICAgUG9seW1lcih7XG5cbiAgICAgIGlzOiAneC1jaGF0dHknLFxuXG4gICAgICBhdHRhY2hlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCBjcmVhdGUgdGhlIHNpbmdsZXRvbiBlbGVtZW50IGlmIGl0IGhhcyBub3RcbiAgICAgICAgLy8gYmVlbiBjcmVhdGVkIHlldDpcbiAgICAgICAgUG9seW1lci5Jcm9uQTExeUFubm91bmNlci5yZXF1ZXN0QXZhaWxhYmlsaXR5KCk7XG4gICAgICB9XG4gICAgfSk7XG5cbkFmdGVyIHRoZSBgaXJvbi1hMTF5LWFubm91bmNlcmAgaGFzIGJlZW4gbWFkZSBhdmFpbGFibGUsIGVsZW1lbnRzIGNhblxubWFrZSBhbm5vdW5jZXMgYnkgZmlyaW5nIGJ1YmJsaW5nIGBpcm9uLWFubm91bmNlYCBldmVudHMuXG5cbkV4YW1wbGU6XG5cbiAgICB0aGlzLmZpcmUoJ2lyb24tYW5ub3VuY2UnLCB7XG4gICAgICB0ZXh0OiAnVGhpcyBpcyBhbiBhbm5vdW5jZW1lbnQhJ1xuICAgIH0sIHsgYnViYmxlczogdHJ1ZSB9KTtcblxuTm90ZTogYW5ub3VuY2VtZW50cyBhcmUgb25seSBhdWRpYmxlIGlmIHlvdSBoYXZlIGEgc2NyZWVuIHJlYWRlciBlbmFibGVkLlxuXG5AZGVtbyBkZW1vL2luZGV4Lmh0bWxcbiovXG5leHBvcnQgY29uc3QgSXJvbkExMXlBbm5vdW5jZXIgPSBQb2x5bWVyKHtcbiAgLyoqIEBvdmVycmlkZSAqL1xuICBfdGVtcGxhdGU6IGh0bWxgXG4gICAgPHN0eWxlPlxuICAgICAgOmhvc3Qge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgY2xpcDogcmVjdCgwcHgsMHB4LDBweCwwcHgpO1xuICAgICAgfVxuICAgIDwvc3R5bGU+XG4gICAgPGRpdiBhcmlhLWxpdmUkPVwiW1ttb2RlXV1cIj5bW190ZXh0XV08L2Rpdj5cbmAsXG5cbiAgaXM6ICdpcm9uLWExMXktYW5ub3VuY2VyJyxcblxuICBwcm9wZXJ0aWVzOiB7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2YgbW9kZSBpcyB1c2VkIHRvIHNldCB0aGUgYGFyaWEtbGl2ZWAgYXR0cmlidXRlXG4gICAgICogZm9yIHRoZSBlbGVtZW50IHRoYXQgd2lsbCBiZSBhbm5vdW5jZWQuIFZhbGlkIHZhbHVlcyBhcmU6IGBvZmZgLFxuICAgICAqIGBwb2xpdGVgIGFuZCBgYXNzZXJ0aXZlYC5cbiAgICAgKi9cbiAgICBtb2RlOiB7dHlwZTogU3RyaW5nLCB2YWx1ZTogJ3BvbGl0ZSd9LFxuXG4gICAgLyoqXG4gICAgICogVGhlIHRpbWVvdXQgb24gcmVmcmVzaGluZyB0aGUgYW5ub3VuY2VtZW50IHRleHQuIExhcmdlciB0aW1lb3V0cyBhcmVcbiAgICAgKiBuZWVkZWQgZm9yIGNlcnRhaW4gc2NyZWVuIHJlYWRlcnMgdG8gcmUtYW5ub3VuY2UgdGhlIHNhbWUgbWVzc2FnZS5cbiAgICAgKi9cbiAgICB0aW1lb3V0OiB7dHlwZTogTnVtYmVyLCB2YWx1ZTogMTUwfSxcblxuICAgIF90ZXh0OiB7dHlwZTogU3RyaW5nLCB2YWx1ZTogJyd9LFxuICB9LFxuXG4gIC8qKiBAb3ZlcnJpZGUgKi9cbiAgY3JlYXRlZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKCFJcm9uQTExeUFubm91bmNlci5pbnN0YW5jZSkge1xuICAgICAgSXJvbkExMXlBbm5vdW5jZXIuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lyb24tYW5ub3VuY2UnLCB0aGlzLl9vbklyb25Bbm5vdW5jZS5iaW5kKHRoaXMpKTtcbiAgfSxcblxuICAvKipcbiAgICogQ2F1c2UgYSB0ZXh0IHN0cmluZyB0byBiZSBhbm5vdW5jZWQgYnkgc2NyZWVuIHJlYWRlcnMuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IFRoZSB0ZXh0IHRoYXQgc2hvdWxkIGJlIGFubm91bmNlZC5cbiAgICovXG4gIGFubm91bmNlOiBmdW5jdGlvbih0ZXh0KSB7XG4gICAgdGhpcy5fdGV4dCA9ICcnO1xuICAgIHRoaXMuYXN5bmMoZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLl90ZXh0ID0gdGV4dDtcbiAgICB9LCB0aGlzLnRpbWVvdXQpO1xuICB9LFxuXG4gIF9vbklyb25Bbm5vdW5jZTogZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQuZGV0YWlsICYmIGV2ZW50LmRldGFpbC50ZXh0KSB7XG4gICAgICB0aGlzLmFubm91bmNlKGV2ZW50LmRldGFpbC50ZXh0KTtcbiAgICB9XG4gIH1cbn0pO1xuXG5Jcm9uQTExeUFubm91bmNlci5pbnN0YW5jZSA9IG51bGw7XG5cbklyb25BMTF5QW5ub3VuY2VyLnJlcXVlc3RBdmFpbGFiaWxpdHkgPSBmdW5jdGlvbigpIHtcbiAgaWYgKCFJcm9uQTExeUFubm91bmNlci5pbnN0YW5jZSkge1xuICAgIElyb25BMTF5QW5ub3VuY2VyLmluc3RhbmNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaXJvbi1hMTF5LWFubm91bmNlcicpO1xuICB9XG5cbiAgaWYgKGRvY3VtZW50LmJvZHkpIHtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKElyb25BMTF5QW5ub3VuY2VyLmluc3RhbmNlKTtcbiAgfSBlbHNlIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24oKSB7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKElyb25BMTF5QW5ub3VuY2VyLmluc3RhbmNlKTtcbiAgICB9KTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js\n");

/***/ }),

/***/ "./node_modules/@polymer/iron-form-element-behavior/iron-form-element-behavior.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@polymer/iron-form-element-behavior/iron-form-element-behavior.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IronFormElementBehavior: function() { return /* binding */ IronFormElementBehavior; }\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n/**\n  IronFormElementBehavior adds a `name`, `value` and `required` properties to\n  a custom element. It mostly exists for backcompatibility with Polymer 1.x, and\n  is probably not something you want to use.\n\n  @demo demo/index.html\n  @polymerBehavior\n */\nvar IronFormElementBehavior = {\n  properties: {\n    /**\n     * The name of this element.\n     */\n    name: {\n      type: String\n    },\n    /**\n     * The value for this element.\n     * @type {*}\n     */\n    value: {\n      notify: true,\n      type: String\n    },\n    /**\n     * Set to true to mark the input as required. If used in a form, a\n     * custom element that uses this behavior should also use\n     * IronValidatableBehavior and define a custom validation method.\n     * Otherwise, a `required` element will always be considered valid.\n     * It's also strongly recommended to provide a visual style for the element\n     * when its value is invalid.\n     */\n    required: {\n      type: Boolean,\n      value: false\n    }\n  },\n  // Empty implementations for backcompatibility.\n  attached: function attached() {},\n  detached: function detached() {}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvaXJvbi1mb3JtLWVsZW1lbnQtYmVoYXZpb3IvaXJvbi1mb3JtLWVsZW1lbnQtYmVoYXZpb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcG9seW1lci9pcm9uLWZvcm0tZWxlbWVudC1iZWhhdmlvci9pcm9uLWZvcm0tZWxlbWVudC1iZWhhdmlvci5qcz9mZmZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuQGxpY2Vuc2VcbkNvcHlyaWdodCAoYykgMjAxNSBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG5UaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXRcbmh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dCBUaGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlXG5mb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4dCBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhc1xucGFydCBvZiB0aGUgcG9seW1lciBwcm9qZWN0IGlzIGFsc28gc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudFxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0XG4qL1xuaW1wb3J0ICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItbGVnYWN5LmpzJztcblxuLyoqXG4gIElyb25Gb3JtRWxlbWVudEJlaGF2aW9yIGFkZHMgYSBgbmFtZWAsIGB2YWx1ZWAgYW5kIGByZXF1aXJlZGAgcHJvcGVydGllcyB0b1xuICBhIGN1c3RvbSBlbGVtZW50LiBJdCBtb3N0bHkgZXhpc3RzIGZvciBiYWNrY29tcGF0aWJpbGl0eSB3aXRoIFBvbHltZXIgMS54LCBhbmRcbiAgaXMgcHJvYmFibHkgbm90IHNvbWV0aGluZyB5b3Ugd2FudCB0byB1c2UuXG5cbiAgQGRlbW8gZGVtby9pbmRleC5odG1sXG4gIEBwb2x5bWVyQmVoYXZpb3JcbiAqL1xuZXhwb3J0IGNvbnN0IElyb25Gb3JtRWxlbWVudEJlaGF2aW9yID0ge1xuXG4gIHByb3BlcnRpZXM6IHtcbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGlzIGVsZW1lbnQuXG4gICAgICovXG4gICAgbmFtZToge3R5cGU6IFN0cmluZ30sXG5cbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgZm9yIHRoaXMgZWxlbWVudC5cbiAgICAgKiBAdHlwZSB7Kn1cbiAgICAgKi9cbiAgICB2YWx1ZToge25vdGlmeTogdHJ1ZSwgdHlwZTogU3RyaW5nfSxcblxuICAgIC8qKlxuICAgICAqIFNldCB0byB0cnVlIHRvIG1hcmsgdGhlIGlucHV0IGFzIHJlcXVpcmVkLiBJZiB1c2VkIGluIGEgZm9ybSwgYVxuICAgICAqIGN1c3RvbSBlbGVtZW50IHRoYXQgdXNlcyB0aGlzIGJlaGF2aW9yIHNob3VsZCBhbHNvIHVzZVxuICAgICAqIElyb25WYWxpZGF0YWJsZUJlaGF2aW9yIGFuZCBkZWZpbmUgYSBjdXN0b20gdmFsaWRhdGlvbiBtZXRob2QuXG4gICAgICogT3RoZXJ3aXNlLCBhIGByZXF1aXJlZGAgZWxlbWVudCB3aWxsIGFsd2F5cyBiZSBjb25zaWRlcmVkIHZhbGlkLlxuICAgICAqIEl0J3MgYWxzbyBzdHJvbmdseSByZWNvbW1lbmRlZCB0byBwcm92aWRlIGEgdmlzdWFsIHN0eWxlIGZvciB0aGUgZWxlbWVudFxuICAgICAqIHdoZW4gaXRzIHZhbHVlIGlzIGludmFsaWQuXG4gICAgICovXG4gICAgcmVxdWlyZWQ6IHt0eXBlOiBCb29sZWFuLCB2YWx1ZTogZmFsc2V9LFxuICB9LFxuXG4gIC8vIEVtcHR5IGltcGxlbWVudGF0aW9ucyBmb3IgYmFja2NvbXBhdGliaWxpdHkuXG4gIGF0dGFjaGVkOiBmdW5jdGlvbigpIHt9LFxuICBkZXRhY2hlZDogZnVuY3Rpb24oKSB7fVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-form-element-behavior/iron-form-element-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/iron-input/iron-input.js":
/*!********************************************************!*\
  !*** ./node_modules/@polymer/iron-input/iron-input.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_a11y_announcer_iron_a11y_announcer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/iron-a11y-announcer/iron-a11y-announcer.js */ \"./node_modules/@polymer/iron-a11y-announcer/iron-a11y-announcer.js\");\n/* harmony import */ var _polymer_iron_validatable_behavior_iron_validatable_behavior_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/iron-validatable-behavior/iron-validatable-behavior.js */ \"./node_modules/@polymer/iron-validatable-behavior/iron-validatable-behavior.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n\nvar _templateObject;\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n\n/**\n`<iron-input>` is a wrapper to a native `<input>` element, that adds two-way\nbinding and prevention of invalid input. To use it, you must distribute a native\n`<input>` yourself. You can continue to use the native `input` as you would\nnormally:\n\n    <iron-input>\n      <input>\n    </iron-input>\n\n    <iron-input>\n      <input type=\"email\" disabled>\n    </iron-input>\n\n### Two-way binding\n\nBy default you can only get notified of changes to a native `<input>`'s `value`\ndue to user input:\n\n    <input value=\"{{myValue::input}}\">\n\nThis means that if you imperatively set the value (i.e. `someNativeInput.value =\n'foo'`), no events will be fired and this change cannot be observed.\n\n`iron-input` adds the `bind-value` property that mirrors the native `input`'s\n'`value` property; this property can be used for two-way data binding.\n`bind-value` will notify if it is changed either by user input or by script.\n\n    <iron-input bind-value=\"{{myValue}}\">\n      <input>\n    </iron-input>\n\nNote: this means that if you want to imperatively set the native `input`'s, you\n_must_ set `bind-value` instead, so that the wrapper `iron-input` can be\nnotified.\n\n### Validation\n\n`iron-input` uses the native `input`'s validation. For simplicity, `iron-input`\nhas a `validate()` method (which internally just checks the distributed\n`input`'s validity), which sets an `invalid` attribute that can also be used for\nstyling.\n\nTo validate automatically as you type, you can use the `auto-validate`\nattribute.\n\n`iron-input` also fires an `iron-input-validate` event after `validate()` is\ncalled. You can use it to implement a custom validator:\n\n    var CatsOnlyValidator = {\n      validate: function(ironInput) {\n        var valid = !ironInput.bindValue || ironInput.bindValue === 'cat';\n        ironInput.invalid = !valid;\n        return valid;\n      }\n    }\n    ironInput.addEventListener('iron-input-validate', function() {\n      CatsOnly.validate(input2);\n    });\n\nYou can also use an element implementing an\n[`IronValidatorBehavior`](/element/PolymerElements/iron-validatable-behavior).\nThis example can also be found in the demo for this element:\n\n    <iron-input validator=\"cats-only\">\n      <input>\n    </iron-input>\n\n### Preventing invalid input\n\nIt may be desirable to only allow users to enter certain characters. You can use\nthe `allowed-pattern` attribute to accomplish this. This feature is separate\nfrom validation, and `allowed-pattern` does not affect how the input is\nvalidated.\n\n    // Only allow typing digits, but a valid input has exactly 5 digits.\n    <iron-input allowed-pattern=\"[0-9]\">\n      <input pattern=\"\\d{5}\">\n    </iron-input>\n\n@demo demo/index.html\n*/\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__.Polymer)({\n  _template: (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__.html)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n      }\\n    </style>\\n    <slot id=\\\"content\\\"></slot>\\n\"]))),\n  is: 'iron-input',\n  behaviors: [_polymer_iron_validatable_behavior_iron_validatable_behavior_js__WEBPACK_IMPORTED_MODULE_3__.IronValidatableBehavior],\n  /**\n   * Fired whenever `validate()` is called.\n   *\n   * @event iron-input-validate\n   */\n\n  properties: {\n    /**\n     * Use this property instead of `value` for two-way data binding, or to\n     * set a default value for the input. **Do not** use the distributed\n     * input's `value` property to set a default value.\n     */\n    bindValue: {\n      type: String,\n      value: ''\n    },\n    /**\n     * Computed property that echoes `bindValue` (mostly used for Polymer 1.0\n     * backcompatibility, if you were one-way binding to the Polymer 1.0\n     * `input is=\"iron-input\"` value attribute).\n     */\n    value: {\n      type: String,\n      computed: '_computeValue(bindValue)'\n    },\n    /**\n     * Regex-like list of characters allowed as input; all characters not in the\n     * list will be rejected. The recommended format should be a list of allowed\n     * characters, for example, `[a-zA-Z0-9.+-!;:]`.\n     *\n     * This pattern represents the allowed characters for the field; as the user\n     * inputs text, each individual character will be checked against the\n     * pattern (rather than checking the entire value as a whole). If a\n     * character is not a match, it will be rejected.\n     *\n     * Pasted input will have each character checked individually; if any\n     * character doesn't match `allowedPattern`, the entire pasted string will\n     * be rejected.\n     *\n     * Note: if you were using `iron-input` in 1.0, you were also required to\n     * set `prevent-invalid-input`. This is no longer needed as of Polymer 2.0,\n     * and will be set automatically for you if an `allowedPattern` is provided.\n     *\n     */\n    allowedPattern: {\n      type: String\n    },\n    /**\n     * Set to true to auto-validate the input value as you type.\n     */\n    autoValidate: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The native input element.\n     */\n    _inputElement: Object\n  },\n  observers: ['_bindValueChanged(bindValue, _inputElement)'],\n  listeners: {\n    'input': '_onInput',\n    'keypress': '_onKeypress'\n  },\n  created: function created() {\n    _polymer_iron_a11y_announcer_iron_a11y_announcer_js__WEBPACK_IMPORTED_MODULE_2__.IronA11yAnnouncer.requestAvailability();\n    this._previousValidInput = '';\n    this._patternAlreadyChecked = false;\n  },\n  attached: function attached() {\n    // If the input is added at a later time, update the internal reference.\n    this._observer = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_5__.dom)(this).observeNodes(function (info) {\n      this._initSlottedInput();\n    }.bind(this));\n  },\n  detached: function detached() {\n    if (this._observer) {\n      (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_5__.dom)(this).unobserveNodes(this._observer);\n      this._observer = null;\n    }\n  },\n  /**\n   * Returns the distributed input element.\n   */\n  get inputElement() {\n    return this._inputElement;\n  },\n  _initSlottedInput: function _initSlottedInput() {\n    this._inputElement = this.getEffectiveChildren()[0];\n    if (this.inputElement && this.inputElement.value) {\n      this.bindValue = this.inputElement.value;\n    }\n    this.fire('iron-input-ready');\n  },\n  get _patternRegExp() {\n    var pattern;\n    if (this.allowedPattern) {\n      pattern = new RegExp(this.allowedPattern);\n    } else {\n      switch (this.inputElement.type) {\n        case 'number':\n          pattern = /[0-9.,e-]/;\n          break;\n      }\n    }\n    return pattern;\n  },\n  /**\n   * @suppress {checkTypes}\n   */\n  _bindValueChanged: function _bindValueChanged(bindValue, inputElement) {\n    // The observer could have run before attached() when we have actually\n    // initialized this property.\n    if (!inputElement) {\n      return;\n    }\n    if (bindValue === undefined) {\n      inputElement.value = null;\n    } else if (bindValue !== inputElement.value) {\n      this.inputElement.value = bindValue;\n    }\n    if (this.autoValidate) {\n      this.validate();\n    }\n\n    // manually notify because we don't want to notify until after setting value\n    this.fire('bind-value-changed', {\n      value: bindValue\n    });\n  },\n  _onInput: function _onInput() {\n    // Need to validate each of the characters pasted if they haven't\n    // been validated inside `_onKeypress` already.\n    if (this.allowedPattern && !this._patternAlreadyChecked) {\n      var valid = this._checkPatternValidity();\n      if (!valid) {\n        this._announceInvalidCharacter('Invalid string of characters not entered.');\n        this.inputElement.value = this._previousValidInput;\n      }\n    }\n    this.bindValue = this._previousValidInput = this.inputElement.value;\n    this._patternAlreadyChecked = false;\n  },\n  _isPrintable: function _isPrintable(event) {\n    // What a control/printable character is varies wildly based on the browser.\n    // - most control characters (arrows, backspace) do not send a `keypress`\n    // event\n    //   in Chrome, but the *do* on Firefox\n    // - in Firefox, when they do send a `keypress` event, control chars have\n    //   a charCode = 0, keyCode = xx (for ex. 40 for down arrow)\n    // - printable characters always send a keypress event.\n    // - in Firefox, printable chars always have a keyCode = 0. In Chrome, the\n    // keyCode\n    //   always matches the charCode.\n    // None of this makes any sense.\n\n    // For these keys, ASCII code == browser keycode.\n    var anyNonPrintable = event.keyCode == 8 ||\n    // backspace\n    event.keyCode == 9 ||\n    // tab\n    event.keyCode == 13 ||\n    // enter\n    event.keyCode == 27; // escape\n\n    // For these keys, make sure it's a browser keycode and not an ASCII code.\n    var mozNonPrintable = event.keyCode == 19 ||\n    // pause\n    event.keyCode == 20 ||\n    // caps lock\n    event.keyCode == 45 ||\n    // insert\n    event.keyCode == 46 ||\n    // delete\n    event.keyCode == 144 ||\n    // num lock\n    event.keyCode == 145 ||\n    // scroll lock\n    event.keyCode > 32 && event.keyCode < 41 ||\n    // page up/down, end, home, arrows\n    event.keyCode > 111 && event.keyCode < 124; // fn keys\n\n    return !anyNonPrintable && !(event.charCode == 0 && mozNonPrintable);\n  },\n  _onKeypress: function _onKeypress(event) {\n    if (!this.allowedPattern && this.inputElement.type !== 'number') {\n      return;\n    }\n    var regexp = this._patternRegExp;\n    if (!regexp) {\n      return;\n    }\n\n    // Handle special keys and backspace\n    if (event.metaKey || event.ctrlKey || event.altKey) {\n      return;\n    }\n\n    // Check the pattern either here or in `_onInput`, but not in both.\n    this._patternAlreadyChecked = true;\n    var thisChar = String.fromCharCode(event.charCode);\n    if (this._isPrintable(event) && !regexp.test(thisChar)) {\n      event.preventDefault();\n      this._announceInvalidCharacter('Invalid character ' + thisChar + ' not entered.');\n    }\n  },\n  _checkPatternValidity: function _checkPatternValidity() {\n    var regexp = this._patternRegExp;\n    if (!regexp) {\n      return true;\n    }\n    for (var i = 0; i < this.inputElement.value.length; i++) {\n      if (!regexp.test(this.inputElement.value[i])) {\n        return false;\n      }\n    }\n    return true;\n  },\n  /**\n   * Returns true if `value` is valid. The validator provided in `validator`\n   * will be used first, then any constraints.\n   * @return {boolean} True if the value is valid.\n   */\n  validate: function validate() {\n    if (!this.inputElement) {\n      this.invalid = false;\n      return true;\n    }\n\n    // Use the nested input's native validity.\n    var valid = this.inputElement.checkValidity();\n\n    // Only do extra checking if the browser thought this was valid.\n    if (valid) {\n      // Empty, required input is invalid\n      if (this.required && this.bindValue === '') {\n        valid = false;\n      } else if (this.hasValidator()) {\n        valid = _polymer_iron_validatable_behavior_iron_validatable_behavior_js__WEBPACK_IMPORTED_MODULE_3__.IronValidatableBehavior.validate.call(this, this.bindValue);\n      }\n    }\n    this.invalid = !valid;\n    this.fire('iron-input-validate');\n    return valid;\n  },\n  _announceInvalidCharacter: function _announceInvalidCharacter(message) {\n    this.fire('iron-announce', {\n      text: message\n    });\n  },\n  _computeValue: function _computeValue(bindValue) {\n    return bindValue;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-input/iron-input.js\n");

/***/ }),

/***/ "./node_modules/@polymer/iron-validatable-behavior/iron-validatable-behavior.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@polymer/iron-validatable-behavior/iron-validatable-behavior.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IronValidatableBehavior: function() { return /* binding */ IronValidatableBehavior; },\n/* harmony export */   IronValidatableBehaviorMeta: function() { return /* binding */ IronValidatableBehaviorMeta; }\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_meta_iron_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-meta/iron-meta.js */ \"./node_modules/@polymer/iron-meta/iron-meta.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n/**\n * Singleton IronMeta instance.\n */\nvar IronValidatableBehaviorMeta = null;\n\n/**\n * `Use IronValidatableBehavior` to implement an element that validates\n * user input. Use the related `IronValidatorBehavior` to add custom\n * validation logic to an iron-input.\n *\n * By default, an `<iron-form>` element validates its fields when the user\n * presses the submit button. To validate a form imperatively, call the form's\n * `validate()` method, which in turn will call `validate()` on all its\n * children. By using `IronValidatableBehavior`, your custom element\n * will get a public `validate()`, which will return the validity of the\n * element, and a corresponding `invalid` attribute, which can be used for\n * styling.\n *\n * To implement the custom validation logic of your element, you must override\n * the protected `_getValidity()` method of this behaviour, rather than\n * `validate()`. See\n * [this](https://github.com/PolymerElements/iron-form/blob/master/demo/simple-element.html)\n * for an example.\n *\n * ### Accessibility\n *\n * Changing the `invalid` property, either manually or by calling `validate()`\n * will update the `aria-invalid` attribute.\n *\n * @demo demo/index.html\n * @polymerBehavior\n */\nvar IronValidatableBehavior = {\n  properties: {\n    /**\n     * Name of the validator to use.\n     */\n    validator: {\n      type: String\n    },\n    /**\n     * True if the last call to `validate` is invalid.\n     */\n    invalid: {\n      notify: true,\n      reflectToAttribute: true,\n      type: Boolean,\n      value: false,\n      observer: '_invalidChanged'\n    }\n  },\n  registered: function registered() {\n    IronValidatableBehaviorMeta = new _polymer_iron_meta_iron_meta_js__WEBPACK_IMPORTED_MODULE_1__.IronMeta({\n      type: 'validator'\n    });\n  },\n  _invalidChanged: function _invalidChanged() {\n    if (this.invalid) {\n      this.setAttribute('aria-invalid', 'true');\n    } else {\n      this.removeAttribute('aria-invalid');\n    }\n  },\n  /* Recompute this every time it's needed, because we don't know if the\n   * underlying IronValidatableBehaviorMeta has changed. */\n  get _validator() {\n    return IronValidatableBehaviorMeta && IronValidatableBehaviorMeta.byKey(this.validator);\n  },\n  /**\n   * @return {boolean} True if the validator `validator` exists.\n   */\n  hasValidator: function hasValidator() {\n    return this._validator != null;\n  },\n  /**\n   * Returns true if the `value` is valid, and updates `invalid`. If you want\n   * your element to have custom validation logic, do not override this method;\n   * override `_getValidity(value)` instead.\n    * @param {Object} value Deprecated: The value to be validated. By default,\n   * it is passed to the validator's `validate()` function, if a validator is\n   set.\n   * If this argument is not specified, then the element's `value` property\n   * is used, if it exists.\n   * @return {boolean} True if `value` is valid.\n   */\n  validate: function validate(value) {\n    // If this is an element that also has a value property, and there was\n    // no explicit value argument passed, use the element's property instead.\n    if (value === undefined && this.value !== undefined) this.invalid = !this._getValidity(this.value);else this.invalid = !this._getValidity(value);\n    return !this.invalid;\n  },\n  /**\n   * Returns true if `value` is valid.  By default, it is passed\n   * to the validator's `validate()` function, if a validator is set. You\n   * should override this method if you want to implement custom validity\n   * logic for your element.\n   *\n   * @param {Object} value The value to be validated.\n   * @return {boolean} True if `value` is valid.\n   */\n\n  _getValidity: function _getValidity(value) {\n    if (this.hasValidator()) {\n      return this._validator.validate(value);\n    }\n    return true;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvaXJvbi12YWxpZGF0YWJsZS1iZWhhdmlvci9pcm9uLXZhbGlkYXRhYmxlLWJlaGF2aW9yLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bwb2x5bWVyL2lyb24tdmFsaWRhdGFibGUtYmVoYXZpb3IvaXJvbi12YWxpZGF0YWJsZS1iZWhhdmlvci5qcz8zMzE2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuQGxpY2Vuc2VcbkNvcHlyaWdodCAoYykgMjAxNSBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG5UaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXRcbmh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dCBUaGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlXG5mb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4dCBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhc1xucGFydCBvZiB0aGUgcG9seW1lciBwcm9qZWN0IGlzIGFsc28gc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudFxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0XG4qL1xuaW1wb3J0ICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItbGVnYWN5LmpzJztcblxuaW1wb3J0IHtJcm9uTWV0YX0gZnJvbSAnQHBvbHltZXIvaXJvbi1tZXRhL2lyb24tbWV0YS5qcyc7XG5cbi8qKlxuICogU2luZ2xldG9uIElyb25NZXRhIGluc3RhbmNlLlxuICovXG5leHBvcnQgbGV0IElyb25WYWxpZGF0YWJsZUJlaGF2aW9yTWV0YSA9IG51bGw7XG5cbi8qKlxuICogYFVzZSBJcm9uVmFsaWRhdGFibGVCZWhhdmlvcmAgdG8gaW1wbGVtZW50IGFuIGVsZW1lbnQgdGhhdCB2YWxpZGF0ZXNcbiAqIHVzZXIgaW5wdXQuIFVzZSB0aGUgcmVsYXRlZCBgSXJvblZhbGlkYXRvckJlaGF2aW9yYCB0byBhZGQgY3VzdG9tXG4gKiB2YWxpZGF0aW9uIGxvZ2ljIHRvIGFuIGlyb24taW5wdXQuXG4gKlxuICogQnkgZGVmYXVsdCwgYW4gYDxpcm9uLWZvcm0+YCBlbGVtZW50IHZhbGlkYXRlcyBpdHMgZmllbGRzIHdoZW4gdGhlIHVzZXJcbiAqIHByZXNzZXMgdGhlIHN1Ym1pdCBidXR0b24uIFRvIHZhbGlkYXRlIGEgZm9ybSBpbXBlcmF0aXZlbHksIGNhbGwgdGhlIGZvcm0nc1xuICogYHZhbGlkYXRlKClgIG1ldGhvZCwgd2hpY2ggaW4gdHVybiB3aWxsIGNhbGwgYHZhbGlkYXRlKClgIG9uIGFsbCBpdHNcbiAqIGNoaWxkcmVuLiBCeSB1c2luZyBgSXJvblZhbGlkYXRhYmxlQmVoYXZpb3JgLCB5b3VyIGN1c3RvbSBlbGVtZW50XG4gKiB3aWxsIGdldCBhIHB1YmxpYyBgdmFsaWRhdGUoKWAsIHdoaWNoIHdpbGwgcmV0dXJuIHRoZSB2YWxpZGl0eSBvZiB0aGVcbiAqIGVsZW1lbnQsIGFuZCBhIGNvcnJlc3BvbmRpbmcgYGludmFsaWRgIGF0dHJpYnV0ZSwgd2hpY2ggY2FuIGJlIHVzZWQgZm9yXG4gKiBzdHlsaW5nLlxuICpcbiAqIFRvIGltcGxlbWVudCB0aGUgY3VzdG9tIHZhbGlkYXRpb24gbG9naWMgb2YgeW91ciBlbGVtZW50LCB5b3UgbXVzdCBvdmVycmlkZVxuICogdGhlIHByb3RlY3RlZCBgX2dldFZhbGlkaXR5KClgIG1ldGhvZCBvZiB0aGlzIGJlaGF2aW91ciwgcmF0aGVyIHRoYW5cbiAqIGB2YWxpZGF0ZSgpYC4gU2VlXG4gKiBbdGhpc10oaHR0cHM6Ly9naXRodWIuY29tL1BvbHltZXJFbGVtZW50cy9pcm9uLWZvcm0vYmxvYi9tYXN0ZXIvZGVtby9zaW1wbGUtZWxlbWVudC5odG1sKVxuICogZm9yIGFuIGV4YW1wbGUuXG4gKlxuICogIyMjIEFjY2Vzc2liaWxpdHlcbiAqXG4gKiBDaGFuZ2luZyB0aGUgYGludmFsaWRgIHByb3BlcnR5LCBlaXRoZXIgbWFudWFsbHkgb3IgYnkgY2FsbGluZyBgdmFsaWRhdGUoKWBcbiAqIHdpbGwgdXBkYXRlIHRoZSBgYXJpYS1pbnZhbGlkYCBhdHRyaWJ1dGUuXG4gKlxuICogQGRlbW8gZGVtby9pbmRleC5odG1sXG4gKiBAcG9seW1lckJlaGF2aW9yXG4gKi9cbmV4cG9ydCBjb25zdCBJcm9uVmFsaWRhdGFibGVCZWhhdmlvciA9IHtcblxuICBwcm9wZXJ0aWVzOiB7XG4gICAgLyoqXG4gICAgICogTmFtZSBvZiB0aGUgdmFsaWRhdG9yIHRvIHVzZS5cbiAgICAgKi9cbiAgICB2YWxpZGF0b3I6IHt0eXBlOiBTdHJpbmd9LFxuXG4gICAgLyoqXG4gICAgICogVHJ1ZSBpZiB0aGUgbGFzdCBjYWxsIHRvIGB2YWxpZGF0ZWAgaXMgaW52YWxpZC5cbiAgICAgKi9cbiAgICBpbnZhbGlkOiB7XG4gICAgICBub3RpZnk6IHRydWUsXG4gICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgb2JzZXJ2ZXI6ICdfaW52YWxpZENoYW5nZWQnXG4gICAgfSxcbiAgfSxcblxuICByZWdpc3RlcmVkOiBmdW5jdGlvbigpIHtcbiAgICBJcm9uVmFsaWRhdGFibGVCZWhhdmlvck1ldGEgPSBuZXcgSXJvbk1ldGEoe3R5cGU6ICd2YWxpZGF0b3InfSk7XG4gIH0sXG5cbiAgX2ludmFsaWRDaGFuZ2VkOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5pbnZhbGlkKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnYXJpYS1pbnZhbGlkJywgJ3RydWUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaW52YWxpZCcpO1xuICAgIH1cbiAgfSxcblxuICAvKiBSZWNvbXB1dGUgdGhpcyBldmVyeSB0aW1lIGl0J3MgbmVlZGVkLCBiZWNhdXNlIHdlIGRvbid0IGtub3cgaWYgdGhlXG4gICAqIHVuZGVybHlpbmcgSXJvblZhbGlkYXRhYmxlQmVoYXZpb3JNZXRhIGhhcyBjaGFuZ2VkLiAqL1xuICBnZXQgX3ZhbGlkYXRvcigpIHtcbiAgICByZXR1cm4gSXJvblZhbGlkYXRhYmxlQmVoYXZpb3JNZXRhICYmXG4gICAgICAgIElyb25WYWxpZGF0YWJsZUJlaGF2aW9yTWV0YS5ieUtleSh0aGlzLnZhbGlkYXRvcik7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbGlkYXRvciBgdmFsaWRhdG9yYCBleGlzdHMuXG4gICAqL1xuICBoYXNWYWxpZGF0b3I6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl92YWxpZGF0b3IgIT0gbnVsbDtcbiAgfSxcblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBgdmFsdWVgIGlzIHZhbGlkLCBhbmQgdXBkYXRlcyBgaW52YWxpZGAuIElmIHlvdSB3YW50XG4gICAqIHlvdXIgZWxlbWVudCB0byBoYXZlIGN1c3RvbSB2YWxpZGF0aW9uIGxvZ2ljLCBkbyBub3Qgb3ZlcnJpZGUgdGhpcyBtZXRob2Q7XG4gICAqIG92ZXJyaWRlIGBfZ2V0VmFsaWRpdHkodmFsdWUpYCBpbnN0ZWFkLlxuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB2YWx1ZSBEZXByZWNhdGVkOiBUaGUgdmFsdWUgdG8gYmUgdmFsaWRhdGVkLiBCeSBkZWZhdWx0LFxuICAgKiBpdCBpcyBwYXNzZWQgdG8gdGhlIHZhbGlkYXRvcidzIGB2YWxpZGF0ZSgpYCBmdW5jdGlvbiwgaWYgYSB2YWxpZGF0b3IgaXNcbiAgIHNldC5cbiAgICogSWYgdGhpcyBhcmd1bWVudCBpcyBub3Qgc3BlY2lmaWVkLCB0aGVuIHRoZSBlbGVtZW50J3MgYHZhbHVlYCBwcm9wZXJ0eVxuICAgKiBpcyB1c2VkLCBpZiBpdCBleGlzdHMuXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgYHZhbHVlYCBpcyB2YWxpZC5cbiAgICovXG4gIHZhbGlkYXRlOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIC8vIElmIHRoaXMgaXMgYW4gZWxlbWVudCB0aGF0IGFsc28gaGFzIGEgdmFsdWUgcHJvcGVydHksIGFuZCB0aGVyZSB3YXNcbiAgICAvLyBubyBleHBsaWNpdCB2YWx1ZSBhcmd1bWVudCBwYXNzZWQsIHVzZSB0aGUgZWxlbWVudCdzIHByb3BlcnR5IGluc3RlYWQuXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgJiYgdGhpcy52YWx1ZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgdGhpcy5pbnZhbGlkID0gIXRoaXMuX2dldFZhbGlkaXR5KHRoaXMudmFsdWUpO1xuICAgIGVsc2VcbiAgICAgIHRoaXMuaW52YWxpZCA9ICF0aGlzLl9nZXRWYWxpZGl0eSh2YWx1ZSk7XG4gICAgcmV0dXJuICF0aGlzLmludmFsaWQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiBgdmFsdWVgIGlzIHZhbGlkLiAgQnkgZGVmYXVsdCwgaXQgaXMgcGFzc2VkXG4gICAqIHRvIHRoZSB2YWxpZGF0b3IncyBgdmFsaWRhdGUoKWAgZnVuY3Rpb24sIGlmIGEgdmFsaWRhdG9yIGlzIHNldC4gWW91XG4gICAqIHNob3VsZCBvdmVycmlkZSB0aGlzIG1ldGhvZCBpZiB5b3Ugd2FudCB0byBpbXBsZW1lbnQgY3VzdG9tIHZhbGlkaXR5XG4gICAqIGxvZ2ljIGZvciB5b3VyIGVsZW1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB2YWx1ZSBUaGUgdmFsdWUgdG8gYmUgdmFsaWRhdGVkLlxuICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIGB2YWx1ZWAgaXMgdmFsaWQuXG4gICAqL1xuXG4gIF9nZXRWYWxpZGl0eTogZnVuY3Rpb24odmFsdWUpIHtcbiAgICBpZiAodGhpcy5oYXNWYWxpZGF0b3IoKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX3ZhbGlkYXRvci52YWxpZGF0ZSh2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-validatable-behavior/iron-validatable-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-input/paper-input-addon-behavior.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@polymer/paper-input/paper-input-addon-behavior.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaperInputAddonBehavior: function() { return /* binding */ PaperInputAddonBehavior; }\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n/**\n * Use `Polymer.PaperInputAddonBehavior` to implement an add-on for\n * `<paper-input-container>`. A add-on appears below the input, and may display\n * information based on the input value and validity such as a character counter\n * or an error message.\n * @polymerBehavior\n */\nvar PaperInputAddonBehavior = {\n  attached: function attached() {\n    this.fire('addon-attached');\n  },\n  /**\n   * The function called by `<paper-input-container>` when the input value or\n   * validity changes.\n   * @param {{\n   *   invalid: boolean,\n   *   inputElement: (Element|undefined),\n   *   value: (string|undefined)\n   * }} state -\n   *     inputElement: The input element.\n   *     value: The input value.\n   *     invalid: True if the input value is invalid.\n   */\n  update: function update(state) {}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvcGFwZXItaW5wdXQvcGFwZXItaW5wdXQtYWRkb24tYmVoYXZpb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvcGFwZXItaW5wdXQvcGFwZXItaW5wdXQtYWRkb24tYmVoYXZpb3IuanM/NTkxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbkBsaWNlbnNlXG5Db3B5cmlnaHQgKGMpIDIwMTUgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdFxuaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMudHh0IFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZVxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQgQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXNcbnBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnRcbmZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9QQVRFTlRTLnR4dFxuKi9cbmltcG9ydCAnQHBvbHltZXIvcG9seW1lci9wb2x5bWVyLWxlZ2FjeS5qcyc7XG5cbi8qKlxuICogVXNlIGBQb2x5bWVyLlBhcGVySW5wdXRBZGRvbkJlaGF2aW9yYCB0byBpbXBsZW1lbnQgYW4gYWRkLW9uIGZvclxuICogYDxwYXBlci1pbnB1dC1jb250YWluZXI+YC4gQSBhZGQtb24gYXBwZWFycyBiZWxvdyB0aGUgaW5wdXQsIGFuZCBtYXkgZGlzcGxheVxuICogaW5mb3JtYXRpb24gYmFzZWQgb24gdGhlIGlucHV0IHZhbHVlIGFuZCB2YWxpZGl0eSBzdWNoIGFzIGEgY2hhcmFjdGVyIGNvdW50ZXJcbiAqIG9yIGFuIGVycm9yIG1lc3NhZ2UuXG4gKiBAcG9seW1lckJlaGF2aW9yXG4gKi9cbmV4cG9ydCBjb25zdCBQYXBlcklucHV0QWRkb25CZWhhdmlvciA9IHtcbiAgYXR0YWNoZWQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuZmlyZSgnYWRkb24tYXR0YWNoZWQnKTtcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGZ1bmN0aW9uIGNhbGxlZCBieSBgPHBhcGVyLWlucHV0LWNvbnRhaW5lcj5gIHdoZW4gdGhlIGlucHV0IHZhbHVlIG9yXG4gICAqIHZhbGlkaXR5IGNoYW5nZXMuXG4gICAqIEBwYXJhbSB7e1xuICAgKiAgIGludmFsaWQ6IGJvb2xlYW4sXG4gICAqICAgaW5wdXRFbGVtZW50OiAoRWxlbWVudHx1bmRlZmluZWQpLFxuICAgKiAgIHZhbHVlOiAoc3RyaW5nfHVuZGVmaW5lZClcbiAgICogfX0gc3RhdGUgLVxuICAgKiAgICAgaW5wdXRFbGVtZW50OiBUaGUgaW5wdXQgZWxlbWVudC5cbiAgICogICAgIHZhbHVlOiBUaGUgaW5wdXQgdmFsdWUuXG4gICAqICAgICBpbnZhbGlkOiBUcnVlIGlmIHRoZSBpbnB1dCB2YWx1ZSBpcyBpbnZhbGlkLlxuICAgKi9cbiAgdXBkYXRlOiBmdW5jdGlvbihzdGF0ZSkge31cblxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-input/paper-input-addon-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-input/paper-input-behavior.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@polymer/paper-input/paper-input-behavior.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaperInputBehavior: function() { return /* binding */ PaperInputBehavior; },\n/* harmony export */   PaperInputBehaviorImpl: function() { return /* binding */ PaperInputBehaviorImpl; },\n/* harmony export */   PaperInputHelper: function() { return /* binding */ PaperInputHelper; }\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_a11y_keys_behavior_iron_a11y_keys_behavior_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js */ \"./node_modules/@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js\");\n/* harmony import */ var _polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/iron-behaviors/iron-control-state.js */ \"./node_modules/@polymer/iron-behaviors/iron-control-state.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n// Generate unique, monotonically increasing IDs for labels (needed by\n// aria-labelledby) and add-ons.\nvar PaperInputHelper = {};\nPaperInputHelper.NextLabelID = 1;\nPaperInputHelper.NextAddonID = 1;\nPaperInputHelper.NextInputID = 1;\n\n/**\n * Use `PaperInputBehavior` to implement inputs with `<paper-input-container>`.\n * This behavior is implemented by `<paper-input>`. It exposes a number of\n * properties from `<paper-input-container>` and `<input is=\"iron-input\">` and\n * they should be bound in your template.\n *\n * The input element can be accessed by the `inputElement` property if you need\n * to access properties or methods that are not exposed.\n * @polymerBehavior PaperInputBehavior\n */\nvar PaperInputBehaviorImpl = {\n  properties: {\n    /**\n     * Fired when the input changes due to user interaction.\n     *\n     * @event change\n     */\n\n    /**\n     * The label for this input. If you're using PaperInputBehavior to\n     * implement your own paper-input-like element, bind this to\n     * `<label>`'s content and `hidden` property, e.g.\n     * `<label hidden$=\"[[!label]]\">[[label]]</label>` in your `template`\n     */\n    label: {\n      type: String\n    },\n    /**\n     * The value for this input. If you're using PaperInputBehavior to\n     * implement your own paper-input-like element, bind this to\n     * the `<iron-input>`'s `bindValue`\n     * property, or the value property of your input that is `notify:true`.\n     * @type {*}\n     */\n    value: {\n      notify: true,\n      type: String\n    },\n    /**\n     * Set to true to disable this input. If you're using PaperInputBehavior to\n     * implement your own paper-input-like element, bind this to\n     * both the `<paper-input-container>`'s and the input's `disabled` property.\n     */\n    disabled: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Returns true if the value is invalid. If you're using PaperInputBehavior\n     * to implement your own paper-input-like element, bind this to both the\n     * `<paper-input-container>`'s and the input's `invalid` property.\n     *\n     * If `autoValidate` is true, the `invalid` attribute is managed\n     * automatically, which can clobber attempts to manage it manually.\n     */\n    invalid: {\n      type: Boolean,\n      value: false,\n      notify: true\n    },\n    /**\n     * Set this to specify the pattern allowed by `preventInvalidInput`. If\n     * you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\n     * property.\n     */\n    allowedPattern: {\n      type: String\n    },\n    /**\n     * The type of the input. The supported types are the\n     * [native input's\n     * types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_<input>_types).\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the (Polymer 1) `<input is=\"iron-input\">`'s or\n     * (Polymer 2)\n     * `<iron-input>`'s `type` property.\n     */\n    type: {\n      type: String\n    },\n    /**\n     * The datalist of the input (if any). This should match the id of an\n     * existing `<datalist>`. If you're using PaperInputBehavior to implement\n     * your own paper-input-like element, bind this to the `<input\n     * is=\"iron-input\">`'s `list` property.\n     */\n    list: {\n      type: String\n    },\n    /**\n     * A pattern to validate the `input` with. If you're using\n     * PaperInputBehavior to implement your own paper-input-like element, bind\n     * this to the `<input is=\"iron-input\">`'s `pattern` property.\n     */\n    pattern: {\n      type: String\n    },\n    /**\n     * Set to true to mark the input as required. If you're using\n     * PaperInputBehavior to implement your own paper-input-like element, bind\n     * this to the `<input is=\"iron-input\">`'s `required` property.\n     */\n    required: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The error message to display when the input is invalid. If you're using\n     * PaperInputBehavior to implement your own paper-input-like element,\n     * bind this to the `<paper-input-error>`'s content, if using.\n     */\n    errorMessage: {\n      type: String\n    },\n    /**\n     * Set to true to show a character counter.\n     */\n    charCounter: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Set to true to disable the floating label. If you're using\n     * PaperInputBehavior to implement your own paper-input-like element, bind\n     * this to the `<paper-input-container>`'s `noLabelFloat` property.\n     */\n    noLabelFloat: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Set to true to always float the label. If you're using PaperInputBehavior\n     * to implement your own paper-input-like element, bind this to the\n     * `<paper-input-container>`'s `alwaysFloatLabel` property.\n     */\n    alwaysFloatLabel: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Set to true to auto-validate the input value. If you're using\n     * PaperInputBehavior to implement your own paper-input-like element, bind\n     * this to the `<paper-input-container>`'s `autoValidate` property.\n     */\n    autoValidate: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Name of the validator to use. If you're using PaperInputBehavior to\n     * implement your own paper-input-like element, bind this to\n     * the `<input is=\"iron-input\">`'s `validator` property.\n     */\n    validator: {\n      type: String\n    },\n    // HTMLInputElement attributes for binding if needed\n\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `autocomplete`\n     * property.\n     */\n    autocomplete: {\n      type: String,\n      value: 'off'\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `autofocus`\n     * property.\n     *\n     * @type {!boolean}\n     */\n    autofocus: {\n      type: Boolean,\n      observer: '_autofocusChanged'\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `inputmode`\n     * property.\n     */\n    inputmode: {\n      type: String\n    },\n    /**\n     * The minimum length of the input value.\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `minlength`\n     * property.\n     */\n    minlength: {\n      type: Number\n    },\n    /**\n     * The maximum length of the input value.\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `maxlength`\n     * property.\n     */\n    maxlength: {\n      type: Number\n    },\n    /**\n     * The minimum (numeric or date-time) input value.\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `min` property.\n     */\n    min: {\n      type: String\n    },\n    /**\n     * The maximum (numeric or date-time) input value.\n     * Can be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `max` property.\n     */\n    max: {\n      type: String\n    },\n    /**\n     * Limits the numeric or date-time increments.\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `step` property.\n     */\n    step: {\n      type: String\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `name` property.\n     */\n    name: {\n      type: String\n    },\n    /**\n     * A placeholder string in addition to the label. If this is set, the label\n     * will always float.\n     */\n    placeholder: {\n      type: String,\n      // need to set a default so _computeAlwaysFloatLabel is run\n      value: ''\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `readonly`\n     * property.\n     */\n    readonly: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `size` property.\n     */\n    size: {\n      type: Number\n    },\n    // Nonstandard attributes for binding if needed\n\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `autocapitalize`\n     * property.\n     *\n     * @type {string}\n     */\n    autocapitalize: {\n      type: String,\n      value: 'none'\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `autocorrect`\n     * property.\n     */\n    autocorrect: {\n      type: String,\n      value: 'off'\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `autosave`\n     * property, used with type=search.\n     */\n    autosave: {\n      type: String\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `results` property,\n     * used with type=search.\n     */\n    results: {\n      type: Number\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the `<input is=\"iron-input\">`'s `accept` property,\n     * used with type=file.\n     */\n    accept: {\n      type: String\n    },\n    /**\n     * If you're using PaperInputBehavior to implement your own paper-input-like\n     * element, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\n     * used with type=file.\n     */\n    multiple: {\n      type: Boolean\n    },\n    /** @private */\n    _ariaDescribedBy: {\n      type: String,\n      value: ''\n    },\n    /** @private */\n    _ariaLabelledBy: {\n      type: String,\n      value: ''\n    },\n    /** @private */\n    _inputId: {\n      type: String,\n      value: ''\n    }\n  },\n  listeners: {\n    'addon-attached': '_onAddonAttached'\n  },\n  /**\n   * @type {!Object}\n   */\n  keyBindings: {\n    'shift+tab:keydown': '_onShiftTabDown'\n  },\n  /** @private */\n  hostAttributes: {\n    tabindex: 0\n  },\n  /**\n   * Returns a reference to the input element.\n   * @return {!HTMLElement}\n   */\n  get inputElement() {\n    // Chrome generates audit errors if an <input type=\"password\"> has a\n    // duplicate ID, which is almost always true in Shady DOM. Generate\n    // a unique ID instead.\n    if (!this.$) {\n      this.$ = {};\n    }\n    if (!this.$.input) {\n      this._generateInputId();\n      this.$.input = this.$$('#' + this._inputId);\n    }\n    return this.$.input;\n  },\n  /**\n   * Returns a reference to the focusable element.\n   * @return {!HTMLElement}\n   */\n  get _focusableElement() {\n    return this.inputElement;\n  },\n  /** @override */\n  created: function created() {\n    // These types have some default placeholder text; overlapping\n    // the label on top of it looks terrible. Auto-float the label in this case.\n    this._typesThatHaveText = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week', 'file'];\n  },\n  /** @override */\n  attached: function attached() {\n    this._updateAriaLabelledBy();\n\n    // In the 2.0 version of the element, this is handled in `onIronInputReady`,\n    // i.e. after the native input has finished distributing. In the 1.0\n    // version, the input is in the shadow tree, so it's already available.\n    if (!_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_4__.PolymerElement && this.inputElement && this._typesThatHaveText.indexOf(this.inputElement.type) !== -1) {\n      this.alwaysFloatLabel = true;\n    }\n  },\n  _appendStringWithSpace: function _appendStringWithSpace(str, more) {\n    if (str) {\n      str = str + ' ' + more;\n    } else {\n      str = more;\n    }\n    return str;\n  },\n  _onAddonAttached: function _onAddonAttached(event) {\n    var target = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__.dom)(event).rootTarget;\n    if (target.id) {\n      this._ariaDescribedBy = this._appendStringWithSpace(this._ariaDescribedBy, target.id);\n    } else {\n      var id = 'paper-input-add-on-' + PaperInputHelper.NextAddonID++;\n      target.id = id;\n      this._ariaDescribedBy = this._appendStringWithSpace(this._ariaDescribedBy, id);\n    }\n  },\n  /**\n   * Validates the input element and sets an error style if needed.\n   *\n   * @return {boolean}\n   */\n  validate: function validate() {\n    return this.inputElement.validate();\n  },\n  /**\n   * Forward focus to inputElement. Overriden from IronControlState.\n   */\n  _focusBlurHandler: function _focusBlurHandler(event) {\n    _polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__.IronControlState._focusBlurHandler.call(this, event);\n\n    // Forward the focus to the nested input.\n    if (this.focused && !this._shiftTabPressed && this._focusableElement) {\n      this._focusableElement.focus();\n    }\n  },\n  /**\n   * Handler that is called when a shift+tab keypress is detected by the menu.\n   *\n   * @param {CustomEvent} event A key combination event.\n   */\n  _onShiftTabDown: function _onShiftTabDown(event) {\n    var oldTabIndex = this.getAttribute('tabindex');\n    this._shiftTabPressed = true;\n    this.setAttribute('tabindex', '-1');\n    this.async(function () {\n      this.setAttribute('tabindex', oldTabIndex);\n      this._shiftTabPressed = false;\n    }, 1);\n  },\n  /**\n   * If `autoValidate` is true, then validates the element.\n   */\n  _handleAutoValidate: function _handleAutoValidate() {\n    if (this.autoValidate) this.validate();\n  },\n  /**\n   * Restores the cursor to its original position after updating the value.\n   * @param {string} newValue The value that should be saved.\n   */\n  updateValueAndPreserveCaret: function updateValueAndPreserveCaret(newValue) {\n    // Not all elements might have selection, and even if they have the\n    // right properties, accessing them might throw an exception (like for\n    // <input type=number>)\n    try {\n      var start = this.inputElement.selectionStart;\n      this.value = newValue;\n\n      // The cursor automatically jumps to the end after re-setting the value,\n      // so restore it to its original position.\n      this.inputElement.selectionStart = start;\n      this.inputElement.selectionEnd = start;\n    } catch (e) {\n      // Just set the value and give up on the caret.\n      this.value = newValue;\n    }\n  },\n  _computeAlwaysFloatLabel: function _computeAlwaysFloatLabel(alwaysFloatLabel, placeholder) {\n    return placeholder || alwaysFloatLabel;\n  },\n  _updateAriaLabelledBy: function _updateAriaLabelledBy() {\n    var label = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__.dom)(this.root).querySelector('label');\n    if (!label) {\n      this._ariaLabelledBy = '';\n      return;\n    }\n    var labelledBy;\n    if (label.id) {\n      labelledBy = label.id;\n    } else {\n      labelledBy = 'paper-input-label-' + PaperInputHelper.NextLabelID++;\n      label.id = labelledBy;\n    }\n    this._ariaLabelledBy = labelledBy;\n  },\n  _generateInputId: function _generateInputId() {\n    if (!this._inputId || this._inputId === '') {\n      this._inputId = 'input-' + PaperInputHelper.NextInputID++;\n    }\n  },\n  _onChange: function _onChange(event) {\n    // In the Shadow DOM, the `change` event is not leaked into the\n    // ancestor tree, so we must do this manually.\n    // See\n    // https://w3c.github.io/webcomponents/spec/shadow/#events-that-are-not-leaked-into-ancestor-trees.\n    if (this.shadowRoot) {\n      this.fire(event.type, {\n        sourceEvent: event\n      }, {\n        node: this,\n        bubbles: event.bubbles,\n        cancelable: event.cancelable\n      });\n    }\n  },\n  _autofocusChanged: function _autofocusChanged() {\n    // Firefox doesn't respect the autofocus attribute if it's applied after\n    // the page is loaded (Chrome/WebKit do respect it), preventing an\n    // autofocus attribute specified in markup from taking effect when the\n    // element is upgraded. As a workaround, if the autofocus property is set,\n    // and the focus hasn't already been moved elsewhere, we take focus.\n    if (this.autofocus && this._focusableElement) {\n      // In IE 11, the default document.activeElement can be the page's\n      // outermost html element, but there are also cases (under the\n      // polyfill?) in which the activeElement is not a real HTMLElement, but\n      // just a plain object. We identify the latter case as having no valid\n      // activeElement.\n      var activeElement = document.activeElement;\n      var isActiveElementValid = activeElement instanceof HTMLElement;\n\n      // Has some other element has already taken the focus?\n      var isSomeElementActive = isActiveElementValid && activeElement !== document.body && activeElement !== document.documentElement; /* IE 11 */\n      if (!isSomeElementActive) {\n        // No specific element has taken the focus yet, so we can take it.\n        this._focusableElement.focus();\n      }\n    }\n  }\n};\n\n/** @polymerBehavior */\nvar PaperInputBehavior = [_polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__.IronControlState, _polymer_iron_a11y_keys_behavior_iron_a11y_keys_behavior_js__WEBPACK_IMPORTED_MODULE_1__.IronA11yKeysBehavior, PaperInputBehaviorImpl];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-input/paper-input-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-input/paper-input-char-counter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@polymer/paper-input/paper-input-char-counter.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_paper_styles_typography_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/paper-styles/typography.js */ \"./node_modules/@polymer/paper-styles/typography.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/* harmony import */ var _paper_input_addon_behavior_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./paper-input-addon-behavior.js */ \"./node_modules/@polymer/paper-input/paper-input-addon-behavior.js\");\n\nvar _templateObject;\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n/*\n`<paper-input-char-counter>` is a character counter for use with\n`<paper-input-container>`. It shows the number of characters entered in the\ninput and the max length if it is specified.\n\n    <paper-input-container>\n      <input maxlength=\"20\">\n      <paper-input-char-counter></paper-input-char-counter>\n    </paper-input-container>\n\n### Styling\n\nThe following mixin is available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-char-counter` | Mixin applied to the element | `{}`\n*/\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__.Polymer)({\n  /** @override */\n  _template: (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__.html)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        float: right;\\n\\n        @apply --paper-font-caption;\\n        @apply --paper-input-char-counter;\\n      }\\n\\n      :host([hidden]) {\\n        display: none !important;\\n      }\\n\\n      :host(:dir(rtl)) {\\n        float: left;\\n      }\\n    </style>\\n\\n    <span>[[_charCounterStr]]</span>\\n\"]))),\n  is: 'paper-input-char-counter',\n  behaviors: [_paper_input_addon_behavior_js__WEBPACK_IMPORTED_MODULE_5__.PaperInputAddonBehavior],\n  properties: {\n    _charCounterStr: {\n      type: String,\n      value: '0'\n    }\n  },\n  /**\n   * This overrides the update function in PaperInputAddonBehavior.\n   * @param {{\n   *   inputElement: (Element|undefined),\n   *   value: (string|undefined),\n   *   invalid: boolean\n   * }} state -\n   *     inputElement: The input element.\n   *     value: The input value.\n   *     invalid: True if the input value is invalid.\n   */\n  update: function update(state) {\n    if (!state.inputElement) {\n      return;\n    }\n    state.value = state.value || '';\n    var counter = state.value.toString().length.toString();\n    if (state.inputElement.hasAttribute('maxlength')) {\n      counter += '/' + state.inputElement.getAttribute('maxlength');\n    }\n    this._charCounterStr = counter;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvcGFwZXItaW5wdXQvcGFwZXItaW5wdXQtY2hhci1jb3VudGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFzQkE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcG9seW1lci9wYXBlci1pbnB1dC9wYXBlci1pbnB1dC1jaGFyLWNvdW50ZXIuanM/YjZkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbkBsaWNlbnNlXG5Db3B5cmlnaHQgKGMpIDIwMTUgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdFxuaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMudHh0IFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZVxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQgQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXNcbnBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnRcbmZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9QQVRFTlRTLnR4dFxuKi9cbmltcG9ydCAnQHBvbHltZXIvcG9seW1lci9wb2x5bWVyLWxlZ2FjeS5qcyc7XG5pbXBvcnQgJ0Bwb2x5bWVyL3BhcGVyLXN0eWxlcy90eXBvZ3JhcGh5LmpzJztcblxuaW1wb3J0IHtQb2x5bWVyfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi9sZWdhY3kvcG9seW1lci1mbi5qcyc7XG5pbXBvcnQge2h0bWx9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL2h0bWwtdGFnLmpzJztcblxuaW1wb3J0IHtQYXBlcklucHV0QWRkb25CZWhhdmlvcn0gZnJvbSAnLi9wYXBlci1pbnB1dC1hZGRvbi1iZWhhdmlvci5qcyc7XG5cbi8qXG5gPHBhcGVyLWlucHV0LWNoYXItY291bnRlcj5gIGlzIGEgY2hhcmFjdGVyIGNvdW50ZXIgZm9yIHVzZSB3aXRoXG5gPHBhcGVyLWlucHV0LWNvbnRhaW5lcj5gLiBJdCBzaG93cyB0aGUgbnVtYmVyIG9mIGNoYXJhY3RlcnMgZW50ZXJlZCBpbiB0aGVcbmlucHV0IGFuZCB0aGUgbWF4IGxlbmd0aCBpZiBpdCBpcyBzcGVjaWZpZWQuXG5cbiAgICA8cGFwZXItaW5wdXQtY29udGFpbmVyPlxuICAgICAgPGlucHV0IG1heGxlbmd0aD1cIjIwXCI+XG4gICAgICA8cGFwZXItaW5wdXQtY2hhci1jb3VudGVyPjwvcGFwZXItaW5wdXQtY2hhci1jb3VudGVyPlxuICAgIDwvcGFwZXItaW5wdXQtY29udGFpbmVyPlxuXG4jIyMgU3R5bGluZ1xuXG5UaGUgZm9sbG93aW5nIG1peGluIGlzIGF2YWlsYWJsZSBmb3Igc3R5bGluZzpcblxuQ3VzdG9tIHByb3BlcnR5IHwgRGVzY3JpcHRpb24gfCBEZWZhdWx0XG4tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLVxuYC0tcGFwZXItaW5wdXQtY2hhci1jb3VudGVyYCB8IE1peGluIGFwcGxpZWQgdG8gdGhlIGVsZW1lbnQgfCBge31gXG4qL1xuUG9seW1lcih7XG4gIC8qKiBAb3ZlcnJpZGUgKi9cbiAgX3RlbXBsYXRlOiBodG1sYFxuICAgIDxzdHlsZT5cbiAgICAgIDpob3N0IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG5cbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jYXB0aW9uO1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1pbnB1dC1jaGFyLWNvdW50ZXI7XG4gICAgICB9XG5cbiAgICAgIDpob3N0KFtoaWRkZW5dKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgIH1cblxuICAgICAgOmhvc3QoOmRpcihydGwpKSB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgfVxuICAgIDwvc3R5bGU+XG5cbiAgICA8c3Bhbj5bW19jaGFyQ291bnRlclN0cl1dPC9zcGFuPlxuYCxcblxuICBpczogJ3BhcGVyLWlucHV0LWNoYXItY291bnRlcicsXG4gIGJlaGF2aW9yczogW1BhcGVySW5wdXRBZGRvbkJlaGF2aW9yXSxcbiAgcHJvcGVydGllczoge19jaGFyQ291bnRlclN0cjoge3R5cGU6IFN0cmluZywgdmFsdWU6ICcwJ319LFxuXG4gIC8qKlxuICAgKiBUaGlzIG92ZXJyaWRlcyB0aGUgdXBkYXRlIGZ1bmN0aW9uIGluIFBhcGVySW5wdXRBZGRvbkJlaGF2aW9yLlxuICAgKiBAcGFyYW0ge3tcbiAgICogICBpbnB1dEVsZW1lbnQ6IChFbGVtZW50fHVuZGVmaW5lZCksXG4gICAqICAgdmFsdWU6IChzdHJpbmd8dW5kZWZpbmVkKSxcbiAgICogICBpbnZhbGlkOiBib29sZWFuXG4gICAqIH19IHN0YXRlIC1cbiAgICogICAgIGlucHV0RWxlbWVudDogVGhlIGlucHV0IGVsZW1lbnQuXG4gICAqICAgICB2YWx1ZTogVGhlIGlucHV0IHZhbHVlLlxuICAgKiAgICAgaW52YWxpZDogVHJ1ZSBpZiB0aGUgaW5wdXQgdmFsdWUgaXMgaW52YWxpZC5cbiAgICovXG4gIHVwZGF0ZTogZnVuY3Rpb24oc3RhdGUpIHtcbiAgICBpZiAoIXN0YXRlLmlucHV0RWxlbWVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN0YXRlLnZhbHVlID0gc3RhdGUudmFsdWUgfHwgJyc7XG5cbiAgICB2YXIgY291bnRlciA9IHN0YXRlLnZhbHVlLnRvU3RyaW5nKCkubGVuZ3RoLnRvU3RyaW5nKCk7XG5cbiAgICBpZiAoc3RhdGUuaW5wdXRFbGVtZW50Lmhhc0F0dHJpYnV0ZSgnbWF4bGVuZ3RoJykpIHtcbiAgICAgIGNvdW50ZXIgKz0gJy8nICsgc3RhdGUuaW5wdXRFbGVtZW50LmdldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJyk7XG4gICAgfVxuXG4gICAgdGhpcy5fY2hhckNvdW50ZXJTdHIgPSBjb3VudGVyO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-input/paper-input-char-counter.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-input/paper-input-container.js":
/*!********************************************************************!*\
  !*** ./node_modules/@polymer/paper-input/paper-input-container.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_flex_layout_iron_flex_layout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/iron-flex-layout/iron-flex-layout.js */ \"./node_modules/@polymer/iron-flex-layout/iron-flex-layout.js\");\n/* harmony import */ var _polymer_paper_styles_default_theme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/paper-styles/default-theme.js */ \"./node_modules/@polymer/paper-styles/default-theme.js\");\n/* harmony import */ var _polymer_paper_styles_typography_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/paper-styles/typography.js */ \"./node_modules/@polymer/paper-styles/typography.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @polymer/polymer/lib/utils/case-map.js */ \"./node_modules/@polymer/polymer/lib/utils/case-map.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n\nvar _templateObject, _templateObject2;\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n\n\nvar template = (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_8__.html)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n<custom-style>\\n  <style is=\\\"custom-style\\\">\\n    html {\\n      --paper-input-container-shared-input-style: {\\n        position: relative; /* to make a stacking context */\\n        outline: none;\\n        box-shadow: none;\\n        padding: 0;\\n        margin: 0;\\n        width: 100%;\\n        max-width: 100%;\\n        background: transparent;\\n        border: none;\\n        color: var(--paper-input-container-input-color, var(--primary-text-color));\\n        -webkit-appearance: none;\\n        text-align: inherit;\\n        vertical-align: var(--paper-input-container-input-align, bottom);\\n\\n        @apply --paper-font-subhead;\\n      };\\n    }\\n  </style>\\n</custom-style>\\n\"])));\ntemplate.setAttribute('style', 'display: none;');\ndocument.head.appendChild(template.content);\n\n/*\n`<paper-input-container>` is a container for a `<label>`, an `<iron-input>` or\n`<textarea>` and optional add-on elements such as an error message or character\ncounter, used to implement Material Design text fields.\n\nFor example:\n\n    <paper-input-container>\n      <label slot=\"label\">Your name</label>\n      <iron-input slot=\"input\">\n        <input>\n      </iron-input>\n      // In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">`\ninstead of the above.\n    </paper-input-container>\n\nYou can style the nested `<input>` however you want; if you want it to look like\na Material Design input, you can style it with the\n--paper-input-container-shared-input-style mixin.\n\nDo not wrap `<paper-input-container>` around elements that already include it,\nsuch as `<paper-input>`. Doing so may cause events to bounce infinitely between\nthe container and its contained element.\n\n### Listening for input changes\n\nBy default, it listens for changes on the `bind-value` attribute on its children\nnodes and perform tasks such as auto-validating and label styling when the\n`bind-value` changes. You can configure the attribute it listens to with the\n`attr-for-value` attribute.\n\n### Using a custom input element\n\nYou can use a custom input element in a `<paper-input-container>`, for example\nto implement a compound input field like a social security number input. The\ncustom input element should have the `paper-input-input` class, have a\n`notify:true` value property and optionally implements\n`Polymer.IronValidatableBehavior` if it is validatable.\n\n    <paper-input-container attr-for-value=\"ssn-value\">\n      <label slot=\"label\">Social security number</label>\n      <ssn-input slot=\"input\" class=\"paper-input-input\"></ssn-input>\n    </paper-input-container>\n\n\nIf you're using a `<paper-input-container>` imperatively, it's important to make\nsure that you attach its children (the `iron-input` and the optional `label`)\nbefore you attach the `<paper-input-container>` itself, so that it can be set up\ncorrectly.\n\n### Validation\n\nIf the `auto-validate` attribute is set, the input container will validate the\ninput and update the container styling when the input value changes.\n\n### Add-ons\n\nAdd-ons are child elements of a `<paper-input-container>` with the `add-on`\nattribute and implements the `Polymer.PaperInputAddonBehavior` behavior. They\nare notified when the input value or validity changes, and may implement\nfunctionality such as error messages or character counters. They appear at the\nbottom of the input.\n\n### Prefixes and suffixes\nThese are child elements of a `<paper-input-container>` with the `prefix`\nor `suffix` attribute, and are displayed inline with the input, before or after.\n\n    <paper-input-container>\n      <div slot=\"prefix\">$</div>\n      <label slot=\"label\">Total</label>\n      <iron-input slot=\"input\">\n        <input>\n      </iron-input>\n      // In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">`\ninstead of the above. <paper-icon-button slot=\"suffix\"\nicon=\"clear\"></paper-icon-button>\n    </paper-input-container>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-color` | Label and underline color when the input is not focused | `--secondary-text-color`\n`--paper-input-container-focus-color` | Label and underline color when the input is focused | `--primary-color`\n`--paper-input-container-invalid-color` | Label and underline color when the input is is invalid | `--error-color`\n`--paper-input-container-input-color` | Input foreground color | `--primary-text-color`\n`--paper-input-container` | Mixin applied to the container | `{}`\n`--paper-input-container-disabled` | Mixin applied to the container when it's disabled | `{}`\n`--paper-input-container-label` | Mixin applied to the label | `{}`\n`--paper-input-container-label-focus` | Mixin applied to the label when the input is focused | `{}`\n`--paper-input-container-label-floating` | Mixin applied to the label when floating | `{}`\n`--paper-input-container-input` | Mixin applied to the input | `{}`\n`--paper-input-container-input-align` | The vertical-align property of the input | `bottom`\n`--paper-input-container-input-disabled` | Mixin applied to the input when the component is disabled | `{}`\n`--paper-input-container-input-focus` | Mixin applied to the input when focused | `{}`\n`--paper-input-container-input-invalid` | Mixin applied to the input when invalid | `{}`\n`--paper-input-container-input-webkit-spinner` | Mixin applied to the webkit spinner | `{}`\n`--paper-input-container-input-webkit-clear` | Mixin applied to the webkit clear button | `{}`\n`--paper-input-container-input-webkit-calendar-picker-indicator` | Mixin applied to the webkit calendar picker indicator | `{}`\n`--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer clear button | `{}`\n`--paper-input-container-underline` | Mixin applied to the underline | `{}`\n`--paper-input-container-underline-focus` | Mixin applied to the underline when the input is focused | `{}`\n`--paper-input-container-underline-disabled` | Mixin applied to the underline when the input is disabled | `{}`\n`--paper-input-prefix` | Mixin applied to the input prefix | `{}`\n`--paper-input-suffix` | Mixin applied to the input suffix | `{}`\n`--paper-input-container-label-before` | Mixin applied to label before pseudo element | {}\n`--paper-input-container-label-after` | Mixin applied to label after pseudo element (useful for required asterisk) | {}\n\nThis element is `display:block` by default, but you can set the `inline`\nattribute to make it `display:inline-block`.\n*/\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_5__.Polymer)({\n  /** @override */\n  _template: (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_8__.html)(_templateObject2 || (_templateObject2 = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n    <style>\\n      :host {\\n        display: block;\\n        padding: 8px 0;\\n        @apply --paper-input-container;\\n      }\\n\\n      :host([inline]) {\\n        display: inline-block;\\n      }\\n\\n      :host([disabled]) {\\n        pointer-events: none;\\n        opacity: 0.33;\\n\\n        @apply --paper-input-container-disabled;\\n      }\\n\\n      :host([hidden]) {\\n        display: none !important;\\n      }\\n\\n      [hidden] {\\n        display: none !important;\\n      }\\n\\n      .floated-label-placeholder {\\n        @apply --paper-font-caption;\\n      }\\n\\n      .underline {\\n        height: 2px;\\n        position: relative;\\n      }\\n\\n      .focused-line {\\n        @apply --layout-fit;\\n        border-bottom: 2px solid var(--paper-input-container-focus-color, var(--primary-color));\\n\\n        -webkit-transform-origin: center center;\\n        transform-origin: center center;\\n        -webkit-transform: scale3d(0,1,1);\\n        transform: scale3d(0,1,1);\\n\\n        @apply --paper-input-container-underline-focus;\\n      }\\n\\n      .underline.is-highlighted .focused-line {\\n        -webkit-transform: none;\\n        transform: none;\\n        -webkit-transition: -webkit-transform 0.25s;\\n        transition: transform 0.25s;\\n\\n        @apply --paper-transition-easing;\\n      }\\n\\n      .underline.is-invalid .focused-line {\\n        border-color: var(--paper-input-container-invalid-color, var(--error-color));\\n        -webkit-transform: none;\\n        transform: none;\\n        -webkit-transition: -webkit-transform 0.25s;\\n        transition: transform 0.25s;\\n\\n        @apply --paper-transition-easing;\\n      }\\n\\n      .unfocused-line {\\n        @apply --layout-fit;\\n        border-bottom: 1px solid var(--paper-input-container-color, var(--secondary-text-color));\\n        @apply --paper-input-container-underline;\\n      }\\n\\n      :host([disabled]) .unfocused-line {\\n        border-bottom: 1px dashed;\\n        border-color: var(--paper-input-container-color, var(--secondary-text-color));\\n        @apply --paper-input-container-underline-disabled;\\n      }\\n\\n      .input-wrapper {\\n        @apply --layout-horizontal;\\n        @apply --layout-center;\\n        position: relative;\\n      }\\n\\n      .input-content {\\n        @apply --layout-flex-auto;\\n        @apply --layout-relative;\\n        max-width: 100%;\\n      }\\n\\n      .input-content ::slotted(label),\\n      .input-content ::slotted(.paper-input-label) {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        font: inherit;\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n        -webkit-transition: -webkit-transform 0.25s, width 0.25s;\\n        transition: transform 0.25s, width 0.25s;\\n        -webkit-transform-origin: left top;\\n        transform-origin: left top;\\n        /* Fix for safari not focusing 0-height date/time inputs with -webkit-apperance: none; */\\n        min-height: 1px;\\n\\n        @apply --paper-font-common-nowrap;\\n        @apply --paper-font-subhead;\\n        @apply --paper-input-container-label;\\n        @apply --paper-transition-easing;\\n      }\\n\\n\\n      .input-content ::slotted(label):before,\\n      .input-content ::slotted(.paper-input-label):before {\\n        @apply --paper-input-container-label-before;\\n      }\\n\\n      .input-content ::slotted(label):after,\\n      .input-content ::slotted(.paper-input-label):after {\\n        @apply --paper-input-container-label-after;\\n      }\\n\\n      .input-content.label-is-floating ::slotted(label),\\n      .input-content.label-is-floating ::slotted(.paper-input-label) {\\n        -webkit-transform: translateY(-75%) scale(0.75);\\n        transform: translateY(-75%) scale(0.75);\\n\\n        /* Since we scale to 75/100 of the size, we actually have 100/75 of the\\n        original space now available */\\n        width: 133%;\\n\\n        @apply --paper-input-container-label-floating;\\n      }\\n\\n      :host(:dir(rtl)) .input-content.label-is-floating ::slotted(label),\\n      :host(:dir(rtl)) .input-content.label-is-floating ::slotted(.paper-input-label) {\\n        right: 0;\\n        left: auto;\\n        -webkit-transform-origin: right top;\\n        transform-origin: right top;\\n      }\\n\\n      .input-content.label-is-highlighted ::slotted(label),\\n      .input-content.label-is-highlighted ::slotted(.paper-input-label) {\\n        color: var(--paper-input-container-focus-color, var(--primary-color));\\n\\n        @apply --paper-input-container-label-focus;\\n      }\\n\\n      .input-content.is-invalid ::slotted(label),\\n      .input-content.is-invalid ::slotted(.paper-input-label) {\\n        color: var(--paper-input-container-invalid-color, var(--error-color));\\n      }\\n\\n      .input-content.label-is-hidden ::slotted(label),\\n      .input-content.label-is-hidden ::slotted(.paper-input-label) {\\n        visibility: hidden;\\n      }\\n\\n      .input-content ::slotted(input),\\n      .input-content ::slotted(iron-input),\\n      .input-content ::slotted(textarea),\\n      .input-content ::slotted(iron-autogrow-textarea),\\n      .input-content ::slotted(.paper-input-input) {\\n        @apply --paper-input-container-shared-input-style;\\n        /* The apply shim doesn't apply the nested color custom property,\\n          so we have to re-apply it here. */\\n        color: var(--paper-input-container-input-color, var(--primary-text-color));\\n        @apply --paper-input-container-input;\\n      }\\n\\n      .input-content ::slotted(input)::-webkit-outer-spin-button,\\n      .input-content ::slotted(input)::-webkit-inner-spin-button {\\n        @apply --paper-input-container-input-webkit-spinner;\\n      }\\n\\n      .input-content.focused ::slotted(input),\\n      .input-content.focused ::slotted(iron-input),\\n      .input-content.focused ::slotted(textarea),\\n      .input-content.focused ::slotted(iron-autogrow-textarea),\\n      .input-content.focused ::slotted(.paper-input-input) {\\n        @apply --paper-input-container-input-focus;\\n      }\\n\\n      .input-content.is-invalid ::slotted(input),\\n      .input-content.is-invalid ::slotted(iron-input),\\n      .input-content.is-invalid ::slotted(textarea),\\n      .input-content.is-invalid ::slotted(iron-autogrow-textarea),\\n      .input-content.is-invalid ::slotted(.paper-input-input) {\\n        @apply --paper-input-container-input-invalid;\\n      }\\n\\n      .prefix ::slotted(*) {\\n        display: inline-block;\\n        @apply --paper-font-subhead;\\n        @apply --layout-flex-none;\\n        @apply --paper-input-prefix;\\n      }\\n\\n      .suffix ::slotted(*) {\\n        display: inline-block;\\n        @apply --paper-font-subhead;\\n        @apply --layout-flex-none;\\n\\n        @apply --paper-input-suffix;\\n      }\\n\\n      /* Firefox sets a min-width on the input, which can cause layout issues */\\n      .input-content ::slotted(input) {\\n        min-width: 0;\\n      }\\n\\n      .input-content ::slotted(textarea) {\\n        resize: none;\\n      }\\n\\n      .add-on-content {\\n        position: relative;\\n      }\\n\\n      .add-on-content.is-invalid ::slotted(*) {\\n        color: var(--paper-input-container-invalid-color, var(--error-color));\\n      }\\n\\n      .add-on-content.is-highlighted ::slotted(*) {\\n        color: var(--paper-input-container-focus-color, var(--primary-color));\\n      }\\n    </style>\\n\\n    <div class=\\\"floated-label-placeholder\\\" aria-hidden=\\\"true\\\" hidden=\\\"[[noLabelFloat]]\\\">&nbsp;</div>\\n\\n    <div class=\\\"input-wrapper\\\">\\n      <span class=\\\"prefix\\\"><slot name=\\\"prefix\\\"></slot></span>\\n\\n      <div class$=\\\"[[_computeInputContentClass(noLabelFloat,alwaysFloatLabel,focused,invalid,_inputHasContent)]]\\\" id=\\\"labelAndInputContainer\\\">\\n        <slot name=\\\"label\\\"></slot>\\n        <slot name=\\\"input\\\"></slot>\\n      </div>\\n\\n      <span class=\\\"suffix\\\"><slot name=\\\"suffix\\\"></slot></span>\\n    </div>\\n\\n    <div class$=\\\"[[_computeUnderlineClass(focused,invalid)]]\\\">\\n      <div class=\\\"unfocused-line\\\"></div>\\n      <div class=\\\"focused-line\\\"></div>\\n    </div>\\n\\n    <div class$=\\\"[[_computeAddOnContentClass(focused,invalid)]]\\\">\\n      <slot name=\\\"add-on\\\"></slot>\\n    </div>\\n\"]))),\n  is: 'paper-input-container',\n  properties: {\n    /**\n     * Set to true to disable the floating label. The label disappears when the\n     * input value is not null.\n     */\n    noLabelFloat: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Set to true to always float the floating label.\n     */\n    alwaysFloatLabel: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The attribute to listen for value changes on.\n     */\n    attrForValue: {\n      type: String,\n      value: 'bind-value'\n    },\n    /**\n     * Set to true to auto-validate the input value when it changes.\n     */\n    autoValidate: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * True if the input is invalid. This property is set automatically when the\n     * input value changes if auto-validating, or when the `iron-input-validate`\n     * event is heard from a child.\n     */\n    invalid: {\n      observer: '_invalidChanged',\n      type: Boolean,\n      value: false\n    },\n    /**\n     * True if the input has focus.\n     */\n    focused: {\n      readOnly: true,\n      type: Boolean,\n      value: false,\n      notify: true\n    },\n    _addons: {\n      type: Array\n      // do not set a default value here intentionally - it will be initialized\n      // lazily when a distributed child is attached, which may occur before\n      // configuration for this element in polyfill.\n    },\n\n    _inputHasContent: {\n      type: Boolean,\n      value: false\n    },\n    _inputSelector: {\n      type: String,\n      value: 'input,iron-input,textarea,.paper-input-input'\n    },\n    _boundOnFocus: {\n      type: Function,\n      value: function value() {\n        return this._onFocus.bind(this);\n      }\n    },\n    _boundOnBlur: {\n      type: Function,\n      value: function value() {\n        return this._onBlur.bind(this);\n      }\n    },\n    _boundOnInput: {\n      type: Function,\n      value: function value() {\n        return this._onInput.bind(this);\n      }\n    },\n    _boundValueChanged: {\n      type: Function,\n      value: function value() {\n        return this._onValueChanged.bind(this);\n      }\n    }\n  },\n  listeners: {\n    'addon-attached': '_onAddonAttached',\n    'iron-input-validate': '_onIronInputValidate'\n  },\n  get _valueChangedEvent() {\n    return this.attrForValue + '-changed';\n  },\n  get _propertyForValue() {\n    return (0,_polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_7__.dashToCamelCase)(this.attrForValue);\n  },\n  get _inputElement() {\n    return (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_6__.dom)(this).querySelector(this._inputSelector);\n  },\n  get _inputElementValue() {\n    return this._inputElement[this._propertyForValue] || this._inputElement.value;\n  },\n  /** @override */\n  ready: function ready() {\n    // Paper-input treats a value of undefined differently at startup than\n    // the rest of the time (specifically: it does not validate it at startup,\n    // but it does after that. We need to track whether the first time we\n    // encounter the value is basically this first time, so that we can validate\n    // it correctly the rest of the time. See\n    // https://github.com/PolymerElements/paper-input/issues/605\n    this.__isFirstValueUpdate = true;\n    if (!this._addons) {\n      this._addons = [];\n    }\n    this.addEventListener('focus', this._boundOnFocus, true);\n    this.addEventListener('blur', this._boundOnBlur, true);\n  },\n  /** @override */\n  attached: function attached() {\n    if (this.attrForValue) {\n      this._inputElement.addEventListener(this._valueChangedEvent, this._boundValueChanged);\n    } else {\n      this.addEventListener('input', this._onInput);\n    }\n\n    // Only validate when attached if the input already has a value.\n    if (this._inputElementValue && this._inputElementValue != '') {\n      this._handleValueAndAutoValidate(this._inputElement);\n    } else {\n      this._handleValue(this._inputElement);\n    }\n  },\n  /** @private */\n  _onAddonAttached: function _onAddonAttached(event) {\n    if (!this._addons) {\n      this._addons = [];\n    }\n    var target = event.target;\n    if (this._addons.indexOf(target) === -1) {\n      this._addons.push(target);\n      if (this.isAttached) {\n        this._handleValue(this._inputElement);\n      }\n    }\n  },\n  /** @private */\n  _onFocus: function _onFocus() {\n    this._setFocused(true);\n  },\n  /** @private */\n  _onBlur: function _onBlur() {\n    this._setFocused(false);\n    this._handleValueAndAutoValidate(this._inputElement);\n  },\n  /** @private */\n  _onInput: function _onInput(event) {\n    this._handleValueAndAutoValidate(event.target);\n  },\n  /** @private */\n  _onValueChanged: function _onValueChanged(event) {\n    var input = event.target;\n\n    // Paper-input treats a value of undefined differently at startup than\n    // the rest of the time (specifically: it does not validate it at startup,\n    // but it does after that. If this is in fact the bootup case, ignore\n    // validation, just this once.\n    if (this.__isFirstValueUpdate) {\n      this.__isFirstValueUpdate = false;\n      if (input.value === undefined || input.value === '') {\n        return;\n      }\n    }\n    this._handleValueAndAutoValidate(event.target);\n  },\n  /** @private */\n  _handleValue: function _handleValue(inputElement) {\n    var value = this._inputElementValue;\n\n    // type=\"number\" hack needed because this.value is empty until it's valid\n    if (value || value === 0 || inputElement.type === 'number' && !inputElement.checkValidity()) {\n      this._inputHasContent = true;\n    } else {\n      this._inputHasContent = false;\n    }\n    this.updateAddons({\n      inputElement: inputElement,\n      value: value,\n      invalid: this.invalid\n    });\n  },\n  /** @private */\n  _handleValueAndAutoValidate: function _handleValueAndAutoValidate(inputElement) {\n    if (this.autoValidate && inputElement) {\n      var valid;\n      if (inputElement.validate) {\n        valid = inputElement.validate(this._inputElementValue);\n      } else {\n        valid = inputElement.checkValidity();\n      }\n      this.invalid = !valid;\n    }\n\n    // Call this last to notify the add-ons.\n    this._handleValue(inputElement);\n  },\n  /** @private */\n  _onIronInputValidate: function _onIronInputValidate(event) {\n    this.invalid = this._inputElement.invalid;\n  },\n  /** @private */\n  _invalidChanged: function _invalidChanged() {\n    if (this._addons) {\n      this.updateAddons({\n        invalid: this.invalid\n      });\n    }\n  },\n  /**\n   * Call this to update the state of add-ons.\n   * @param {Object} state Add-on state.\n   */\n  updateAddons: function updateAddons(state) {\n    for (var addon, index = 0; addon = this._addons[index]; index++) {\n      addon.update(state);\n    }\n  },\n  /** @private */\n  _computeInputContentClass: function _computeInputContentClass(noLabelFloat, alwaysFloatLabel, focused, invalid, _inputHasContent) {\n    var cls = 'input-content';\n    if (!noLabelFloat) {\n      var label = this.querySelector('label');\n      if (alwaysFloatLabel || _inputHasContent) {\n        cls += ' label-is-floating';\n        // If the label is floating, ignore any offsets that may have been\n        // applied from a prefix element.\n        this.$.labelAndInputContainer.style.position = 'static';\n        if (invalid) {\n          cls += ' is-invalid';\n        } else if (focused) {\n          cls += ' label-is-highlighted';\n        }\n      } else {\n        // When the label is not floating, it should overlap the input element.\n        if (label) {\n          this.$.labelAndInputContainer.style.position = 'relative';\n        }\n        if (invalid) {\n          cls += ' is-invalid';\n        }\n      }\n    } else {\n      if (_inputHasContent) {\n        cls += ' label-is-hidden';\n      }\n      if (invalid) {\n        cls += ' is-invalid';\n      }\n    }\n    if (focused) {\n      cls += ' focused';\n    }\n    return cls;\n  },\n  /** @private */\n  _computeUnderlineClass: function _computeUnderlineClass(focused, invalid) {\n    var cls = 'underline';\n    if (invalid) {\n      cls += ' is-invalid';\n    } else if (focused) {\n      cls += ' is-highlighted';\n    }\n    return cls;\n  },\n  /** @private */\n  _computeAddOnContentClass: function _computeAddOnContentClass(focused, invalid) {\n    var cls = 'add-on-content';\n    if (invalid) {\n      cls += ' is-invalid';\n    } else if (focused) {\n      cls += ' is-highlighted';\n    }\n    return cls;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-input/paper-input-container.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-input/paper-input-error.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polymer/paper-input/paper-input-error.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_paper_styles_default_theme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/paper-styles/default-theme.js */ \"./node_modules/@polymer/paper-styles/default-theme.js\");\n/* harmony import */ var _polymer_paper_styles_typography_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/paper-styles/typography.js */ \"./node_modules/@polymer/paper-styles/typography.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/* harmony import */ var _paper_input_addon_behavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./paper-input-addon-behavior.js */ \"./node_modules/@polymer/paper-input/paper-input-addon-behavior.js\");\n\nvar _templateObject;\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n\n/*\n`<paper-input-error>` is an error message for use with\n`<paper-input-container>`. The error is displayed when the\n`<paper-input-container>` is `invalid`.\n\n    <paper-input-container>\n      <input pattern=\"[0-9]*\">\n      <paper-input-error slot=\"add-on\">Only numbers are\nallowed!</paper-input-error>\n    </paper-input-container>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | The foreground color of the error | `--error-color`\n`--paper-input-error` | Mixin applied to the error | `{}`\n*/\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__.Polymer)({\n  /** @override */\n  _template: (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__.html)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        visibility: hidden;\\n\\n        color: var(--paper-input-container-invalid-color, var(--error-color));\\n\\n        @apply --paper-font-caption;\\n        @apply --paper-input-error;\\n        position: absolute;\\n        left:0;\\n        right:0;\\n      }\\n\\n      :host([invalid]) {\\n        visibility: visible;\\n      }\\n\\n      #a11yWrapper {\\n        visibility: hidden;\\n      }\\n\\n      :host([invalid]) #a11yWrapper {\\n        visibility: visible;\\n      }\\n    </style>\\n\\n    <!--\\n    If the paper-input-error element is directly referenced by an\\n    `aria-describedby` attribute, such as when used as a paper-input add-on,\\n    then applying `visibility: hidden;` to the paper-input-error element itself\\n    does not hide the error.\\n\\n    For more information, see:\\n    https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\\n    -->\\n    <div id=\\\"a11yWrapper\\\">\\n      <slot></slot>\\n    </div>\\n\"], [\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        visibility: hidden;\\n\\n        color: var(--paper-input-container-invalid-color, var(--error-color));\\n\\n        @apply --paper-font-caption;\\n        @apply --paper-input-error;\\n        position: absolute;\\n        left:0;\\n        right:0;\\n      }\\n\\n      :host([invalid]) {\\n        visibility: visible;\\n      }\\n\\n      #a11yWrapper {\\n        visibility: hidden;\\n      }\\n\\n      :host([invalid]) #a11yWrapper {\\n        visibility: visible;\\n      }\\n    </style>\\n\\n    <!--\\n    If the paper-input-error element is directly referenced by an\\n    \\\\`aria-describedby\\\\` attribute, such as when used as a paper-input add-on,\\n    then applying \\\\`visibility: hidden;\\\\` to the paper-input-error element itself\\n    does not hide the error.\\n\\n    For more information, see:\\n    https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\\n    -->\\n    <div id=\\\"a11yWrapper\\\">\\n      <slot></slot>\\n    </div>\\n\"]))),\n  is: 'paper-input-error',\n  behaviors: [_paper_input_addon_behavior_js__WEBPACK_IMPORTED_MODULE_6__.PaperInputAddonBehavior],\n  properties: {\n    /**\n     * True if the error is showing.\n     */\n    invalid: {\n      readOnly: true,\n      reflectToAttribute: true,\n      type: Boolean\n    }\n  },\n  /**\n   * This overrides the update function in PaperInputAddonBehavior.\n   * @param {{\n   *   inputElement: (Element|undefined),\n   *   value: (string|undefined),\n   *   invalid: boolean\n   * }} state -\n   *     inputElement: The input element.\n   *     value: The input value.\n   *     invalid: True if the input value is invalid.\n   */\n  update: function update(state) {\n    this._setInvalid(state.invalid);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvcGFwZXItaW5wdXQvcGFwZXItaW5wdXQtZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEwQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvcGFwZXItaW5wdXQvcGFwZXItaW5wdXQtZXJyb3IuanM/ZjIwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbkBsaWNlbnNlXG5Db3B5cmlnaHQgKGMpIDIwMTUgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdFxuaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMudHh0IFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZVxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQgQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXNcbnBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnRcbmZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9QQVRFTlRTLnR4dFxuKi9cbmltcG9ydCAnQHBvbHltZXIvcG9seW1lci9wb2x5bWVyLWxlZ2FjeS5qcyc7XG5pbXBvcnQgJ0Bwb2x5bWVyL3BhcGVyLXN0eWxlcy9kZWZhdWx0LXRoZW1lLmpzJztcbmltcG9ydCAnQHBvbHltZXIvcGFwZXItc3R5bGVzL3R5cG9ncmFwaHkuanMnO1xuXG5pbXBvcnQge1BvbHltZXJ9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL2xlZ2FjeS9wb2x5bWVyLWZuLmpzJztcbmltcG9ydCB7aHRtbH0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9saWIvdXRpbHMvaHRtbC10YWcuanMnO1xuXG5pbXBvcnQge1BhcGVySW5wdXRBZGRvbkJlaGF2aW9yfSBmcm9tICcuL3BhcGVyLWlucHV0LWFkZG9uLWJlaGF2aW9yLmpzJztcblxuLypcbmA8cGFwZXItaW5wdXQtZXJyb3I+YCBpcyBhbiBlcnJvciBtZXNzYWdlIGZvciB1c2Ugd2l0aFxuYDxwYXBlci1pbnB1dC1jb250YWluZXI+YC4gVGhlIGVycm9yIGlzIGRpc3BsYXllZCB3aGVuIHRoZVxuYDxwYXBlci1pbnB1dC1jb250YWluZXI+YCBpcyBgaW52YWxpZGAuXG5cbiAgICA8cGFwZXItaW5wdXQtY29udGFpbmVyPlxuICAgICAgPGlucHV0IHBhdHRlcm49XCJbMC05XSpcIj5cbiAgICAgIDxwYXBlci1pbnB1dC1lcnJvciBzbG90PVwiYWRkLW9uXCI+T25seSBudW1iZXJzIGFyZVxuYWxsb3dlZCE8L3BhcGVyLWlucHV0LWVycm9yPlxuICAgIDwvcGFwZXItaW5wdXQtY29udGFpbmVyPlxuXG4jIyMgU3R5bGluZ1xuXG5UaGUgZm9sbG93aW5nIGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCBtaXhpbnMgYXJlIGF2YWlsYWJsZSBmb3Igc3R5bGluZzpcblxuQ3VzdG9tIHByb3BlcnR5IHwgRGVzY3JpcHRpb24gfCBEZWZhdWx0XG4tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLVxuYC0tcGFwZXItaW5wdXQtY29udGFpbmVyLWludmFsaWQtY29sb3JgIHwgVGhlIGZvcmVncm91bmQgY29sb3Igb2YgdGhlIGVycm9yIHwgYC0tZXJyb3ItY29sb3JgXG5gLS1wYXBlci1pbnB1dC1lcnJvcmAgfCBNaXhpbiBhcHBsaWVkIHRvIHRoZSBlcnJvciB8IGB7fWBcbiovXG5Qb2x5bWVyKHtcbiAgLyoqIEBvdmVycmlkZSAqL1xuICBfdGVtcGxhdGU6IGh0bWxgXG4gICAgPHN0eWxlPlxuICAgICAgOmhvc3Qge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcblxuICAgICAgICBjb2xvcjogdmFyKC0tcGFwZXItaW5wdXQtY29udGFpbmVyLWludmFsaWQtY29sb3IsIHZhcigtLWVycm9yLWNvbG9yKSk7XG5cbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jYXB0aW9uO1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1pbnB1dC1lcnJvcjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OjA7XG4gICAgICAgIHJpZ2h0OjA7XG4gICAgICB9XG5cbiAgICAgIDpob3N0KFtpbnZhbGlkXSkge1xuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgICAgfVxuXG4gICAgICAjYTExeVdyYXBwZXIge1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICB9XG5cbiAgICAgIDpob3N0KFtpbnZhbGlkXSkgI2ExMXlXcmFwcGVyIHtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgIH1cbiAgICA8L3N0eWxlPlxuXG4gICAgPCEtLVxuICAgIElmIHRoZSBwYXBlci1pbnB1dC1lcnJvciBlbGVtZW50IGlzIGRpcmVjdGx5IHJlZmVyZW5jZWQgYnkgYW5cbiAgICBcXGBhcmlhLWRlc2NyaWJlZGJ5XFxgIGF0dHJpYnV0ZSwgc3VjaCBhcyB3aGVuIHVzZWQgYXMgYSBwYXBlci1pbnB1dCBhZGQtb24sXG4gICAgdGhlbiBhcHBseWluZyBcXGB2aXNpYmlsaXR5OiBoaWRkZW47XFxgIHRvIHRoZSBwYXBlci1pbnB1dC1lcnJvciBlbGVtZW50IGl0c2VsZlxuICAgIGRvZXMgbm90IGhpZGUgdGhlIGVycm9yLlxuXG4gICAgRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZTpcbiAgICBodHRwczovL3d3dy53My5vcmcvVFIvYWNjbmFtZS0xLjEvI21hcHBpbmdfYWRkaXRpb25hbF9uZF9kZXNjcmlwdGlvblxuICAgIC0tPlxuICAgIDxkaXYgaWQ9XCJhMTF5V3JhcHBlclwiPlxuICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvZGl2PlxuYCxcblxuICBpczogJ3BhcGVyLWlucHV0LWVycm9yJyxcbiAgYmVoYXZpb3JzOiBbUGFwZXJJbnB1dEFkZG9uQmVoYXZpb3JdLFxuXG4gIHByb3BlcnRpZXM6IHtcbiAgICAvKipcbiAgICAgKiBUcnVlIGlmIHRoZSBlcnJvciBpcyBzaG93aW5nLlxuICAgICAqL1xuICAgIGludmFsaWQ6IHtyZWFkT25seTogdHJ1ZSwgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLCB0eXBlOiBCb29sZWFufVxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGlzIG92ZXJyaWRlcyB0aGUgdXBkYXRlIGZ1bmN0aW9uIGluIFBhcGVySW5wdXRBZGRvbkJlaGF2aW9yLlxuICAgKiBAcGFyYW0ge3tcbiAgICogICBpbnB1dEVsZW1lbnQ6IChFbGVtZW50fHVuZGVmaW5lZCksXG4gICAqICAgdmFsdWU6IChzdHJpbmd8dW5kZWZpbmVkKSxcbiAgICogICBpbnZhbGlkOiBib29sZWFuXG4gICAqIH19IHN0YXRlIC1cbiAgICogICAgIGlucHV0RWxlbWVudDogVGhlIGlucHV0IGVsZW1lbnQuXG4gICAqICAgICB2YWx1ZTogVGhlIGlucHV0IHZhbHVlLlxuICAgKiAgICAgaW52YWxpZDogVHJ1ZSBpZiB0aGUgaW5wdXQgdmFsdWUgaXMgaW52YWxpZC5cbiAgICovXG4gIHVwZGF0ZTogZnVuY3Rpb24oc3RhdGUpIHtcbiAgICB0aGlzLl9zZXRJbnZhbGlkKHN0YXRlLmludmFsaWQpO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-input/paper-input-error.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-input/paper-input.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polymer/paper-input/paper-input.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_input_iron_input_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/iron-input/iron-input.js */ \"./node_modules/@polymer/iron-input/iron-input.js\");\n/* harmony import */ var _paper_input_char_counter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./paper-input-char-counter.js */ \"./node_modules/@polymer/paper-input/paper-input-char-counter.js\");\n/* harmony import */ var _paper_input_container_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./paper-input-container.js */ \"./node_modules/@polymer/paper-input/paper-input-container.js\");\n/* harmony import */ var _paper_input_error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./paper-input-error.js */ \"./node_modules/@polymer/paper-input/paper-input-error.js\");\n/* harmony import */ var _polymer_iron_form_element_behavior_iron_form_element_behavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polymer/iron-form-element-behavior/iron-form-element-behavior.js */ \"./node_modules/@polymer/iron-form-element-behavior/iron-form-element-behavior.js\");\n/* harmony import */ var _polymer_polymer_lib_elements_dom_module_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @polymer/polymer/lib/elements/dom-module.js */ \"./node_modules/@polymer/polymer/lib/elements/dom-module.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/* harmony import */ var _paper_input_behavior_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./paper-input-behavior.js */ \"./node_modules/@polymer/paper-input/paper-input-behavior.js\");\n\nvar _templateObject;\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n\n\n\n\n\n/**\nMaterial design: [Text\nfields](https://www.google.com/design/spec/components/text-fields.html)\n\n`<paper-input>` is a single-line text field with Material Design styling.\n\n    <paper-input label=\"Input label\"></paper-input>\n\nIt may include an optional error message or character counter.\n\n    <paper-input error-message=\"Invalid input!\" label=\"Input\n    label\"></paper-input> <paper-input char-counter label=\"Input\n    label\"></paper-input>\n\nIt can also include custom prefix or suffix elements, which are displayed\nbefore or after the text input itself. In order for an element to be\nconsidered as a prefix, it must have the `prefix` attribute (and similarly\nfor `suffix`).\n\n    <paper-input label=\"total\">\n      <div prefix>$</div>\n      <paper-icon-button slot=\"suffix\" icon=\"clear\"></paper-icon-button>\n    </paper-input>\n\nA `paper-input` can use the native `type=search` or `type=file` features.\nHowever, since we can't control the native styling of the input (search icon,\nfile button, date placeholder, etc.), in these cases the label will be\nautomatically floated. The `placeholder` attribute can still be used for\nadditional informational text.\n\n    <paper-input label=\"search!\" type=\"search\"\n        placeholder=\"search for cats\" autosave=\"test\" results=\"5\">\n    </paper-input>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Focus\n\nTo focus a paper-input, you can call the native `focus()` method as long as the\npaper input has a tab index. Similarly, `blur()` will blur the element.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer reveal button (the eyeball) | {}\n\n@element paper-input\n@demo demo/index.html\n*/\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_8__.Polymer)({\n  is: 'paper-input',\n  /** @override */\n  _template: (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_9__.html)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n    <style>\\n      :host {\\n        display: block;\\n      }\\n\\n      :host([focused]) {\\n        outline: none;\\n      }\\n\\n      :host([hidden]) {\\n        display: none !important;\\n      }\\n\\n      input {\\n        /* Firefox sets a min-width on the input, which can cause layout issues */\\n        min-width: 0;\\n      }\\n\\n      /* In 1.x, the <input> is distributed to paper-input-container, which styles it.\\n      In 2.x the <iron-input> is distributed to paper-input-container, which styles\\n      it, but in order for this to work correctly, we need to reset some\\n      of the native input's properties to inherit (from the iron-input) */\\n      iron-input > input {\\n        @apply --paper-input-container-shared-input-style;\\n        font-family: inherit;\\n        font-weight: inherit;\\n        font-size: inherit;\\n        letter-spacing: inherit;\\n        word-spacing: inherit;\\n        line-height: inherit;\\n        text-shadow: inherit;\\n        color: inherit;\\n        cursor: inherit;\\n      }\\n\\n      input:disabled {\\n        @apply --paper-input-container-input-disabled;\\n      }\\n\\n      input::-webkit-outer-spin-button,\\n      input::-webkit-inner-spin-button {\\n        @apply --paper-input-container-input-webkit-spinner;\\n      }\\n\\n      input::-webkit-clear-button {\\n        @apply --paper-input-container-input-webkit-clear;\\n      }\\n\\n      input::-webkit-calendar-picker-indicator {\\n        @apply --paper-input-container-input-webkit-calendar-picker-indicator;\\n      }\\n\\n      input::-webkit-input-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input:-moz-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input::-moz-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input::-ms-clear {\\n        @apply --paper-input-container-ms-clear;\\n      }\\n\\n      input::-ms-reveal {\\n        @apply --paper-input-container-ms-reveal;\\n      }\\n\\n      input:-ms-input-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      label {\\n        pointer-events: none;\\n      }\\n    </style>\\n\\n    <paper-input-container id=\\\"container\\\" no-label-float=\\\"[[noLabelFloat]]\\\" always-float-label=\\\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\\\" auto-validate$=\\\"[[autoValidate]]\\\" disabled$=\\\"[[disabled]]\\\" invalid=\\\"[[invalid]]\\\">\\n\\n      <slot name=\\\"prefix\\\" slot=\\\"prefix\\\"></slot>\\n\\n      <label hidden$=\\\"[[!label]]\\\" aria-hidden=\\\"true\\\" for$=\\\"[[_inputId]]\\\" slot=\\\"label\\\">[[label]]</label>\\n\\n      <!-- Need to bind maxlength so that the paper-input-char-counter works correctly -->\\n      <iron-input bind-value=\\\"{{value}}\\\" slot=\\\"input\\\" class=\\\"input-element\\\" id$=\\\"[[_inputId]]\\\" maxlength$=\\\"[[maxlength]]\\\" allowed-pattern=\\\"[[allowedPattern]]\\\" invalid=\\\"{{invalid}}\\\" validator=\\\"[[validator]]\\\">\\n        <input aria-labelledby$=\\\"[[_ariaLabelledBy]]\\\" aria-describedby$=\\\"[[_ariaDescribedBy]]\\\" disabled$=\\\"[[disabled]]\\\" title$=\\\"[[title]]\\\" type$=\\\"[[type]]\\\" pattern$=\\\"[[pattern]]\\\" required$=\\\"[[required]]\\\" autocomplete$=\\\"[[autocomplete]]\\\" autofocus$=\\\"[[autofocus]]\\\" inputmode$=\\\"[[inputmode]]\\\" minlength$=\\\"[[minlength]]\\\" maxlength$=\\\"[[maxlength]]\\\" min$=\\\"[[min]]\\\" max$=\\\"[[max]]\\\" step$=\\\"[[step]]\\\" name$=\\\"[[name]]\\\" placeholder$=\\\"[[placeholder]]\\\" readonly$=\\\"[[readonly]]\\\" list$=\\\"[[list]]\\\" size$=\\\"[[size]]\\\" autocapitalize$=\\\"[[autocapitalize]]\\\" autocorrect$=\\\"[[autocorrect]]\\\" on-change=\\\"_onChange\\\" tabindex$=\\\"[[tabIndex]]\\\" autosave$=\\\"[[autosave]]\\\" results$=\\\"[[results]]\\\" accept$=\\\"[[accept]]\\\" multiple$=\\\"[[multiple]]\\\" role$=\\\"[[inputRole]]\\\" aria-haspopup$=\\\"[[inputAriaHaspopup]]\\\">\\n      </iron-input>\\n\\n      <slot name=\\\"suffix\\\" slot=\\\"suffix\\\"></slot>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[errorMessage]]\\\">\\n        <paper-input-error aria-live=\\\"assertive\\\" slot=\\\"add-on\\\">[[errorMessage]]</paper-input-error>\\n      </template>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[charCounter]]\\\">\\n        <paper-input-char-counter slot=\\\"add-on\\\"></paper-input-char-counter>\\n      </template>\\n\\n    </paper-input-container>\\n  \"]))),\n  behaviors: [_paper_input_behavior_js__WEBPACK_IMPORTED_MODULE_10__.PaperInputBehavior, _polymer_iron_form_element_behavior_iron_form_element_behavior_js__WEBPACK_IMPORTED_MODULE_6__.IronFormElementBehavior],\n  properties: {\n    value: {\n      // Required for the correct TypeScript type-generation\n      type: String\n    },\n    inputRole: {\n      type: String,\n      value: undefined\n    },\n    inputAriaHaspopup: {\n      type: String,\n      value: undefined\n    }\n  },\n  /**\n   * Returns a reference to the focusable element. Overridden from\n   * PaperInputBehavior to correctly focus the native input.\n   *\n   * @return {!HTMLElement}\n   */\n  get _focusableElement() {\n    return this.inputElement._inputElement;\n  },\n  // Note: This event is only available in the 1.0 version of this element.\n  // In 2.0, the functionality of `_onIronInputReady` is done in\n  // PaperInputBehavior::attached.\n  listeners: {\n    'iron-input-ready': '_onIronInputReady'\n  },\n  _onIronInputReady: function _onIronInputReady() {\n    // Even though this is only used in the next line, save this for\n    // backwards compatibility, since the native input had this ID until 2.0.5.\n    if (!this.$.nativeInput) {\n      this.$.nativeInput = /** @type {!Element} */this.$$('input');\n    }\n    if (this.inputElement && this._typesThatHaveText.indexOf(this.$.nativeInput.type) !== -1) {\n      this.alwaysFloatLabel = true;\n    }\n\n    // Only validate when attached if the input already has a value.\n    if (!!this.inputElement.bindValue) {\n      this.$.container._handleValueAndAutoValidate(this.inputElement);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-input/paper-input.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-styles/typography.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polymer/paper-styles/typography.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_font_roboto_roboto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/font-roboto/roboto.js */ \"./node_modules/@polymer/font-roboto/roboto.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n\nvar _templateObject;\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\nTypographic styles are provided matching the Material Design standard styles:\nhttp://www.google.com/design/spec/style/typography.html#typography-standard-styles\n\nNote that these are English/Latin centric styles. You may need to further adjust\nline heights and weights for CJK typesetting. See the notes in the Material\nDesign typography section.\n*/\n\n\n\n\nvar template = (0,_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__.html)(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"<custom-style>\\n  <style is=\\\"custom-style\\\">\\n    html {\\n\\n      /* Shared Styles */\\n      --paper-font-common-base: {\\n        font-family: 'Roboto', 'Noto', sans-serif;\\n        -webkit-font-smoothing: antialiased;\\n      };\\n\\n      --paper-font-common-code: {\\n        font-family: 'Roboto Mono', 'Consolas', 'Menlo', monospace;\\n        -webkit-font-smoothing: antialiased;\\n      };\\n\\n      --paper-font-common-expensive-kerning: {\\n        text-rendering: optimizeLegibility;\\n      };\\n\\n      --paper-font-common-nowrap: {\\n        white-space: nowrap;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n      };\\n\\n      /* Material Font Styles */\\n\\n      --paper-font-display4: {\\n        @apply --paper-font-common-base;\\n        @apply --paper-font-common-nowrap;\\n\\n        font-size: 112px;\\n        font-weight: 300;\\n        letter-spacing: -.044em;\\n        line-height: 120px;\\n      };\\n\\n      --paper-font-display3: {\\n        @apply --paper-font-common-base;\\n        @apply --paper-font-common-nowrap;\\n\\n        font-size: 56px;\\n        font-weight: 400;\\n        letter-spacing: -.026em;\\n        line-height: 60px;\\n      };\\n\\n      --paper-font-display2: {\\n        @apply --paper-font-common-base;\\n\\n        font-size: 45px;\\n        font-weight: 400;\\n        letter-spacing: -.018em;\\n        line-height: 48px;\\n      };\\n\\n      --paper-font-display1: {\\n        @apply --paper-font-common-base;\\n\\n        font-size: 34px;\\n        font-weight: 400;\\n        letter-spacing: -.01em;\\n        line-height: 40px;\\n      };\\n\\n      --paper-font-headline: {\\n        @apply --paper-font-common-base;\\n\\n        font-size: 24px;\\n        font-weight: 400;\\n        letter-spacing: -.012em;\\n        line-height: 32px;\\n      };\\n\\n      --paper-font-title: {\\n        @apply --paper-font-common-base;\\n        @apply --paper-font-common-nowrap;\\n\\n        font-size: 20px;\\n        font-weight: 500;\\n        line-height: 28px;\\n      };\\n\\n      --paper-font-subhead: {\\n        @apply --paper-font-common-base;\\n\\n        font-size: 16px;\\n        font-weight: 400;\\n        line-height: 24px;\\n      };\\n\\n      --paper-font-body2: {\\n        @apply --paper-font-common-base;\\n\\n        font-size: 14px;\\n        font-weight: 500;\\n        line-height: 24px;\\n      };\\n\\n      --paper-font-body1: {\\n        @apply --paper-font-common-base;\\n\\n        font-size: 14px;\\n        font-weight: 400;\\n        line-height: 20px;\\n      };\\n\\n      --paper-font-caption: {\\n        @apply --paper-font-common-base;\\n        @apply --paper-font-common-nowrap;\\n\\n        font-size: 12px;\\n        font-weight: 400;\\n        letter-spacing: 0.011em;\\n        line-height: 20px;\\n      };\\n\\n      --paper-font-menu: {\\n        @apply --paper-font-common-base;\\n        @apply --paper-font-common-nowrap;\\n\\n        font-size: 13px;\\n        font-weight: 500;\\n        line-height: 24px;\\n      };\\n\\n      --paper-font-button: {\\n        @apply --paper-font-common-base;\\n        @apply --paper-font-common-nowrap;\\n\\n        font-size: 14px;\\n        font-weight: 500;\\n        letter-spacing: 0.018em;\\n        line-height: 24px;\\n        text-transform: uppercase;\\n      };\\n\\n      --paper-font-code2: {\\n        @apply --paper-font-common-code;\\n\\n        font-size: 14px;\\n        font-weight: 700;\\n        line-height: 20px;\\n      };\\n\\n      --paper-font-code1: {\\n        @apply --paper-font-common-code;\\n\\n        font-size: 14px;\\n        font-weight: 500;\\n        line-height: 20px;\\n      };\\n\\n    }\\n\\n  </style>\\n</custom-style>\"])));\ntemplate.setAttribute('style', 'display: none;');\ndocument.head.appendChild(template.content);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvcGFwZXItc3R5bGVzL3R5cG9ncmFwaHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQTZKQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvcGFwZXItc3R5bGVzL3R5cG9ncmFwaHkuanM/YWJkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbkBsaWNlbnNlXG5Db3B5cmlnaHQgKGMpIDIwMTUgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdFxuaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMudHh0IFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZVxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQgQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXNcbnBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnRcbmZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9QQVRFTlRTLnR4dFxuKi9cbi8qXG5UeXBvZ3JhcGhpYyBzdHlsZXMgYXJlIHByb3ZpZGVkIG1hdGNoaW5nIHRoZSBNYXRlcmlhbCBEZXNpZ24gc3RhbmRhcmQgc3R5bGVzOlxuaHR0cDovL3d3dy5nb29nbGUuY29tL2Rlc2lnbi9zcGVjL3N0eWxlL3R5cG9ncmFwaHkuaHRtbCN0eXBvZ3JhcGh5LXN0YW5kYXJkLXN0eWxlc1xuXG5Ob3RlIHRoYXQgdGhlc2UgYXJlIEVuZ2xpc2gvTGF0aW4gY2VudHJpYyBzdHlsZXMuIFlvdSBtYXkgbmVlZCB0byBmdXJ0aGVyIGFkanVzdFxubGluZSBoZWlnaHRzIGFuZCB3ZWlnaHRzIGZvciBDSksgdHlwZXNldHRpbmcuIFNlZSB0aGUgbm90ZXMgaW4gdGhlIE1hdGVyaWFsXG5EZXNpZ24gdHlwb2dyYXBoeSBzZWN0aW9uLlxuKi9cblxuaW1wb3J0ICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItbGVnYWN5LmpzJztcbmltcG9ydCAnQHBvbHltZXIvZm9udC1yb2JvdG8vcm9ib3RvLmpzJztcblxuaW1wb3J0IHtodG1sfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9odG1sLXRhZy5qcyc7XG5jb25zdCB0ZW1wbGF0ZSA9IGh0bWxgPGN1c3RvbS1zdHlsZT5cbiAgPHN0eWxlIGlzPVwiY3VzdG9tLXN0eWxlXCI+XG4gICAgaHRtbCB7XG5cbiAgICAgIC8qIFNoYXJlZCBTdHlsZXMgKi9cbiAgICAgIC0tcGFwZXItZm9udC1jb21tb24tYmFzZToge1xuICAgICAgICBmb250LWZhbWlseTogJ1JvYm90bycsICdOb3RvJywgc2Fucy1zZXJpZjtcbiAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtY29tbW9uLWNvZGU6IHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8gTW9ubycsICdDb25zb2xhcycsICdNZW5sbycsIG1vbm9zcGFjZTtcbiAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtY29tbW9uLWV4cGVuc2l2ZS1rZXJuaW5nOiB7XG4gICAgICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtY29tbW9uLW5vd3JhcDoge1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgIH07XG5cbiAgICAgIC8qIE1hdGVyaWFsIEZvbnQgU3R5bGVzICovXG5cbiAgICAgIC0tcGFwZXItZm9udC1kaXNwbGF5NDoge1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1iYXNlO1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1ub3dyYXA7XG5cbiAgICAgICAgZm9udC1zaXplOiAxMTJweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC0uMDQ0ZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxMjBweDtcbiAgICAgIH07XG5cbiAgICAgIC0tcGFwZXItZm9udC1kaXNwbGF5Mzoge1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1iYXNlO1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1ub3dyYXA7XG5cbiAgICAgICAgZm9udC1zaXplOiA1NnB4O1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogLS4wMjZlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDYwcHg7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtZGlzcGxheTI6IHtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tYmFzZTtcblxuICAgICAgICBmb250LXNpemU6IDQ1cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAtLjAxOGVtO1xuICAgICAgICBsaW5lLWhlaWdodDogNDhweDtcbiAgICAgIH07XG5cbiAgICAgIC0tcGFwZXItZm9udC1kaXNwbGF5MToge1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1iYXNlO1xuXG4gICAgICAgIGZvbnQtc2l6ZTogMzRweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC0uMDFlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtaGVhZGxpbmU6IHtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tYmFzZTtcblxuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAtLjAxMmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMzJweDtcbiAgICAgIH07XG5cbiAgICAgIC0tcGFwZXItZm9udC10aXRsZToge1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1iYXNlO1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1ub3dyYXA7XG5cbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICBsaW5lLWhlaWdodDogMjhweDtcbiAgICAgIH07XG5cbiAgICAgIC0tcGFwZXItZm9udC1zdWJoZWFkOiB7XG4gICAgICAgIEBhcHBseSAtLXBhcGVyLWZvbnQtY29tbW9uLWJhc2U7XG5cbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgIH07XG5cbiAgICAgIC0tcGFwZXItZm9udC1ib2R5Mjoge1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1iYXNlO1xuXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtYm9keTE6IHtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tYmFzZTtcblxuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgfTtcblxuICAgICAgLS1wYXBlci1mb250LWNhcHRpb246IHtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tYmFzZTtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tbm93cmFwO1xuXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDExZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgfTtcblxuICAgICAgLS1wYXBlci1mb250LW1lbnU6IHtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tYmFzZTtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tbm93cmFwO1xuXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtYnV0dG9uOiB7XG4gICAgICAgIEBhcHBseSAtLXBhcGVyLWZvbnQtY29tbW9uLWJhc2U7XG4gICAgICAgIEBhcHBseSAtLXBhcGVyLWZvbnQtY29tbW9uLW5vd3JhcDtcblxuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjAxOGVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIH07XG5cbiAgICAgIC0tcGFwZXItZm9udC1jb2RlMjoge1xuICAgICAgICBAYXBwbHkgLS1wYXBlci1mb250LWNvbW1vbi1jb2RlO1xuXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICB9O1xuXG4gICAgICAtLXBhcGVyLWZvbnQtY29kZTE6IHtcbiAgICAgICAgQGFwcGx5IC0tcGFwZXItZm9udC1jb21tb24tY29kZTtcblxuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgfTtcblxuICAgIH1cblxuICA8L3N0eWxlPlxuPC9jdXN0b20tc3R5bGU+YDtcbnRlbXBsYXRlLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnZGlzcGxheTogbm9uZTsnKTtcbmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodGVtcGxhdGUuY29udGVudCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-styles/typography.js\n");

/***/ })

}]);