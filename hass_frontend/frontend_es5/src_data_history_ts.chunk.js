"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["src_data_history_ts"],{

/***/ "./src/data/history.ts":
/*!*****************************!*\
  !*** ./src/data/history.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"entityIdHistoryNeedsAttributes\": function() { return /* binding */ entityIdHistoryNeedsAttributes; },\n/* harmony export */   \"fetchRecent\": function() { return /* binding */ fetchRecent; },\n/* harmony export */   \"fetchRecentWS\": function() { return /* binding */ fetchRecentWS; },\n/* harmony export */   \"fetchDate\": function() { return /* binding */ fetchDate; },\n/* harmony export */   \"fetchDateWS\": function() { return /* binding */ fetchDateWS; },\n/* harmony export */   \"computeHistory\": function() { return /* binding */ computeHistory; },\n/* harmony export */   \"getStatisticIds\": function() { return /* binding */ getStatisticIds; },\n/* harmony export */   \"getStatisticMetadata\": function() { return /* binding */ getStatisticMetadata; },\n/* harmony export */   \"fetchStatistics\": function() { return /* binding */ fetchStatistics; },\n/* harmony export */   \"validateStatistics\": function() { return /* binding */ validateStatistics; },\n/* harmony export */   \"updateStatisticsMetadata\": function() { return /* binding */ updateStatisticsMetadata; },\n/* harmony export */   \"clearStatistics\": function() { return /* binding */ clearStatistics; },\n/* harmony export */   \"calculateStatisticSumGrowth\": function() { return /* binding */ calculateStatisticSumGrowth; },\n/* harmony export */   \"calculateStatisticsSumGrowth\": function() { return /* binding */ calculateStatisticsSumGrowth; },\n/* harmony export */   \"statisticsHaveType\": function() { return /* binding */ statisticsHaveType; },\n/* harmony export */   \"adjustStatisticsSum\": function() { return /* binding */ adjustStatisticsSum; },\n/* harmony export */   \"getStatisticLabel\": function() { return /* binding */ getStatisticLabel; }\n/* harmony export */ });\n/* harmony import */ var _common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity/compute_domain */ \"./src/common/entity/compute_domain.ts\");\n/* harmony import */ var _common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/entity/compute_state_display */ \"./src/common/entity/compute_state_display.ts\");\n/* harmony import */ var _common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/entity/compute_state_name */ \"./src/common/entity/compute_state_name.ts\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar DOMAINS_USE_LAST_UPDATED = [\"climate\", \"humidifier\", \"water_heater\"];\nvar NEED_ATTRIBUTE_DOMAINS = [\"climate\", \"humidifier\", \"input_datetime\", \"thermostat\", \"water_heater\"];\nvar LINE_ATTRIBUTES_TO_KEEP = [\"temperature\", \"current_temperature\", \"target_temp_low\", \"target_temp_high\", \"hvac_action\", \"humidity\", \"mode\"];\nvar entityIdHistoryNeedsAttributes = function entityIdHistoryNeedsAttributes(hass, entityId) {\n  return !hass.states[entityId] || NEED_ATTRIBUTE_DOMAINS.includes((0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_0__.computeDomain)(entityId));\n};\nvar fetchRecent = function fetchRecent(hass, entityId, startTime, endTime) {\n  var skipInitialState = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var significantChangesOnly = arguments.length > 5 ? arguments[5] : undefined;\n  var minimalResponse = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n  var noAttributes = arguments.length > 7 ? arguments[7] : undefined;\n  var url = \"history/period\";\n\n  if (startTime) {\n    url += \"/\" + startTime.toISOString();\n  }\n\n  url += \"?filter_entity_id=\" + entityId;\n\n  if (endTime) {\n    url += \"&end_time=\" + endTime.toISOString();\n  }\n\n  if (skipInitialState) {\n    url += \"&skip_initial_state\";\n  }\n\n  if (significantChangesOnly !== undefined) {\n    url += \"&significant_changes_only=\".concat(Number(significantChangesOnly));\n  }\n\n  if (minimalResponse) {\n    url += \"&minimal_response\";\n  }\n\n  if (noAttributes) {\n    url += \"&no_attributes\";\n  }\n\n  return hass.callApi(\"GET\", url);\n};\nvar fetchRecentWS = function fetchRecentWS(hass, entityId, startTime, endTime) {\n  var skipInitialState = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var significantChangesOnly = arguments.length > 5 ? arguments[5] : undefined;\n  var minimalResponse = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n  var noAttributes = arguments.length > 7 ? arguments[7] : undefined;\n  return hass.callWS({\n    type: \"history/history_during_period\",\n    start_time: startTime.toISOString(),\n    end_time: endTime.toISOString(),\n    significant_changes_only: significantChangesOnly || false,\n    include_start_time_state: !skipInitialState,\n    minimal_response: minimalResponse,\n    no_attributes: noAttributes || false,\n    entity_ids: entityId.split(\",\")\n  });\n};\nvar fetchDate = function fetchDate(hass, startTime, endTime, entityIds) {\n  return hass.callApi(\"GET\", \"history/period/\".concat(startTime.toISOString(), \"?end_time=\").concat(endTime.toISOString(), \"&minimal_response\").concat(entityIds ? \"&filter_entity_id=\".concat(entityIds.join(\",\")) : \"\"));\n};\nvar fetchDateWS = function fetchDateWS(hass, startTime, endTime, entityIds) {\n  var params = {\n    type: \"history/history_during_period\",\n    start_time: startTime.toISOString(),\n    end_time: endTime.toISOString(),\n    minimal_response: true,\n    no_attributes: !entityIds.map(function (entityId) {\n      return entityIdHistoryNeedsAttributes(hass, entityId);\n    }).reduce(function (cur, next) {\n      return cur || next;\n    }, false)\n  };\n\n  if (entityIds.length !== 0) {\n    return hass.callWS(Object.assign({}, params, {\n      entity_ids: entityIds\n    }));\n  }\n\n  return hass.callWS(params);\n};\n\nvar equalState = function equalState(obj1, obj2) {\n  return obj1.state === obj2.state && (!obj1.attributes || !obj2.attributes || LINE_ATTRIBUTES_TO_KEEP.every(function (attr) {\n    return obj1.attributes[attr] === obj2.attributes[attr];\n  }));\n};\n\nvar processTimelineEntity = function processTimelineEntity(localize, language, entityId, states) {\n  var data = [];\n  var first = states[0];\n\n  var _iterator = _createForOfIteratorHelper(states),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var state = _step.value;\n\n      if (data.length > 0 && state.s === data[data.length - 1].state) {\n        continue;\n      }\n\n      data.push({\n        state_localize: (0,_common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_1__.computeStateDisplayFromEntityAttributes)(localize, language, entityId, state.a || first.a, state.s),\n        state: state.s,\n        // lc (last_changed) may be omitted if its the same\n        // as lu (last_updated).\n        last_changed: (state.lc ? state.lc : state.lu) * 1000\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    name: (0,_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_2__.computeStateNameFromEntityAttributes)(entityId, states[0].a),\n    entity_id: entityId,\n    data: data\n  };\n};\n\nvar processLineChartEntities = function processLineChartEntities(unit, entities) {\n  var data = [];\n  Object.keys(entities).forEach(function (entityId) {\n    var states = entities[entityId];\n    var first = states[0];\n    var domain = (0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_0__.computeDomain)(entityId);\n    var processedStates = [];\n\n    var _iterator2 = _createForOfIteratorHelper(states),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var state = _step2.value;\n        var processedState = void 0;\n\n        if (DOMAINS_USE_LAST_UPDATED.includes(domain)) {\n          processedState = {\n            state: state.s,\n            last_changed: state.lu * 1000,\n            attributes: {}\n          };\n\n          var _iterator3 = _createForOfIteratorHelper(LINE_ATTRIBUTES_TO_KEEP),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var attr = _step3.value;\n\n              if (attr in state.a) {\n                processedState.attributes[attr] = state.a[attr];\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        } else {\n          processedState = {\n            state: state.s,\n            // lc (last_changed) may be omitted if its the same\n            // as lu (last_updated).\n            last_changed: (state.lc ? state.lc : state.lu) * 1000,\n            attributes: {}\n          };\n        }\n\n        if (processedStates.length > 1 && equalState(processedState, processedStates[processedStates.length - 1]) && equalState(processedState, processedStates[processedStates.length - 2])) {\n          continue;\n        }\n\n        processedStates.push(processedState);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    data.push({\n      domain: domain,\n      name: (0,_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_2__.computeStateNameFromEntityAttributes)(entityId, first.a),\n      entity_id: entityId,\n      states: processedStates\n    });\n  });\n  return {\n    unit: unit,\n    identifier: Object.keys(entities).join(\"\"),\n    data: data\n  };\n};\n\nvar stateUsesUnits = function stateUsesUnits(state) {\n  return attributesHaveUnits(state.attributes);\n};\n\nvar attributesHaveUnits = function attributesHaveUnits(attributes) {\n  return \"unit_of_measurement\" in attributes || \"state_class\" in attributes;\n};\n\nvar computeHistory = function computeHistory(hass, stateHistory, localize) {\n  var lineChartDevices = {};\n  var timelineDevices = [];\n\n  if (!stateHistory) {\n    return {\n      line: [],\n      timeline: []\n    };\n  }\n\n  Object.keys(stateHistory).forEach(function (entityId) {\n    var stateInfo = stateHistory[entityId];\n\n    if (stateInfo.length === 0) {\n      return;\n    }\n\n    var currentState = entityId in hass.states ? hass.states[entityId] : undefined;\n    var stateWithUnitorStateClass = !currentState && stateInfo.find(function (state) {\n      return state.a && attributesHaveUnits(state.a);\n    });\n    var unit;\n\n    if (currentState && stateUsesUnits(currentState)) {\n      unit = currentState.attributes.unit_of_measurement || \" \";\n    } else if (stateWithUnitorStateClass) {\n      unit = stateWithUnitorStateClass.a.unit_of_measurement || \" \";\n    } else {\n      unit = {\n        climate: hass.config.unit_system.temperature,\n        counter: \"#\",\n        humidifier: \"%\",\n        input_number: \"#\",\n        number: \"#\",\n        water_heater: hass.config.unit_system.temperature\n      }[(0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_0__.computeDomain)(entityId)];\n    }\n\n    if (!unit) {\n      timelineDevices.push(processTimelineEntity(localize, hass.locale, entityId, stateInfo));\n    } else if (unit in lineChartDevices && entityId in lineChartDevices[unit]) {\n      var _lineChartDevices$uni;\n\n      (_lineChartDevices$uni = lineChartDevices[unit][entityId]).push.apply(_lineChartDevices$uni, _toConsumableArray(stateInfo));\n    } else {\n      if (!(unit in lineChartDevices)) {\n        lineChartDevices[unit] = {};\n      }\n\n      lineChartDevices[unit][entityId] = stateInfo;\n    }\n  });\n  var unitStates = Object.keys(lineChartDevices).map(function (unit) {\n    return processLineChartEntities(unit, lineChartDevices[unit]);\n  });\n  return {\n    line: unitStates,\n    timeline: timelineDevices\n  };\n}; // Statistics\n\nvar getStatisticIds = function getStatisticIds(hass, statistic_type) {\n  return hass.callWS({\n    type: \"history/list_statistic_ids\",\n    statistic_type: statistic_type\n  });\n};\nvar getStatisticMetadata = function getStatisticMetadata(hass, statistic_ids) {\n  return hass.callWS({\n    type: \"recorder/get_statistics_metadata\",\n    statistic_ids: statistic_ids\n  });\n};\nvar fetchStatistics = function fetchStatistics(hass, startTime, endTime, statistic_ids) {\n  var period = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"hour\";\n  return hass.callWS({\n    type: \"history/statistics_during_period\",\n    start_time: startTime.toISOString(),\n    end_time: endTime === null || endTime === void 0 ? void 0 : endTime.toISOString(),\n    statistic_ids: statistic_ids,\n    period: period\n  });\n};\nvar validateStatistics = function validateStatistics(hass) {\n  return hass.callWS({\n    type: \"recorder/validate_statistics\"\n  });\n};\nvar updateStatisticsMetadata = function updateStatisticsMetadata(hass, statistic_id, unit_of_measurement) {\n  return hass.callWS({\n    type: \"recorder/update_statistics_metadata\",\n    statistic_id: statistic_id,\n    unit_of_measurement: unit_of_measurement\n  });\n};\nvar clearStatistics = function clearStatistics(hass, statistic_ids) {\n  return hass.callWS({\n    type: \"recorder/clear_statistics\",\n    statistic_ids: statistic_ids\n  });\n};\nvar calculateStatisticSumGrowth = function calculateStatisticSumGrowth(values) {\n  if (!values || values.length < 2) {\n    return null;\n  }\n\n  var endSum = values[values.length - 1].sum;\n\n  if (endSum === null) {\n    return null;\n  }\n\n  var startSum = values[0].sum;\n\n  if (startSum === null) {\n    return endSum;\n  }\n\n  return endSum - startSum;\n};\nvar calculateStatisticsSumGrowth = function calculateStatisticsSumGrowth(data, stats) {\n  var totalGrowth = null;\n\n  var _iterator4 = _createForOfIteratorHelper(stats),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var stat = _step4.value;\n\n      if (!(stat in data)) {\n        continue;\n      }\n\n      var statGrowth = calculateStatisticSumGrowth(data[stat]);\n\n      if (statGrowth === null) {\n        continue;\n      }\n\n      if (totalGrowth === null) {\n        totalGrowth = statGrowth;\n      } else {\n        totalGrowth += statGrowth;\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return totalGrowth;\n};\nvar statisticsHaveType = function statisticsHaveType(stats, type) {\n  return stats.some(function (stat) {\n    return stat[type] !== null;\n  });\n};\nvar adjustStatisticsSum = function adjustStatisticsSum(hass, statistic_id, start_time, adjustment) {\n  return hass.callWS({\n    type: \"recorder/adjust_sum_statistics\",\n    statistic_id: statistic_id,\n    start_time: start_time,\n    adjustment: adjustment\n  });\n};\nvar getStatisticLabel = function getStatisticLabel(hass, statisticsId, statisticsMetaData) {\n  var entity = hass.states[statisticsId];\n\n  if (entity) {\n    return (0,_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_2__.computeStateName)(entity);\n  }\n\n  var statisticMetaData = statisticsMetaData[statisticsId];\n  return (statisticMetaData === null || statisticMetaData === void 0 ? void 0 : statisticMetaData.name) || statisticsId;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/data/history.ts\n");

/***/ })

}]);