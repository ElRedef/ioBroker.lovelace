"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["vendors-node_modules_codemirror_autocomplete_dist_index_js-node_modules_codemirror_legacy-mod-06fffb"],{

/***/ "./node_modules/@codemirror/autocomplete/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@codemirror/autocomplete/dist/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompletionContext: function() { return /* binding */ CompletionContext; },\n/* harmony export */   acceptCompletion: function() { return /* binding */ acceptCompletion; },\n/* harmony export */   autocompletion: function() { return /* binding */ autocompletion; },\n/* harmony export */   clearSnippet: function() { return /* binding */ clearSnippet; },\n/* harmony export */   closeBrackets: function() { return /* binding */ closeBrackets; },\n/* harmony export */   closeBracketsKeymap: function() { return /* binding */ closeBracketsKeymap; },\n/* harmony export */   closeCompletion: function() { return /* binding */ closeCompletion; },\n/* harmony export */   completeAnyWord: function() { return /* binding */ completeAnyWord; },\n/* harmony export */   completeFromList: function() { return /* binding */ completeFromList; },\n/* harmony export */   completionKeymap: function() { return /* binding */ completionKeymap; },\n/* harmony export */   completionStatus: function() { return /* binding */ completionStatus; },\n/* harmony export */   currentCompletions: function() { return /* binding */ currentCompletions; },\n/* harmony export */   deleteBracketPair: function() { return /* binding */ deleteBracketPair; },\n/* harmony export */   hasNextSnippetField: function() { return /* binding */ hasNextSnippetField; },\n/* harmony export */   hasPrevSnippetField: function() { return /* binding */ hasPrevSnippetField; },\n/* harmony export */   ifIn: function() { return /* binding */ ifIn; },\n/* harmony export */   ifNotIn: function() { return /* binding */ ifNotIn; },\n/* harmony export */   insertBracket: function() { return /* binding */ insertBracket; },\n/* harmony export */   insertCompletionText: function() { return /* binding */ insertCompletionText; },\n/* harmony export */   moveCompletionSelection: function() { return /* binding */ moveCompletionSelection; },\n/* harmony export */   nextSnippetField: function() { return /* binding */ nextSnippetField; },\n/* harmony export */   pickedCompletion: function() { return /* binding */ pickedCompletion; },\n/* harmony export */   prevSnippetField: function() { return /* binding */ prevSnippetField; },\n/* harmony export */   selectedCompletion: function() { return /* binding */ selectedCompletion; },\n/* harmony export */   selectedCompletionIndex: function() { return /* binding */ selectedCompletionIndex; },\n/* harmony export */   setSelectedCompletion: function() { return /* binding */ setSelectedCompletion; },\n/* harmony export */   snippet: function() { return /* binding */ snippet; },\n/* harmony export */   snippetCompletion: function() { return /* binding */ snippetCompletion; },\n/* harmony export */   snippetKeymap: function() { return /* binding */ snippetKeymap; },\n/* harmony export */   startCompletion: function() { return /* binding */ startCompletion; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createSuper */ \"./node_modules/@babel/runtime/helpers/esm/createSuper.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/createForOfIteratorHelper */ \"./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _codemirror_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @codemirror/state */ \"./node_modules/@codemirror/state/dist/index.js\");\n/* harmony import */ var _codemirror_view__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @codemirror/view */ \"./node_modules/@codemirror/view/dist/index.js\");\n/* harmony import */ var _codemirror_language__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @codemirror/language */ \"./node_modules/@codemirror/language/dist/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nvar CompletionContext = /*#__PURE__*/function () {\n  /**\n  Create a new completion context. (Mostly useful for testing\n  completion sources—in the editor, the extension will create\n  these for you.)\n  */\n  function CompletionContext(\n  /**\n  The editor state that the completion happens in.\n  */\n  state,\n  /**\n  The position at which the completion is happening.\n  */\n  pos,\n  /**\n  Indicates whether completion was activated explicitly, or\n  implicitly by typing. The usual way to respond to this is to\n  only return completions when either there is part of a\n  completable entity before the cursor, or `explicit` is true.\n  */\n  explicit) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, CompletionContext);\n    this.state = state;\n    this.pos = pos;\n    this.explicit = explicit;\n    /**\n    @internal\n    */\n    this.abortListeners = [];\n  }\n  /**\n  Get the extent, content, and (if there is a token) type of the\n  token before `this.pos`.\n  */\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(CompletionContext, [{\n    key: \"tokenBefore\",\n    value: function tokenBefore(types) {\n      var token = (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_8__.syntaxTree)(this.state).resolveInner(this.pos, -1);\n      while (token && types.indexOf(token.name) < 0) token = token.parent;\n      return token ? {\n        from: token.from,\n        to: this.pos,\n        text: this.state.sliceDoc(token.from, this.pos),\n        type: token.type\n      } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n  }, {\n    key: \"matchBefore\",\n    value: function matchBefore(expr) {\n      var line = this.state.doc.lineAt(this.pos);\n      var start = Math.max(line.from, this.pos - 250);\n      var str = line.text.slice(start - line.from, this.pos - line.from);\n      var found = str.search(ensureAnchor(expr, false));\n      return found < 0 ? null : {\n        from: start + found,\n        to: this.pos,\n        text: str.slice(found)\n      };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n  }, {\n    key: \"aborted\",\n    get: function get() {\n      return this.abortListeners == null;\n    }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      if (type == \"abort\" && this.abortListeners) this.abortListeners.push(listener);\n    }\n  }]);\n  return CompletionContext;\n}();\nfunction toSet(chars) {\n  var flat = Object.keys(chars).join(\"\");\n  var words = /\\w/.test(flat);\n  if (words) flat = flat.replace(/\\w/g, \"\");\n  return \"[\".concat(words ? \"\\\\w\" : \"\").concat(flat.replace(/[^\\w\\s]/g, \"\\\\$&\"), \"]\");\n}\nfunction prefixMatch(options) {\n  var first = Object.create(null),\n    rest = Object.create(null);\n  var _iterator = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(options),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var label = _step.value.label;\n      first[label[0]] = true;\n      for (var i = 1; i < label.length; i++) rest[label[i]] = true;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var source = toSet(first) + toSet(rest) + \"*$\";\n  return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n  var options = list.map(function (o) {\n    return typeof o == \"string\" ? {\n      label: o\n    } : o;\n  });\n  var _ref = options.every(function (o) {\n      return /^\\w+$/.test(o.label);\n    }) ? [/\\w*$/, /\\w+$/] : prefixMatch(options),\n    _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_ref, 2),\n    validFor = _ref2[0],\n    match = _ref2[1];\n  return function (context) {\n    var token = context.matchBefore(match);\n    return token || context.explicit ? {\n      from: token ? token.from : context.pos,\n      options: options,\n      validFor: validFor\n    } : null;\n  };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n  return function (context) {\n    for (var pos = (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_8__.syntaxTree)(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n      if (nodes.indexOf(pos.name) > -1) return source(context);\n      if (pos.type.isTop) break;\n    }\n    return null;\n  };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n  return function (context) {\n    for (var pos = (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_8__.syntaxTree)(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n      if (nodes.indexOf(pos.name) > -1) return null;\n      if (pos.type.isTop) break;\n    }\n    return source(context);\n  };\n}\nvar Option = /*#__PURE__*/(0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(function Option(completion, source, match, score) {\n  (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, Option);\n  this.completion = completion;\n  this.source = source;\n  this.match = match;\n  this.score = score;\n});\nfunction cur(state) {\n  return state.selection.main.from;\n}\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n  var _a;\n  var source = expr.source;\n  var addStart = start && source[0] != \"^\",\n    addEnd = source[source.length - 1] != \"$\";\n  if (!addStart && !addEnd) return expr;\n  return new RegExp(\"\".concat(addStart ? \"^\" : \"\", \"(?:\").concat(source, \")\").concat(addEnd ? \"$\" : \"\"), (_a = expr.flags) !== null && _a !== void 0 ? _a : expr.ignoreCase ? \"i\" : \"\");\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nvar pickedCompletion = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n  var main = state.selection.main,\n    fromOff = from - main.from,\n    toOff = to - main.from;\n  return Object.assign(Object.assign({}, state.changeByRange(function (range) {\n    if (range != main && from != to && state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to)) return {\n      range: range\n    };\n    return {\n      changes: {\n        from: range.from + fromOff,\n        to: to == main.from ? range.to : range.from + toOff,\n        insert: text\n      },\n      range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(range.from + fromOff + text.length)\n    };\n  })), {\n    userEvent: \"input.complete\"\n  });\n}\nvar SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n  if (!Array.isArray(source)) return source;\n  var known = SourceCache.get(source);\n  if (!known) SourceCache.set(source, known = completeFromList(source));\n  return known;\n}\nvar startCompletionEffect = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define();\nvar closeCompletionEffect = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nvar FuzzyMatcher = /*#__PURE__*/function () {\n  function FuzzyMatcher(pattern) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, FuzzyMatcher);\n    this.pattern = pattern;\n    this.chars = [];\n    this.folded = [];\n    // Buffers reused by calls to `match` to track matched character\n    // positions.\n    this.any = [];\n    this.precise = [];\n    this.byWord = [];\n    for (var p = 0; p < pattern.length;) {\n      var char = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(pattern, p),\n        size = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)(char);\n      this.chars.push(char);\n      var part = pattern.slice(p, p + size),\n        upper = part.toUpperCase();\n      this.folded.push((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(upper == part ? part.toLowerCase() : upper, 0));\n      p += size;\n    }\n    this.astral = pattern.length != this.chars.length;\n  }\n  // Matches a given word (completion) against the pattern (input).\n  // Will return null for no match, and otherwise an array that starts\n  // with the match score, followed by any number of `from, to` pairs\n  // indicating the matched parts of `word`.\n  //\n  // The score is a number that is more negative the worse the match\n  // is. See `Penalty` above.\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(FuzzyMatcher, [{\n    key: \"match\",\n    value: function match(word) {\n      if (this.pattern.length == 0) return [-100 /* Penalty.NotFull */];\n      if (word.length < this.pattern.length) return null;\n      var chars = this.chars,\n        folded = this.folded,\n        any = this.any,\n        precise = this.precise,\n        byWord = this.byWord;\n      // For single-character queries, only match when they occur right\n      // at the start\n      if (chars.length == 1) {\n        var first = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(word, 0),\n          firstSize = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)(first);\n        var _score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n        if (first == chars[0]) ;else if (first == folded[0]) _score += -200 /* Penalty.CaseFold */;else return null;\n        return [_score, 0, firstSize];\n      }\n      var direct = word.indexOf(this.pattern);\n      if (direct == 0) return [word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, 0, this.pattern.length];\n      var len = chars.length,\n        anyTo = 0;\n      if (direct < 0) {\n        for (var i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n          var next = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(word, i);\n          if (next == chars[anyTo] || next == folded[anyTo]) any[anyTo++] = i;\n          i += (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)(next);\n        }\n        // No match, exit immediately\n        if (anyTo < len) return null;\n      }\n      // This tracks the extent of the precise (non-folded, not\n      // necessarily adjacent) match\n      var preciseTo = 0;\n      // Tracks whether there is a match that hits only characters that\n      // appear to be starting words. `byWordFolded` is set to true when\n      // a case folded character is encountered in such a match\n      var byWordTo = 0,\n        byWordFolded = false;\n      // If we've found a partial adjacent match, these track its state\n      var adjacentTo = 0,\n        adjacentStart = -1,\n        adjacentEnd = -1;\n      var hasLower = /[a-z]/.test(word),\n        wordAdjacent = true;\n      // Go over the option's text, scanning for the various kinds of matches\n      for (var _i = 0, _e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; _i < _e && byWordTo < len;) {\n        var _next = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(word, _i);\n        if (direct < 0) {\n          if (preciseTo < len && _next == chars[preciseTo]) precise[preciseTo++] = _i;\n          if (adjacentTo < len) {\n            if (_next == chars[adjacentTo] || _next == folded[adjacentTo]) {\n              if (adjacentTo == 0) adjacentStart = _i;\n              adjacentEnd = _i + 1;\n              adjacentTo++;\n            } else {\n              adjacentTo = 0;\n            }\n          }\n        }\n        var ch = void 0,\n          type = _next < 0xff ? _next >= 48 && _next <= 57 || _next >= 97 && _next <= 122 ? 2 /* Tp.Lower */ : _next >= 65 && _next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */ : (ch = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.fromCodePoint)(_next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */;\n        if (!_i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n          if (chars[byWordTo] == _next || folded[byWordTo] == _next && (byWordFolded = true)) byWord[byWordTo++] = _i;else if (byWord.length) wordAdjacent = false;\n        }\n        prevType = type;\n        _i += (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)(_next);\n      }\n      if (byWordTo == len && byWord[0] == 0 && wordAdjacent) return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n      if (adjacentTo == len && adjacentStart == 0) return [-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), 0, adjacentEnd];\n      if (direct > -1) return [-700 /* Penalty.NotStart */ - word.length, direct, direct + this.pattern.length];\n      if (adjacentTo == len) return [-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, adjacentStart, adjacentEnd];\n      if (byWordTo == len) return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ + (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n      return chars.length == 2 ? null : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n  }, {\n    key: \"result\",\n    value: function result(score, positions, word) {\n      var result = [score - word.length],\n        i = 1;\n      var _iterator2 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(positions),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var pos = _step2.value;\n          var to = pos + (this.astral ? (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(word, pos)) : 1);\n          if (i > 1 && result[i - 1] == pos) result[i - 1] = to;else {\n            result[i++] = pos;\n            result[i++] = to;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return result;\n    }\n  }]);\n  return FuzzyMatcher;\n}();\nvar completionConfig = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Facet.define({\n  combine: function combine(configs) {\n    return (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.combineConfig)(configs, {\n      activateOnTyping: true,\n      selectOnOpen: true,\n      override: null,\n      closeOnBlur: true,\n      maxRenderedOptions: 100,\n      defaultKeymap: true,\n      tooltipClass: function tooltipClass() {\n        return \"\";\n      },\n      optionClass: function optionClass() {\n        return \"\";\n      },\n      aboveCursor: false,\n      icons: true,\n      addToOptions: [],\n      positionInfo: defaultPositionInfo,\n      compareCompletions: function compareCompletions(a, b) {\n        return a.label.localeCompare(b.label);\n      },\n      interactionDelay: 75\n    }, {\n      defaultKeymap: function defaultKeymap(a, b) {\n        return a && b;\n      },\n      closeOnBlur: function closeOnBlur(a, b) {\n        return a && b;\n      },\n      icons: function icons(a, b) {\n        return a && b;\n      },\n      tooltipClass: function tooltipClass(a, b) {\n        return function (c) {\n          return joinClass(a(c), b(c));\n        };\n      },\n      optionClass: function optionClass(a, b) {\n        return function (c) {\n          return joinClass(a(c), b(c));\n        };\n      },\n      addToOptions: function addToOptions(a, b) {\n        return a.concat(b);\n      }\n    });\n  }\n});\nfunction joinClass(a, b) {\n  return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space) {\n  var rtl = view.textDirection == _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Direction.RTL,\n    left = rtl,\n    narrow = false;\n  var side = \"top\",\n    offset,\n    maxWidth;\n  var spaceLeft = list.left - space.left,\n    spaceRight = space.right - list.right;\n  var infoWidth = info.right - info.left,\n    infoHeight = info.bottom - info.top;\n  if (left && spaceLeft < Math.min(infoWidth, spaceRight)) left = false;else if (!left && spaceRight < Math.min(infoWidth, spaceLeft)) left = true;\n  if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n    offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n    maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n  } else {\n    narrow = true;\n    maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n    var spaceBelow = space.bottom - list.bottom;\n    if (spaceBelow >= infoHeight || spaceBelow > list.top) {\n      // Below the completion\n      offset = option.bottom - list.top;\n    } else {\n      // Above it\n      side = \"bottom\";\n      offset = list.bottom - option.top;\n    }\n  }\n  return {\n    style: \"\".concat(side, \": \").concat(offset, \"px; max-width: \").concat(maxWidth, \"px\"),\n    class: \"cm-completionInfo-\" + (narrow ? rtl ? \"left-narrow\" : \"right-narrow\" : left ? \"left\" : \"right\")\n  };\n}\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward) {\n  var by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"option\";\n  return function (view) {\n    var cState = view.state.field(completionState, false);\n    if (!cState || !cState.open || cState.open.disabled || Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay) return false;\n    var step = 1,\n      tooltip;\n    if (by == \"page\" && (tooltip = (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.getTooltip)(view, cState.open.tooltip))) step = Math.max(2, Math.floor(tooltip.dom.offsetHeight / tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n    var length = cState.open.options.length;\n    var selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n    if (selected < 0) selected = by == \"page\" ? 0 : length - 1;else if (selected >= length) selected = by == \"page\" ? length - 1 : 0;\n    view.dispatch({\n      effects: setSelectedEffect.of(selected)\n    });\n    return true;\n  };\n}\n/**\nAccept the current completion.\n*/\nvar acceptCompletion = function acceptCompletion(view) {\n  var cState = view.state.field(completionState, false);\n  if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 || Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay) return false;\n  if (!cState.open.disabled) return applyCompletion(view, cState.open.options[cState.open.selected]);\n  return true;\n};\n/**\nExplicitly start autocompletion.\n*/\nvar startCompletion = function startCompletion(view) {\n  var cState = view.state.field(completionState, false);\n  if (!cState) return false;\n  view.dispatch({\n    effects: startCompletionEffect.of(true)\n  });\n  return true;\n};\n/**\nClose the currently active completion.\n*/\nvar closeCompletion = function closeCompletion(view) {\n  var cState = view.state.field(completionState, false);\n  if (!cState || !cState.active.some(function (a) {\n    return a.state != 0;\n  } /* State.Inactive */)) return false;\n  view.dispatch({\n    effects: closeCompletionEffect.of(null)\n  });\n  return true;\n};\nvar RunningQuery = /*#__PURE__*/(0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(function RunningQuery(active, context) {\n  (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, RunningQuery);\n  this.active = active;\n  this.context = context;\n  this.time = Date.now();\n  this.updates = [];\n  // Note that 'undefined' means 'not done yet', whereas 'null' means\n  // 'query returned null'.\n  this.done = undefined;\n});\nvar DebounceTime = 50,\n  MaxUpdateCount = 50,\n  MinAbortTime = 1000;\nvar completionPlugin = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.ViewPlugin.fromClass( /*#__PURE__*/function () {\n  function _class(view) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, _class);\n    this.view = view;\n    this.debounceUpdate = -1;\n    this.running = [];\n    this.debounceAccept = -1;\n    this.composing = 0 /* CompositionState.None */;\n    var _iterator3 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(view.state.field(completionState).active),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var active = _step3.value;\n        if (active.state == 1 /* State.Pending */) this.startQuery(active);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_class, [{\n    key: \"update\",\n    value: function update(_update) {\n      var _this = this;\n      var cState = _update.state.field(completionState);\n      if (!_update.selectionSet && !_update.docChanged && _update.startState.field(completionState) == cState) return;\n      var doesReset = _update.transactions.some(function (tr) {\n        return (tr.selection || tr.docChanged) && !getUserEvent(tr);\n      });\n      for (var i = 0; i < this.running.length; i++) {\n        var query = this.running[i];\n        if (doesReset || query.updates.length + _update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n          var _iterator4 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(query.context.abortListeners),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var handler = _step4.value;\n              try {\n                handler();\n              } catch (e) {\n                (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.logException)(this.view.state, e);\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n          query.context.abortListeners = null;\n          this.running.splice(i--, 1);\n        } else {\n          var _query$updates;\n          (_query$updates = query.updates).push.apply(_query$updates, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_update.transactions));\n        }\n      }\n      if (this.debounceUpdate > -1) clearTimeout(this.debounceUpdate);\n      this.debounceUpdate = cState.active.some(function (a) {\n        return a.state == 1 /* State.Pending */ && !_this.running.some(function (q) {\n          return q.active.source == a.source;\n        });\n      }) ? setTimeout(function () {\n        return _this.startUpdate();\n      }, DebounceTime) : -1;\n      if (this.composing != 0 /* CompositionState.None */) {\n        var _iterator5 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(_update.transactions),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var tr = _step5.value;\n            if (getUserEvent(tr) == \"input\") this.composing = 2 /* CompositionState.Changed */;else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection) this.composing = 3 /* CompositionState.ChangedAndMoved */;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  }, {\n    key: \"startUpdate\",\n    value: function startUpdate() {\n      var _this2 = this;\n      this.debounceUpdate = -1;\n      var state = this.view.state,\n        cState = state.field(completionState);\n      var _iterator6 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(cState.active),\n        _step6;\n      try {\n        var _loop = function _loop() {\n          var active = _step6.value;\n          if (active.state == 1 /* State.Pending */ && !_this2.running.some(function (r) {\n            return r.active.source == active.source;\n          })) _this2.startQuery(active);\n        };\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"startQuery\",\n    value: function startQuery(active) {\n      var _this3 = this;\n      var state = this.view.state,\n        pos = cur(state);\n      var context = new CompletionContext(state, pos, active.explicitPos == pos);\n      var pending = new RunningQuery(active, context);\n      this.running.push(pending);\n      Promise.resolve(active.source(context)).then(function (result) {\n        if (!pending.context.aborted) {\n          pending.done = result || null;\n          _this3.scheduleAccept();\n        }\n      }, function (err) {\n        _this3.view.dispatch({\n          effects: closeCompletionEffect.of(null)\n        });\n        (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.logException)(_this3.view.state, err);\n      });\n    }\n  }, {\n    key: \"scheduleAccept\",\n    value: function scheduleAccept() {\n      var _this4 = this;\n      if (this.running.every(function (q) {\n        return q.done !== undefined;\n      })) this.accept();else if (this.debounceAccept < 0) this.debounceAccept = setTimeout(function () {\n        return _this4.accept();\n      }, DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      var _this5 = this;\n      var _a;\n      if (this.debounceAccept > -1) clearTimeout(this.debounceAccept);\n      this.debounceAccept = -1;\n      var updated = [];\n      var conf = this.view.state.facet(completionConfig);\n      var _loop2 = function _loop2(_i2) {\n        var query = _this5.running[_i2];\n        if (query.done === undefined) {\n          i = _i2;\n          return \"continue\";\n        }\n        _this5.running.splice(_i2--, 1);\n        if (query.done) {\n          var active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : _this5.view.state));\n          // Replay the transactions that happened since the start of\n          // the request and see if that preserves the result\n          var _iterator7 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(query.updates),\n            _step7;\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var tr = _step7.value;\n              active = active.update(tr, conf);\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n          if (active.hasResult()) {\n            updated.push(active);\n            i = _i2;\n            return \"continue\";\n          }\n        }\n        var current = _this5.view.state.field(completionState).active.find(function (a) {\n          return a.source == query.active.source;\n        });\n        if (current && current.state == 1 /* State.Pending */) {\n          if (query.done == null) {\n            // Explicitly failed. Should clear the pending status if it\n            // hasn't been re-set in the meantime.\n            var _active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n            var _iterator8 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(query.updates),\n              _step8;\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _tr = _step8.value;\n                _active = _active.update(_tr, conf);\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n            if (_active.state != 1 /* State.Pending */) updated.push(_active);\n          } else {\n            // Cleared by subsequent transactions. Restart.\n            _this5.startQuery(current);\n          }\n        }\n        i = _i2;\n      };\n      for (var i = 0; i < this.running.length; i++) {\n        var _ret = _loop2(i);\n        if (_ret === \"continue\") continue;\n      }\n      if (updated.length) this.view.dispatch({\n        effects: setActiveEffect.of(updated)\n      });\n    }\n  }]);\n  return _class;\n}(), {\n  eventHandlers: {\n    blur: function blur(event) {\n      var state = this.view.state.field(completionState, false);\n      if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n        var dialog = state.open && (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.getTooltip)(this.view, state.open.tooltip);\n        if (!dialog || !dialog.dom.contains(event.relatedTarget)) this.view.dispatch({\n          effects: closeCompletionEffect.of(null)\n        });\n      }\n    },\n    compositionstart: function compositionstart() {\n      this.composing = 1 /* CompositionState.Started */;\n    },\n    compositionend: function compositionend() {\n      var _this6 = this;\n      if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n        // Safari fires compositionend events synchronously, possibly\n        // from inside an update, so dispatch asynchronously to avoid reentrancy\n        setTimeout(function () {\n          return _this6.view.dispatch({\n            effects: startCompletionEffect.of(false)\n          });\n        }, 20);\n      }\n      this.composing = 0 /* CompositionState.None */;\n    }\n  }\n});\n\nfunction applyCompletion(view, option) {\n  var apply = option.completion.apply || option.completion.label;\n  var result = view.state.field(completionState).active.find(function (a) {\n    return a.source == option.source;\n  });\n  if (!(result instanceof ActiveResult)) return false;\n  if (typeof apply == \"string\") view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), {\n    annotations: pickedCompletion.of(option.completion)\n  }));else apply(view, option.completion, result.from, result.to);\n  return true;\n}\nfunction optionContent(config) {\n  var content = config.addToOptions.slice();\n  if (config.icons) content.push({\n    render: function render(completion) {\n      var _icon$classList;\n      var icon = document.createElement(\"div\");\n      icon.classList.add(\"cm-completionIcon\");\n      if (completion.type) (_icon$classList = icon.classList).add.apply(_icon$classList, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(completion.type.split(/\\s+/g).map(function (cls) {\n        return \"cm-completionIcon-\" + cls;\n      })));\n      icon.setAttribute(\"aria-hidden\", \"true\");\n      return icon;\n    },\n    position: 20\n  });\n  content.push({\n    render: function render(completion, _s, match) {\n      var labelElt = document.createElement(\"span\");\n      labelElt.className = \"cm-completionLabel\";\n      var label = completion.label,\n        off = 0;\n      for (var j = 1; j < match.length;) {\n        var from = match[j++],\n          to = match[j++];\n        if (from > off) labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n        var span = labelElt.appendChild(document.createElement(\"span\"));\n        span.appendChild(document.createTextNode(label.slice(from, to)));\n        span.className = \"cm-completionMatchedText\";\n        off = to;\n      }\n      if (off < label.length) labelElt.appendChild(document.createTextNode(label.slice(off)));\n      return labelElt;\n    },\n    position: 50\n  }, {\n    render: function render(completion) {\n      if (!completion.detail) return null;\n      var detailElt = document.createElement(\"span\");\n      detailElt.className = \"cm-completionDetail\";\n      detailElt.textContent = completion.detail;\n      return detailElt;\n    },\n    position: 80\n  });\n  return content.sort(function (a, b) {\n    return a.position - b.position;\n  }).map(function (a) {\n    return a.render;\n  });\n}\nfunction rangeAroundSelected(total, selected, max) {\n  if (total <= max) return {\n    from: 0,\n    to: total\n  };\n  if (selected < 0) selected = 0;\n  if (selected <= total >> 1) {\n    var _off = Math.floor(selected / max);\n    return {\n      from: _off * max,\n      to: (_off + 1) * max\n    };\n  }\n  var off = Math.floor((total - selected) / max);\n  return {\n    from: total - (off + 1) * max,\n    to: total - off * max\n  };\n}\nvar CompletionTooltip = /*#__PURE__*/function () {\n  function CompletionTooltip(view, stateField) {\n    var _this7 = this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, CompletionTooltip);\n    this.view = view;\n    this.stateField = stateField;\n    this.info = null;\n    this.placeInfoReq = {\n      read: function read() {\n        return _this7.measureInfo();\n      },\n      write: function write(pos) {\n        return _this7.placeInfo(pos);\n      },\n      key: this\n    };\n    this.space = null;\n    this.currentClass = \"\";\n    var cState = view.state.field(stateField);\n    var _cState$open = cState.open,\n      options = _cState$open.options,\n      selected = _cState$open.selected;\n    var config = view.state.facet(completionConfig);\n    this.optionContent = optionContent(config);\n    this.optionClass = config.optionClass;\n    this.tooltipClass = config.tooltipClass;\n    this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"cm-tooltip-autocomplete\";\n    this.updateTooltipClass(view.state);\n    this.dom.addEventListener(\"mousedown\", function (e) {\n      for (var dom = e.target, match; dom && dom != _this7.dom; dom = dom.parentNode) {\n        if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n          applyCompletion(view, options[+match[1]]);\n          e.preventDefault();\n          return;\n        }\n      }\n    });\n    this.dom.addEventListener(\"focusout\", function (e) {\n      var state = view.state.field(_this7.stateField, false);\n      if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur && e.relatedTarget != view.contentDOM) view.dispatch({\n        effects: closeCompletionEffect.of(null)\n      });\n    });\n    this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));\n    this.list.addEventListener(\"scroll\", function () {\n      if (_this7.info) _this7.view.requestMeasure(_this7.placeInfoReq);\n    });\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(CompletionTooltip, [{\n    key: \"mount\",\n    value: function mount() {\n      this.updateSel();\n    }\n  }, {\n    key: \"update\",\n    value: function update(_update2) {\n      var _a, _b, _c;\n      var cState = _update2.state.field(this.stateField);\n      var prevState = _update2.startState.field(this.stateField);\n      this.updateTooltipClass(_update2.state);\n      if (cState != prevState) {\n        this.updateSel();\n        if (((_a = cState.open) === null || _a === void 0 ? void 0 : _a.disabled) != ((_b = prevState.open) === null || _b === void 0 ? void 0 : _b.disabled)) this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!((_c = cState.open) === null || _c === void 0 ? void 0 : _c.disabled));\n      }\n    }\n  }, {\n    key: \"updateTooltipClass\",\n    value: function updateTooltipClass(state) {\n      var cls = this.tooltipClass(state);\n      if (cls != this.currentClass) {\n        var _iterator9 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.currentClass.split(\" \")),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var c = _step9.value;\n            if (c) this.dom.classList.remove(c);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n        var _iterator10 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(cls.split(\" \")),\n          _step10;\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var _c2 = _step10.value;\n            if (_c2) this.dom.classList.add(_c2);\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n        this.currentClass = cls;\n      }\n    }\n  }, {\n    key: \"positioned\",\n    value: function positioned(space) {\n      this.space = space;\n      if (this.info) this.view.requestMeasure(this.placeInfoReq);\n    }\n  }, {\n    key: \"updateSel\",\n    value: function updateSel() {\n      var _this8 = this;\n      var cState = this.view.state.field(this.stateField),\n        open = cState.open;\n      if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n        this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n        this.list.remove();\n        this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", function () {\n          if (_this8.info) _this8.view.requestMeasure(_this8.placeInfoReq);\n        });\n      }\n      if (this.updateSelectedOption(open.selected)) {\n        if (this.info) {\n          this.info.remove();\n          this.info = null;\n        }\n        var completion = open.options[open.selected].completion;\n        var info = completion.info;\n        if (!info) return;\n        var infoResult = typeof info === 'string' ? document.createTextNode(info) : info(completion);\n        if (!infoResult) return;\n        if ('then' in infoResult) {\n          infoResult.then(function (node) {\n            if (node && _this8.view.state.field(_this8.stateField, false) == cState) _this8.addInfoPane(node);\n          }).catch(function (e) {\n            return (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.logException)(_this8.view.state, e, \"completion info\");\n          });\n        } else {\n          this.addInfoPane(infoResult);\n        }\n      }\n    }\n  }, {\n    key: \"addInfoPane\",\n    value: function addInfoPane(content) {\n      var dom = this.info = document.createElement(\"div\");\n      dom.className = \"cm-tooltip cm-completionInfo\";\n      dom.appendChild(content);\n      this.dom.appendChild(dom);\n      this.view.requestMeasure(this.placeInfoReq);\n    }\n  }, {\n    key: \"updateSelectedOption\",\n    value: function updateSelectedOption(selected) {\n      var set = null;\n      for (var opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n        if (opt.nodeName != \"LI\" || !opt.id) {\n          i--; // A section header\n        } else if (i == selected) {\n          if (!opt.hasAttribute(\"aria-selected\")) {\n            opt.setAttribute(\"aria-selected\", \"true\");\n            set = opt;\n          }\n        } else {\n          if (opt.hasAttribute(\"aria-selected\")) opt.removeAttribute(\"aria-selected\");\n        }\n      }\n      if (set) scrollIntoView(this.list, set);\n      return set;\n    }\n  }, {\n    key: \"measureInfo\",\n    value: function measureInfo() {\n      var sel = this.dom.querySelector(\"[aria-selected]\");\n      if (!sel || !this.info) return null;\n      var listRect = this.dom.getBoundingClientRect();\n      var infoRect = this.info.getBoundingClientRect();\n      var selRect = sel.getBoundingClientRect();\n      var space = this.space;\n      if (!space) {\n        var win = this.dom.ownerDocument.defaultView || window;\n        space = {\n          left: 0,\n          top: 0,\n          right: win.innerWidth,\n          bottom: win.innerHeight\n        };\n      }\n      if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 || selRect.bottom < Math.max(space.top, listRect.top) + 10) return null;\n      return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space);\n    }\n  }, {\n    key: \"placeInfo\",\n    value: function placeInfo(pos) {\n      if (this.info) {\n        if (pos) {\n          if (pos.style) this.info.style.cssText = pos.style;\n          this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n        } else {\n          this.info.style.cssText = \"top: -1e6px\";\n        }\n      }\n    }\n  }, {\n    key: \"createListBox\",\n    value: function createListBox(options, id, range) {\n      var ul = document.createElement(\"ul\");\n      ul.id = id;\n      ul.setAttribute(\"role\", \"listbox\");\n      ul.setAttribute(\"aria-expanded\", \"true\");\n      ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n      var curSection = null;\n      for (var i = range.from; i < range.to; i++) {\n        var _options$i = options[i],\n          completion = _options$i.completion,\n          match = _options$i.match,\n          section = completion.section;\n        if (section) {\n          var name = typeof section == \"string\" ? section : section.name;\n          if (name != curSection && (i > range.from || range.from == 0)) {\n            curSection = name;\n            if (typeof section != \"string\" && section.header) {\n              ul.appendChild(section.header(section));\n            } else {\n              var header = ul.appendChild(document.createElement(\"completion-section\"));\n              header.textContent = name;\n            }\n          }\n        }\n        var li = ul.appendChild(document.createElement(\"li\"));\n        li.id = id + \"-\" + i;\n        li.setAttribute(\"role\", \"option\");\n        var cls = this.optionClass(completion);\n        if (cls) li.className = cls;\n        var _iterator11 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.optionContent),\n          _step11;\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var source = _step11.value;\n            var node = source(completion, this.view.state, match);\n            if (node) li.appendChild(node);\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n      if (range.from) ul.classList.add(\"cm-completionListIncompleteTop\");\n      if (range.to < options.length) ul.classList.add(\"cm-completionListIncompleteBottom\");\n      return ul;\n    }\n  }]);\n  return CompletionTooltip;\n}(); // We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n  return function (view) {\n    return new CompletionTooltip(view, stateField);\n  };\n}\nfunction scrollIntoView(container, element) {\n  var parent = container.getBoundingClientRect();\n  var self = element.getBoundingClientRect();\n  if (self.top < parent.top) container.scrollTop -= parent.top - self.top;else if (self.bottom > parent.bottom) container.scrollTop += self.bottom - parent.bottom;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n  return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) + (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n  var options = [];\n  var sections = null;\n  var addOption = function addOption(option) {\n    options.push(option);\n    var section = option.completion.section;\n    if (section) {\n      if (!sections) sections = [];\n      var name = typeof section == \"string\" ? section : section.name;\n      if (!sections.some(function (s) {\n        return s.name == name;\n      })) sections.push(typeof section == \"string\" ? {\n        name: name\n      } : section);\n    }\n  };\n  var _iterator12 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(active),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var a = _step12.value;\n      if (a.hasResult()) {\n        if (a.result.filter === false) {\n          var getMatch = a.result.getMatch;\n          var _iterator16 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(a.result.options),\n            _step16;\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var _option = _step16.value;\n              var match = [1e9 - options.length];\n              if (getMatch) {\n                var _iterator17 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(getMatch(_option)),\n                  _step17;\n                try {\n                  for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                    var n = _step17.value;\n                    match.push(n);\n                  }\n                } catch (err) {\n                  _iterator17.e(err);\n                } finally {\n                  _iterator17.f();\n                }\n              }\n              addOption(new Option(_option, a.source, match, match[0]));\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n        } else {\n          var matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)),\n            _match = void 0;\n          var _iterator18 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(a.result.options),\n            _step18;\n          try {\n            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n              var _option2 = _step18.value;\n              if (_match = matcher.match(_option2.label)) {\n                addOption(new Option(_option2, a.source, _match, _match[0] + (_option2.boost || 0)));\n              }\n            }\n          } catch (err) {\n            _iterator18.e(err);\n          } finally {\n            _iterator18.f();\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  if (sections) {\n    var sectionOrder = Object.create(null),\n      pos = 0;\n    var cmp = function cmp(a, b) {\n      var _a, _b;\n      return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1);\n    };\n    var _iterator13 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(sections.sort(cmp)),\n      _step13;\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var s = _step13.value;\n        pos -= 1e5;\n        sectionOrder[s.name] = pos;\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n    var _iterator14 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(options),\n      _step14;\n    try {\n      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n        var option = _step14.value;\n        var section = option.completion.section;\n        if (section) option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n      }\n    } catch (err) {\n      _iterator14.e(err);\n    } finally {\n      _iterator14.f();\n    }\n  }\n  var result = [],\n    prev = null;\n  var compare = state.facet(completionConfig).compareCompletions;\n  var _iterator15 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(options.sort(function (a, b) {\n      return b.score - a.score || compare(a.completion, b.completion);\n    })),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var opt = _step15.value;\n      if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail || prev.type != null && opt.completion.type != null && prev.type != opt.completion.type || prev.apply != opt.completion.apply) result.push(opt);else if (score(opt.completion) > score(prev)) result[result.length - 1] = opt;\n      prev = opt.completion;\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n  return result;\n}\nvar CompletionDialog = /*#__PURE__*/function () {\n  function CompletionDialog(options, attrs, tooltip, timestamp, selected, disabled) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, CompletionDialog);\n    this.options = options;\n    this.attrs = attrs;\n    this.tooltip = tooltip;\n    this.timestamp = timestamp;\n    this.selected = selected;\n    this.disabled = disabled;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(CompletionDialog, [{\n    key: \"setSelected\",\n    value: function setSelected(selected, id) {\n      return selected == this.selected || selected >= this.options.length ? this : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n  }, {\n    key: \"map\",\n    value: function map(changes) {\n      return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), {\n        pos: changes.mapPos(this.tooltip.pos)\n      }), this.timestamp, this.selected, this.disabled);\n    }\n  }], [{\n    key: \"build\",\n    value: function build(active, state, id, prev, conf) {\n      var options = sortOptions(active, state);\n      if (!options.length) {\n        return prev && active.some(function (a) {\n          return a.state == 1;\n        } /* State.Pending */) ? new CompletionDialog(prev.options, prev.attrs, prev.tooltip, prev.timestamp, prev.selected, true) : null;\n      }\n      var selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n      if (prev && prev.selected != selected && prev.selected != -1) {\n        var selectedValue = prev.options[prev.selected].completion;\n        for (var i = 0; i < options.length; i++) if (options[i].completion == selectedValue) {\n          selected = i;\n          break;\n        }\n      }\n      return new CompletionDialog(options, makeAttrs(id, selected), {\n        pos: active.reduce(function (a, b) {\n          return b.hasResult() ? Math.min(a, b.from) : a;\n        }, 1e8),\n        create: completionTooltip(completionState),\n        above: conf.aboveCursor\n      }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n  }]);\n  return CompletionDialog;\n}();\nvar CompletionState = /*#__PURE__*/function () {\n  function CompletionState(active, id, open) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, CompletionState);\n    this.active = active;\n    this.id = id;\n    this.open = open;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(CompletionState, [{\n    key: \"update\",\n    value: function update(tr) {\n      var _this9 = this;\n      var state = tr.state,\n        conf = state.facet(completionConfig);\n      var sources = conf.override || state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n      var active = sources.map(function (source) {\n        var value = _this9.active.find(function (s) {\n          return s.source == source;\n        }) || new ActiveSource(source, _this9.active.some(function (a) {\n          return a.state != 0;\n        } /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        return value.update(tr, conf);\n      });\n      if (active.length == this.active.length && active.every(function (a, i) {\n        return a == _this9.active[i];\n      })) active = this.active;\n      var open = this.open;\n      if (open && tr.docChanged) open = open.map(tr.changes);\n      if (tr.selection || active.some(function (a) {\n        return a.hasResult() && tr.changes.touchesRange(a.from, a.to);\n      }) || !sameResults(active, this.active)) open = CompletionDialog.build(active, state, this.id, open, conf);else if (open && open.disabled && !active.some(function (a) {\n        return a.state == 1;\n      } /* State.Pending */)) open = null;\n      if (!open && active.every(function (a) {\n        return a.state != 1;\n      } /* State.Pending */) && active.some(function (a) {\n        return a.hasResult();\n      })) active = active.map(function (a) {\n        return a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a;\n      });\n      var _iterator19 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(tr.effects),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var effect = _step19.value;\n          if (effect.is(setSelectedEffect)) open = open && open.setSelected(effect.value, this.id);\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n  }, {\n    key: \"tooltip\",\n    get: function get() {\n      return this.open ? this.open.tooltip : null;\n    }\n  }, {\n    key: \"attrs\",\n    get: function get() {\n      return this.open ? this.open.attrs : baseAttrs;\n    }\n  }], [{\n    key: \"start\",\n    value: function start() {\n      return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n  }]);\n  return CompletionState;\n}();\nfunction sameResults(a, b) {\n  if (a == b) return true;\n  for (var iA = 0, iB = 0;;) {\n    while (iA < a.length && !a[iA].hasResult) iA++;\n    while (iB < b.length && !b[iB].hasResult) iB++;\n    var endA = iA == a.length,\n      endB = iB == b.length;\n    if (endA || endB) return endA == endB;\n    if (a[iA++].result != b[iB++].result) return false;\n  }\n}\nvar baseAttrs = {\n  \"aria-autocomplete\": \"list\"\n};\nfunction makeAttrs(id, selected) {\n  var result = {\n    \"aria-autocomplete\": \"list\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-controls\": id\n  };\n  if (selected > -1) result[\"aria-activedescendant\"] = id + \"-\" + selected;\n  return result;\n}\nvar none = [];\nfunction getUserEvent(tr) {\n  return tr.isUserEvent(\"input.type\") ? \"input\" : tr.isUserEvent(\"delete.backward\") ? \"delete\" : null;\n}\nvar ActiveSource = /*#__PURE__*/function () {\n  function ActiveSource(source, state) {\n    var explicitPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, ActiveSource);\n    this.source = source;\n    this.state = state;\n    this.explicitPos = explicitPos;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(ActiveSource, [{\n    key: \"hasResult\",\n    value: function hasResult() {\n      return false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(tr, conf) {\n      var event = getUserEvent(tr),\n        value = this;\n      if (event) value = value.handleUserEvent(tr, event, conf);else if (tr.docChanged) value = value.handleChange(tr);else if (tr.selection && value.state != 0 /* State.Inactive */) value = new ActiveSource(value.source, 0 /* State.Inactive */);\n      var _iterator20 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(tr.effects),\n        _step20;\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var effect = _step20.value;\n          if (effect.is(startCompletionEffect)) value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value ? cur(tr.state) : -1);else if (effect.is(closeCompletionEffect)) value = new ActiveSource(value.source, 0 /* State.Inactive */);else if (effect.is(setActiveEffect)) {\n            var _iterator21 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(effect.value),\n              _step21;\n            try {\n              for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                var active = _step21.value;\n                if (active.source == value.source) value = active;\n              }\n            } catch (err) {\n              _iterator21.e(err);\n            } finally {\n              _iterator21.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n      return value;\n    }\n  }, {\n    key: \"handleUserEvent\",\n    value: function handleUserEvent(tr, type, conf) {\n      return type == \"delete\" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* State.Pending */);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(tr) {\n      return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n  }, {\n    key: \"map\",\n    value: function map(changes) {\n      return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n  }]);\n  return ActiveSource;\n}();\nvar ActiveResult = /*#__PURE__*/function (_ActiveSource) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ActiveResult, _ActiveSource);\n  var _super = (0,_babel_runtime_helpers_createSuper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ActiveResult);\n  function ActiveResult(source, explicitPos, result, from, to) {\n    var _this10;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, ActiveResult);\n    _this10 = _super.call(this, source, 2 /* State.Result */, explicitPos);\n    _this10.result = result;\n    _this10.from = from;\n    _this10.to = to;\n    return _this10;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(ActiveResult, [{\n    key: \"hasResult\",\n    value: function hasResult() {\n      return true;\n    }\n  }, {\n    key: \"handleUserEvent\",\n    value: function handleUserEvent(tr, type, conf) {\n      var _a;\n      var from = tr.changes.mapPos(this.from),\n        to = tr.changes.mapPos(this.to, 1);\n      var pos = cur(tr.state);\n      if ((this.explicitPos < 0 ? pos <= from : pos < this.from) || pos > to || type == \"delete\" && cur(tr.startState) == this.from) return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n      var explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos),\n        updated;\n      if (checkValid(this.result.validFor, tr.state, from, to)) return new ActiveResult(this.source, explicitPos, this.result, from, to);\n      if (this.result.update && (updated = this.result.update(this.result, from, to, new CompletionContext(tr.state, pos, explicitPos >= 0)))) return new ActiveResult(this.source, explicitPos, updated, updated.from, (_a = updated.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n      return new ActiveSource(this.source, 1 /* State.Pending */, explicitPos);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(tr) {\n      return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n  }, {\n    key: \"map\",\n    value: function map(mapping) {\n      return mapping.empty ? this : new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n  }]);\n  return ActiveResult;\n}(ActiveSource);\nfunction checkValid(validFor, state, from, to) {\n  if (!validFor) return false;\n  var text = state.sliceDoc(from, to);\n  return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nvar setActiveEffect = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define({\n  map: function map(sources, mapping) {\n    return sources.map(function (s) {\n      return s.map(mapping);\n    });\n  }\n});\nvar setSelectedEffect = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define();\nvar completionState = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateField.define({\n  create: function create() {\n    return CompletionState.start();\n  },\n  update: function update(value, tr) {\n    return value.update(tr);\n  },\n  provide: function provide(f) {\n    return [_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.showTooltip.from(f, function (val) {\n      return val.tooltip;\n    }), _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.contentAttributes.from(f, function (state) {\n      return state.attrs;\n    })];\n  }\n});\nvar baseTheme = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.baseTheme({\n  \".cm-tooltip.cm-tooltip-autocomplete\": {\n    \"& > ul\": {\n      fontFamily: \"monospace\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden auto\",\n      maxWidth_fallback: \"700px\",\n      maxWidth: \"min(700px, 95vw)\",\n      minWidth: \"250px\",\n      maxHeight: \"10em\",\n      height: \"100%\",\n      listStyle: \"none\",\n      margin: 0,\n      padding: 0,\n      \"& > li, & > completion-section\": {\n        padding: \"1px 3px\",\n        lineHeight: 1.2\n      },\n      \"& > li\": {\n        overflowX: \"hidden\",\n        textOverflow: \"ellipsis\",\n        cursor: \"pointer\"\n      },\n      \"& > completion-section\": {\n        display: \"list-item\",\n        borderBottom: \"1px solid silver\",\n        paddingLeft: \"0.5em\",\n        opacity: 0.7\n      }\n    }\n  },\n  \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n    background: \"#17c\",\n    color: \"white\"\n  },\n  \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n    background: \"#777\"\n  },\n  \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n    background: \"#347\",\n    color: \"white\"\n  },\n  \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n    background: \"#444\"\n  },\n  \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n    content: '\"···\"',\n    opacity: 0.5,\n    display: \"block\",\n    textAlign: \"center\"\n  },\n  \".cm-tooltip.cm-completionInfo\": {\n    position: \"absolute\",\n    padding: \"3px 9px\",\n    width: \"max-content\",\n    maxWidth: \"\".concat(400 /* Info.Width */, \"px\"),\n    boxSizing: \"border-box\"\n  },\n  \".cm-completionInfo.cm-completionInfo-left\": {\n    right: \"100%\"\n  },\n  \".cm-completionInfo.cm-completionInfo-right\": {\n    left: \"100%\"\n  },\n  \".cm-completionInfo.cm-completionInfo-left-narrow\": {\n    right: \"\".concat(30 /* Info.Margin */, \"px\")\n  },\n  \".cm-completionInfo.cm-completionInfo-right-narrow\": {\n    left: \"\".concat(30 /* Info.Margin */, \"px\")\n  },\n  \"&light .cm-snippetField\": {\n    backgroundColor: \"#00000022\"\n  },\n  \"&dark .cm-snippetField\": {\n    backgroundColor: \"#ffffff22\"\n  },\n  \".cm-snippetFieldPosition\": {\n    verticalAlign: \"text-top\",\n    width: 0,\n    height: \"1.15em\",\n    display: \"inline-block\",\n    margin: \"0 -0.7px -.7em\",\n    borderLeft: \"1.4px dotted #888\"\n  },\n  \".cm-completionMatchedText\": {\n    textDecoration: \"underline\"\n  },\n  \".cm-completionDetail\": {\n    marginLeft: \"0.5em\",\n    fontStyle: \"italic\"\n  },\n  \".cm-completionIcon\": {\n    fontSize: \"90%\",\n    width: \".8em\",\n    display: \"inline-block\",\n    textAlign: \"center\",\n    paddingRight: \".6em\",\n    opacity: \"0.6\",\n    boxSizing: \"content-box\"\n  },\n  \".cm-completionIcon-function, .cm-completionIcon-method\": {\n    \"&:after\": {\n      content: \"'ƒ'\"\n    }\n  },\n  \".cm-completionIcon-class\": {\n    \"&:after\": {\n      content: \"'○'\"\n    }\n  },\n  \".cm-completionIcon-interface\": {\n    \"&:after\": {\n      content: \"'◌'\"\n    }\n  },\n  \".cm-completionIcon-variable\": {\n    \"&:after\": {\n      content: \"'𝑥'\"\n    }\n  },\n  \".cm-completionIcon-constant\": {\n    \"&:after\": {\n      content: \"'𝐶'\"\n    }\n  },\n  \".cm-completionIcon-type\": {\n    \"&:after\": {\n      content: \"'𝑡'\"\n    }\n  },\n  \".cm-completionIcon-enum\": {\n    \"&:after\": {\n      content: \"'∪'\"\n    }\n  },\n  \".cm-completionIcon-property\": {\n    \"&:after\": {\n      content: \"'□'\"\n    }\n  },\n  \".cm-completionIcon-keyword\": {\n    \"&:after\": {\n      content: \"'\\uD83D\\uDD11\\uFE0E'\"\n    } // Disable emoji rendering\n  },\n\n  \".cm-completionIcon-namespace\": {\n    \"&:after\": {\n      content: \"'▢'\"\n    }\n  },\n  \".cm-completionIcon-text\": {\n    \"&:after\": {\n      content: \"'abc'\",\n      fontSize: \"50%\",\n      verticalAlign: \"middle\"\n    }\n  }\n});\nvar FieldPos = /*#__PURE__*/(0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(function FieldPos(field, line, from, to) {\n  (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, FieldPos);\n  this.field = field;\n  this.line = line;\n  this.from = from;\n  this.to = to;\n});\nvar FieldRange = /*#__PURE__*/function () {\n  function FieldRange(field, from, to) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, FieldRange);\n    this.field = field;\n    this.from = from;\n    this.to = to;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(FieldRange, [{\n    key: \"map\",\n    value: function map(changes) {\n      var from = changes.mapPos(this.from, -1, _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.MapMode.TrackDel);\n      var to = changes.mapPos(this.to, 1, _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.MapMode.TrackDel);\n      return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n  }]);\n  return FieldRange;\n}();\nvar Snippet = /*#__PURE__*/function () {\n  function Snippet(lines, fieldPositions) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, Snippet);\n    this.lines = lines;\n    this.fieldPositions = fieldPositions;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Snippet, [{\n    key: \"instantiate\",\n    value: function instantiate(state, pos) {\n      var text = [],\n        lineStart = [pos];\n      var lineObj = state.doc.lineAt(pos),\n        baseIndent = /^\\s*/.exec(lineObj.text)[0];\n      var _iterator22 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.lines),\n        _step22;\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var line = _step22.value;\n          if (text.length) {\n            var indent = baseIndent,\n              tabs = /^\\t*/.exec(line)[0].length;\n            for (var i = 0; i < tabs; i++) indent += state.facet(_codemirror_language__WEBPACK_IMPORTED_MODULE_8__.indentUnit);\n            lineStart.push(pos + indent.length - tabs);\n            line = indent + line.slice(tabs);\n          }\n          text.push(line);\n          pos += line.length + 1;\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n      var ranges = this.fieldPositions.map(function (pos) {\n        return new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to);\n      });\n      return {\n        text: text,\n        ranges: ranges\n      };\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(template) {\n      var fields = [];\n      var lines = [],\n        positions = [],\n        m;\n      var _iterator23 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(template.split(/\\r\\n?|\\n/)),\n        _step23;\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var line = _step23.value;\n          while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n            var seq = m[1] ? +m[1] : null,\n              name = m[2] || m[3] || \"\",\n              found = -1;\n            for (var i = 0; i < fields.length; i++) {\n              if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false) found = i;\n            }\n            if (found < 0) {\n              var _i3 = 0;\n              while (_i3 < fields.length && (seq == null || fields[_i3].seq != null && fields[_i3].seq < seq)) _i3++;\n              fields.splice(_i3, 0, {\n                seq: seq,\n                name: name\n              });\n              found = _i3;\n              var _iterator24 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(positions),\n                _step24;\n              try {\n                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                  var pos = _step24.value;\n                  if (pos.field >= found) pos.field++;\n                }\n              } catch (err) {\n                _iterator24.e(err);\n              } finally {\n                _iterator24.f();\n              }\n            }\n            positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n            line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n          }\n          for (var esc; esc = /\\\\([{}])/.exec(line);) {\n            line = line.slice(0, esc.index) + esc[1] + line.slice(esc.index + esc[0].length);\n            var _iterator25 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(positions),\n              _step25;\n            try {\n              for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n                var _pos = _step25.value;\n                if (_pos.line == lines.length && _pos.from > esc.index) {\n                  _pos.from--;\n                  _pos.to--;\n                }\n              }\n            } catch (err) {\n              _iterator25.e(err);\n            } finally {\n              _iterator25.f();\n            }\n          }\n          lines.push(line);\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n      return new Snippet(lines, positions);\n    }\n  }]);\n  return Snippet;\n}();\nvar fieldMarker = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.widget({\n  widget: /*@__PURE__*/new ( /*#__PURE__*/function (_WidgetType) {\n    (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_class2, _WidgetType);\n    var _super2 = (0,_babel_runtime_helpers_createSuper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class2);\n    function _class2() {\n      (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, _class2);\n      return _super2.apply(this, arguments);\n    }\n    (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_class2, [{\n      key: \"toDOM\",\n      value: function toDOM() {\n        var span = document.createElement(\"span\");\n        span.className = \"cm-snippetFieldPosition\";\n        return span;\n      }\n    }, {\n      key: \"ignoreEvent\",\n      value: function ignoreEvent() {\n        return false;\n      }\n    }]);\n    return _class2;\n  }(_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.WidgetType))()\n});\nvar fieldRange = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.mark({\n  class: \"cm-snippetField\"\n});\nvar ActiveSnippet = /*#__PURE__*/function () {\n  function ActiveSnippet(ranges, active) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, ActiveSnippet);\n    this.ranges = ranges;\n    this.active = active;\n    this.deco = _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.set(ranges.map(function (r) {\n      return (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to);\n    }));\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(ActiveSnippet, [{\n    key: \"map\",\n    value: function map(changes) {\n      var ranges = [];\n      var _iterator26 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.ranges),\n        _step26;\n      try {\n        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n          var r = _step26.value;\n          var mapped = r.map(changes);\n          if (!mapped) return null;\n          ranges.push(mapped);\n        }\n      } catch (err) {\n        _iterator26.e(err);\n      } finally {\n        _iterator26.f();\n      }\n      return new ActiveSnippet(ranges, this.active);\n    }\n  }, {\n    key: \"selectionInsideField\",\n    value: function selectionInsideField(sel) {\n      var _this11 = this;\n      return sel.ranges.every(function (range) {\n        return _this11.ranges.some(function (r) {\n          return r.field == _this11.active && r.from <= range.from && r.to >= range.to;\n        });\n      });\n    }\n  }]);\n  return ActiveSnippet;\n}();\nvar setActive = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define({\n  map: function map(value, changes) {\n    return value && value.map(changes);\n  }\n});\nvar moveToField = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define();\nvar snippetState = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateField.define({\n  create: function create() {\n    return null;\n  },\n  update: function update(value, tr) {\n    var _iterator27 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(tr.effects),\n      _step27;\n    try {\n      for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n        var effect = _step27.value;\n        if (effect.is(setActive)) return effect.value;\n        if (effect.is(moveToField) && value) return new ActiveSnippet(value.ranges, effect.value);\n      }\n    } catch (err) {\n      _iterator27.e(err);\n    } finally {\n      _iterator27.f();\n    }\n    if (value && tr.docChanged) value = value.map(tr.changes);\n    if (value && tr.selection && !value.selectionInsideField(tr.selection)) value = null;\n    return value;\n  },\n  provide: function provide(f) {\n    return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.decorations.from(f, function (val) {\n      return val ? val.deco : _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n    });\n  }\n});\nfunction fieldSelection(ranges, field) {\n  return _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.create(ranges.filter(function (r) {\n    return r.field == field;\n  }).map(function (r) {\n    return _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.range(r.from, r.to);\n  }));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n  var snippet = Snippet.parse(template);\n  return function (editor, completion, from, to) {\n    var _snippet$instantiate = snippet.instantiate(editor.state, from),\n      text = _snippet$instantiate.text,\n      ranges = _snippet$instantiate.ranges;\n    var spec = {\n      changes: {\n        from: from,\n        to: to,\n        insert: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Text.of(text)\n      },\n      scrollIntoView: true,\n      annotations: completion ? pickedCompletion.of(completion) : undefined\n    };\n    if (ranges.length) spec.selection = fieldSelection(ranges, 0);\n    if (ranges.length > 1) {\n      var active = new ActiveSnippet(ranges, 0);\n      var effects = spec.effects = [setActive.of(active)];\n      if (editor.state.field(snippetState, false) === undefined) effects.push(_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n    }\n    editor.dispatch(editor.state.update(spec));\n  };\n}\nfunction moveField(dir) {\n  return function (_ref3) {\n    var state = _ref3.state,\n      dispatch = _ref3.dispatch;\n    var active = state.field(snippetState, false);\n    if (!active || dir < 0 && active.active == 0) return false;\n    var next = active.active + dir,\n      last = dir > 0 && !active.ranges.some(function (r) {\n        return r.field == next + dir;\n      });\n    dispatch(state.update({\n      selection: fieldSelection(active.ranges, next),\n      effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n    }));\n    return true;\n  };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nvar clearSnippet = function clearSnippet(_ref4) {\n  var state = _ref4.state,\n    dispatch = _ref4.dispatch;\n  var active = state.field(snippetState, false);\n  if (!active) return false;\n  dispatch(state.update({\n    effects: setActive.of(null)\n  }));\n  return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nvar nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nvar prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n  var active = state.field(snippetState, false);\n  return !!(active && active.ranges.some(function (r) {\n    return r.field == active.active + 1;\n  }));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n  var active = state.field(snippetState, false);\n  return !!(active && active.active > 0);\n}\nvar defaultSnippetKeymap = [{\n  key: \"Tab\",\n  run: nextSnippetField,\n  shift: prevSnippetField\n}, {\n  key: \"Escape\",\n  run: clearSnippet\n}];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nvar snippetKeymap = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Facet.define({\n  combine: function combine(maps) {\n    return maps.length ? maps[0] : defaultSnippetKeymap;\n  }\n});\nvar addSnippetKeymap = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Prec.highest( /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.keymap.compute([snippetKeymap], function (state) {\n  return state.facet(snippetKeymap);\n}));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n  return Object.assign(Object.assign({}, completion), {\n    apply: snippet(template)\n  });\n}\nvar snippetPointerHandler = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.domEventHandlers({\n  mousedown: function mousedown(event, view) {\n    var active = view.state.field(snippetState, false),\n      pos;\n    if (!active || (pos = view.posAtCoords({\n      x: event.clientX,\n      y: event.clientY\n    })) == null) return false;\n    var match = active.ranges.find(function (r) {\n      return r.from <= pos && r.to >= pos;\n    });\n    if (!match || match.field == active.active) return false;\n    view.dispatch({\n      selection: fieldSelection(active.ranges, match.field),\n      effects: setActive.of(active.ranges.some(function (r) {\n        return r.field > match.field;\n      }) ? new ActiveSnippet(active.ranges, match.field) : null)\n    });\n    return true;\n  }\n});\nfunction wordRE(wordChars) {\n  var escaped = wordChars.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\n  try {\n    return new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_\".concat(escaped, \"]+\"), \"ug\");\n  } catch (_a) {\n    return new RegExp(\"[w\".concat(escaped, \"]\"), \"g\");\n  }\n}\nfunction mapRE(re, f) {\n  return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nvar wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n  return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap());\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n  for (var lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n    var value = lines.value,\n      m = void 0;\n    wordRE.lastIndex = 0;\n    while (m = wordRE.exec(value)) {\n      if (!seen[m[0]] && pos + m.index != ignoreAt) {\n        result.push({\n          type: \"text\",\n          label: m[0]\n        });\n        seen[m[0]] = true;\n        if (result.length >= 2000 /* C.MaxList */) return;\n      }\n    }\n    pos += value.length + 1;\n  }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n  var big = doc.length >= 1000 /* C.MinCacheLen */;\n  var cached = big && cache.get(doc);\n  if (cached) return cached;\n  var result = [],\n    seen = Object.create(null);\n  if (doc.children) {\n    var pos = 0;\n    var _iterator28 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(doc.children),\n      _step28;\n    try {\n      for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n        var ch = _step28.value;\n        if (ch.length >= 1000 /* C.MinCacheLen */) {\n          var _iterator29 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)),\n            _step29;\n          try {\n            for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n              var c = _step29.value;\n              if (!seen[c.label]) {\n                seen[c.label] = true;\n                result.push(c);\n              }\n            }\n          } catch (err) {\n            _iterator29.e(err);\n          } finally {\n            _iterator29.f();\n          }\n        } else {\n          storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n        }\n        pos += ch.length + 1;\n      }\n    } catch (err) {\n      _iterator28.e(err);\n    } finally {\n      _iterator28.f();\n    }\n  } else {\n    storeWords(doc, wordRE, result, seen, ignoreAt);\n  }\n  if (big && result.length < 2000 /* C.MaxList */) cache.set(doc, result);\n  return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nvar completeAnyWord = function completeAnyWord(context) {\n  var wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n  var re = wordRE(wordChars);\n  var token = context.matchBefore(mapRE(re, function (s) {\n    return s + \"$\";\n  }));\n  if (!token && !context.explicit) return null;\n  var from = token ? token.from : context.pos;\n  var options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n  return {\n    from: from,\n    options: options,\n    validFor: mapRE(re, function (s) {\n      return \"^\" + s;\n    })\n  };\n};\nvar defaults = {\n  brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n  before: \")]}:;>\",\n  stringPrefixes: []\n};\nvar closeBracketEffect = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define({\n  map: function map(value, mapping) {\n    var mapped = mapping.mapPos(value, -1, _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.MapMode.TrackAfter);\n    return mapped == null ? undefined : mapped;\n  }\n});\nvar closedBracket = /*@__PURE__*/new ( /*#__PURE__*/function (_RangeValue) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_class3, _RangeValue);\n  var _super3 = (0,_babel_runtime_helpers_createSuper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class3);\n  function _class3() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, _class3);\n    return _super3.apply(this, arguments);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_class3);\n}(_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.RangeValue))();\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nvar bracketState = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateField.define({\n  create: function create() {\n    return _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.RangeSet.empty;\n  },\n  update: function update(value, tr) {\n    if (tr.selection) {\n      var lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;\n      var prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;\n      if (lineStart != tr.changes.mapPos(prevLineStart, -1)) value = _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.RangeSet.empty;\n    }\n    value = value.map(tr.changes);\n    var _iterator30 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(tr.effects),\n      _step30;\n    try {\n      for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n        var effect = _step30.value;\n        if (effect.is(closeBracketEffect)) value = value.update({\n          add: [closedBracket.range(effect.value, effect.value + 1)]\n        });\n      }\n    } catch (err) {\n      _iterator30.e(err);\n    } finally {\n      _iterator30.f();\n    }\n    return value;\n  }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n  return [inputHandler, bracketState];\n}\nvar definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n  for (var i = 0; i < definedClosing.length; i += 2) if (definedClosing.charCodeAt(i) == ch) return definedClosing.charAt(i + 1);\n  return (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.fromCodePoint)(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n  return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nvar android = (typeof navigator === \"undefined\" ? \"undefined\" : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(navigator)) == \"object\" && /*@__PURE__*/ /Android\\b/.test(navigator.userAgent);\nvar inputHandler = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.inputHandler.of(function (view, from, to, insert) {\n  if ((android ? view.composing : view.compositionStarted) || view.state.readOnly) return false;\n  var sel = view.state.selection.main;\n  if (insert.length > 2 || insert.length == 2 && (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(insert, 0)) == 1 || from != sel.from || to != sel.to) return false;\n  var tr = insertBracket(view.state, insert);\n  if (!tr) return false;\n  view.dispatch(tr);\n  return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nvar deleteBracketPair = function deleteBracketPair(_ref5) {\n  var state = _ref5.state,\n    dispatch = _ref5.dispatch;\n  if (state.readOnly) return false;\n  var conf = config(state, state.selection.main.head);\n  var tokens = conf.brackets || defaults.brackets;\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (range.empty) {\n        var before = prevChar(state.doc, range.head);\n        var _iterator31 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(tokens),\n          _step31;\n        try {\n          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n            var token = _step31.value;\n            if (token == before && nextChar(state.doc, range.head) == closing((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(token, 0))) return {\n              changes: {\n                from: range.head - token.length,\n                to: range.head + token.length\n              },\n              range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(range.head - token.length)\n            };\n          }\n        } catch (err) {\n          _iterator31.e(err);\n        } finally {\n          _iterator31.f();\n        }\n      }\n      return {\n        range: dont = range\n      };\n    });\n  if (!dont) dispatch(state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"delete.backward\"\n  }));\n  return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nvar closeBracketsKeymap = [{\n  key: \"Backspace\",\n  run: deleteBracketPair\n}];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n  var conf = config(state, state.selection.main.head);\n  var tokens = conf.brackets || defaults.brackets;\n  var _iterator32 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(tokens),\n    _step32;\n  try {\n    for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n      var tok = _step32.value;\n      var closed = closing((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(tok, 0));\n      if (bracket == tok) return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf) : handleOpen(state, tok, closed, conf.before || defaults.before);\n      if (bracket == closed && closedBracketAt(state, state.selection.main.from)) return handleClose(state, tok, closed);\n    }\n  } catch (err) {\n    _iterator32.e(err);\n  } finally {\n    _iterator32.f();\n  }\n  return null;\n}\nfunction closedBracketAt(state, pos) {\n  var found = false;\n  state.field(bracketState).between(0, state.doc.length, function (from) {\n    if (from == pos) found = true;\n  });\n  return found;\n}\nfunction nextChar(doc, pos) {\n  var next = doc.sliceString(pos, pos + 2);\n  return next.slice(0, (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(next, 0)));\n}\nfunction prevChar(doc, pos) {\n  var prev = doc.sliceString(pos - 2, pos);\n  return (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (!range.empty) return {\n        changes: [{\n          insert: open,\n          from: range.from\n        }, {\n          insert: close,\n          from: range.to\n        }],\n        effects: closeBracketEffect.of(range.to + open.length),\n        range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.range(range.anchor + open.length, range.head + open.length)\n      };\n      var next = nextChar(state.doc, range.head);\n      if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1) return {\n        changes: {\n          insert: open + close,\n          from: range.head\n        },\n        effects: closeBracketEffect.of(range.head + open.length),\n        range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(range.head + open.length)\n      };\n      return {\n        range: dont = range\n      };\n    });\n  return dont ? null : state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"input.type\"\n  });\n}\nfunction handleClose(state, _open, close) {\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (range.empty && nextChar(state.doc, range.head) == close) return {\n        changes: {\n          from: range.head,\n          to: range.head + close.length,\n          insert: close\n        },\n        range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(range.head + close.length)\n      };\n      return dont = {\n        range: range\n      };\n    });\n  return dont ? null : state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"input.type\"\n  });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n  var stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (!range.empty) return {\n        changes: [{\n          insert: token,\n          from: range.from\n        }, {\n          insert: token,\n          from: range.to\n        }],\n        effects: closeBracketEffect.of(range.to + token.length),\n        range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.range(range.anchor + token.length, range.head + token.length)\n      };\n      var pos = range.head,\n        next = nextChar(state.doc, pos),\n        start;\n      if (next == token) {\n        if (nodeStart(state, pos)) {\n          return {\n            changes: {\n              insert: token + token,\n              from: pos\n            },\n            effects: closeBracketEffect.of(pos + token.length),\n            range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(pos + token.length)\n          };\n        } else if (closedBracketAt(state, pos)) {\n          var isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n          var content = isTriple ? token + token + token : token;\n          return {\n            changes: {\n              from: pos,\n              to: pos + content.length,\n              insert: content\n            },\n            range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(pos + content.length)\n          };\n        }\n      } else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token && (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 && nodeStart(state, start)) {\n        return {\n          changes: {\n            insert: token + token + token + token,\n            from: pos\n          },\n          effects: closeBracketEffect.of(pos + token.length),\n          range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(pos + token.length)\n        };\n      } else if (state.charCategorizer(pos)(next) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word) {\n        if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes)) return {\n          changes: {\n            insert: token + token,\n            from: pos\n          },\n          effects: closeBracketEffect.of(pos + token.length),\n          range: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(pos + token.length)\n        };\n      }\n      return {\n        range: dont = range\n      };\n    });\n  return dont ? null : state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"input.type\"\n  });\n}\nfunction nodeStart(state, pos) {\n  var tree = (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_8__.syntaxTree)(state).resolveInner(pos + 1);\n  return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n  var node = (0,_codemirror_language__WEBPACK_IMPORTED_MODULE_8__.syntaxTree)(state).resolveInner(pos, -1);\n  var maxPrefix = prefixes.reduce(function (m, p) {\n    return Math.max(m, p.length);\n  }, 0);\n  for (var i = 0; i < 5; i++) {\n    var start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n    var quotePos = start.indexOf(quoteToken);\n    if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n      var first = node.firstChild;\n      while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n        if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken) return false;\n        first = first.firstChild;\n      }\n      return true;\n    }\n    var parent = node.to == pos && node.parent;\n    if (!parent) break;\n    node = parent;\n  }\n  return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n  var charCat = state.charCategorizer(pos);\n  if (charCat(state.sliceDoc(pos - 1, pos)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word) return pos;\n  var _iterator33 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(prefixes),\n    _step33;\n  try {\n    for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n      var prefix = _step33.value;\n      var start = pos - prefix.length;\n      if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word) return start;\n    }\n  } catch (err) {\n    _iterator33.e(err);\n  } finally {\n    _iterator33.f();\n  }\n  return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [completionState, completionConfig.of(config), completionPlugin, completionKeymapExt, baseTheme];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nvar completionKeymap = [{\n  key: \"Ctrl-Space\",\n  run: startCompletion\n}, {\n  key: \"Escape\",\n  run: closeCompletion\n}, {\n  key: \"ArrowDown\",\n  run: /*@__PURE__*/moveCompletionSelection(true)\n}, {\n  key: \"ArrowUp\",\n  run: /*@__PURE__*/moveCompletionSelection(false)\n}, {\n  key: \"PageDown\",\n  run: /*@__PURE__*/moveCompletionSelection(true, \"page\")\n}, {\n  key: \"PageUp\",\n  run: /*@__PURE__*/moveCompletionSelection(false, \"page\")\n}, {\n  key: \"Enter\",\n  run: acceptCompletion\n}];\nvar completionKeymapExt = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Prec.highest( /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.keymap.computeN([completionConfig], function (state) {\n  return state.facet(completionConfig).defaultKeymap ? [completionKeymap] : [];\n}));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n  var cState = state.field(completionState, false);\n  return cState && cState.active.some(function (a) {\n    return a.state == 1;\n  } /* State.Pending */) ? \"pending\" : cState && cState.active.some(function (a) {\n    return a.state != 0;\n  } /* State.Inactive */) ? \"active\" : null;\n}\nvar completionArrayCache = /*@__PURE__*/new WeakMap();\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n  var _a;\n  var open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n  if (!open || open.disabled) return [];\n  var completions = completionArrayCache.get(open.options);\n  if (!completions) completionArrayCache.set(open.options, completions = open.options.map(function (o) {\n    return o.completion;\n  }));\n  return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n  var _a;\n  var open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n  return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n  var _a;\n  var open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n  return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n  return setSelectedEffect.of(index);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@codemirror/autocomplete/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@codemirror/legacy-modes/mode/jinja2.js":
/*!**************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/jinja2.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jinja2: function() { return /* binding */ jinja2; }\n/* harmony export */ });\nvar keywords = [\"and\", \"as\", \"block\", \"endblock\", \"by\", \"cycle\", \"debug\", \"else\", \"elif\", \"extends\", \"filter\", \"endfilter\", \"firstof\", \"do\", \"for\", \"endfor\", \"if\", \"endif\", \"ifchanged\", \"endifchanged\", \"ifequal\", \"endifequal\", \"ifnotequal\", \"set\", \"raw\", \"endraw\", \"endifnotequal\", \"in\", \"include\", \"load\", \"not\", \"now\", \"or\", \"parsed\", \"regroup\", \"reversed\", \"spaceless\", \"call\", \"endcall\", \"macro\", \"endmacro\", \"endspaceless\", \"ssi\", \"templatetag\", \"openblock\", \"closeblock\", \"openvariable\", \"closevariable\", \"without\", \"context\", \"openbrace\", \"closebrace\", \"opencomment\", \"closecomment\", \"widthratio\", \"url\", \"with\", \"endwith\", \"get_current_language\", \"trans\", \"endtrans\", \"noop\", \"blocktrans\", \"endblocktrans\", \"get_available_languages\", \"get_current_language_bidi\", \"pluralize\", \"autoescape\", \"endautoescape\"],\n  operator = /^[+\\-*&%=<>!?|~^]/,\n  sign = /^[:\\[\\(\\{]/,\n  atom = [\"true\", \"false\"],\n  number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\nkeywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\natom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\nfunction tokenBase(stream, state) {\n  var ch = stream.peek();\n\n  //Comment\n  if (state.incomment) {\n    if (!stream.skipTo(\"#}\")) {\n      stream.skipToEnd();\n    } else {\n      stream.eatWhile(/\\#|}/);\n      state.incomment = false;\n    }\n    return \"comment\";\n    //Tag\n  } else if (state.intag) {\n    //After operator\n    if (state.operator) {\n      state.operator = false;\n      if (stream.match(atom)) {\n        return \"atom\";\n      }\n      if (stream.match(number)) {\n        return \"number\";\n      }\n    }\n    //After sign\n    if (state.sign) {\n      state.sign = false;\n      if (stream.match(atom)) {\n        return \"atom\";\n      }\n      if (stream.match(number)) {\n        return \"number\";\n      }\n    }\n    if (state.instring) {\n      if (ch == state.instring) {\n        state.instring = false;\n      }\n      stream.next();\n      return \"string\";\n    } else if (ch == \"'\" || ch == '\"') {\n      state.instring = ch;\n      stream.next();\n      return \"string\";\n    } else if (state.inbraces > 0 && ch == \")\") {\n      stream.next();\n      state.inbraces--;\n    } else if (ch == \"(\") {\n      stream.next();\n      state.inbraces++;\n    } else if (state.inbrackets > 0 && ch == \"]\") {\n      stream.next();\n      state.inbrackets--;\n    } else if (ch == \"[\") {\n      stream.next();\n      state.inbrackets++;\n    } else if (!state.lineTag && (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\"))) {\n      state.intag = false;\n      return \"tag\";\n    } else if (stream.match(operator)) {\n      state.operator = true;\n      return \"operator\";\n    } else if (stream.match(sign)) {\n      state.sign = true;\n    } else {\n      if (stream.column() == 1 && state.lineTag && stream.match(keywords)) {\n        //allow nospace after tag before the keyword\n        return \"keyword\";\n      }\n      if (stream.eat(\" \") || stream.sol()) {\n        if (stream.match(keywords)) {\n          return \"keyword\";\n        }\n        if (stream.match(atom)) {\n          return \"atom\";\n        }\n        if (stream.match(number)) {\n          return \"number\";\n        }\n        if (stream.sol()) {\n          stream.next();\n        }\n      } else {\n        stream.next();\n      }\n    }\n    return \"variable\";\n  } else if (stream.eat(\"{\")) {\n    if (stream.eat(\"#\")) {\n      state.incomment = true;\n      if (!stream.skipTo(\"#}\")) {\n        stream.skipToEnd();\n      } else {\n        stream.eatWhile(/\\#|}/);\n        state.incomment = false;\n      }\n      return \"comment\";\n      //Open tag\n    } else if (ch = stream.eat(/\\{|%/)) {\n      //Cache close tag\n      state.intag = ch;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      if (ch == \"{\") {\n        state.intag = \"}\";\n      }\n      stream.eat(\"-\");\n      return \"tag\";\n    }\n    //Line statements\n  } else if (stream.eat('#')) {\n    if (stream.peek() == '#') {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (!stream.eol()) {\n      state.intag = true;\n      state.lineTag = true;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      return \"tag\";\n    }\n  }\n  stream.next();\n}\n;\nvar jinja2 = {\n  name: \"jinja2\",\n  startState: function startState() {\n    return {\n      tokenize: tokenBase,\n      inbrackets: 0,\n      inbraces: 0\n    };\n  },\n  token: function token(stream, state) {\n    var style = state.tokenize(stream, state);\n    if (stream.eol() && state.lineTag && !state.instring && state.inbraces == 0 && state.inbrackets == 0) {\n      //Close line statement at the EOL\n      state.intag = false;\n      state.lineTag = false;\n    }\n    return style;\n  },\n  languageData: {\n    commentTokens: {\n      block: {\n        open: \"{#\",\n        close: \"#}\",\n        line: \"##\"\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@codemirror/legacy-modes/mode/jinja2.js\n");

/***/ }),

/***/ "./node_modules/@codemirror/legacy-modes/mode/yaml.js":
/*!************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/yaml.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   yaml: function() { return /* binding */ yaml; }\n/* harmony export */ });\nvar cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\nvar keywordRegex = new RegExp(\"\\\\b((\" + cons.join(\")|(\") + \"))$\", 'i');\nvar yaml = {\n  name: \"yaml\",\n  token: function token(stream, state) {\n    var ch = stream.peek();\n    var esc = state.escaped;\n    state.escaped = false;\n    /* comments */\n    if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/)) return \"string\";\n    if (state.literal && stream.indentation() > state.keyCol) {\n      stream.skipToEnd();\n      return \"string\";\n    } else if (state.literal) {\n      state.literal = false;\n    }\n    if (stream.sol()) {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      /* document start */\n      if (stream.match('---')) {\n        return \"def\";\n      }\n      /* document end */\n      if (stream.match('...')) {\n        return \"def\";\n      }\n      /* array list item */\n      if (stream.match(/^\\s*-\\s+/)) {\n        return 'meta';\n      }\n    }\n    /* inline pairs/lists */\n    if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n      if (ch == '{') state.inlinePairs++;else if (ch == '}') state.inlinePairs--;else if (ch == '[') state.inlineList++;else state.inlineList--;\n      return 'meta';\n    }\n\n    /* list separator */\n    if (state.inlineList > 0 && !esc && ch == ',') {\n      stream.next();\n      return 'meta';\n    }\n    /* pairs separator */\n    if (state.inlinePairs > 0 && !esc && ch == ',') {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      stream.next();\n      return 'meta';\n    }\n\n    /* start of value of a pair */\n    if (state.pairStart) {\n      /* block literals */\n      if (stream.match(/^\\s*(\\||\\>)\\s*/)) {\n        state.literal = true;\n        return 'meta';\n      }\n      ;\n      /* references */\n      if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) {\n        return 'variable';\n      }\n      /* numbers */\n      if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) {\n        return 'number';\n      }\n      if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) {\n        return 'number';\n      }\n      /* keywords */\n      if (stream.match(keywordRegex)) {\n        return 'keyword';\n      }\n    }\n\n    /* pairs (associative arrays) -> key */\n    if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n      state.pair = true;\n      state.keyCol = stream.indentation();\n      return \"atom\";\n    }\n    if (state.pair && stream.match(/^:\\s*/)) {\n      state.pairStart = true;\n      return 'meta';\n    }\n\n    /* nothing found, continue */\n    state.pairStart = false;\n    state.escaped = ch == '\\\\';\n    stream.next();\n    return null;\n  },\n  startState: function startState() {\n    return {\n      pair: false,\n      pairStart: false,\n      keyCol: 0,\n      inlinePairs: 0,\n      inlineList: 0,\n      literal: false,\n      escaped: false\n    };\n  },\n  languageData: {\n    commentTokens: {\n      line: \"#\"\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUveWFtbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUveWFtbC5qcz9hMDNmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjb25zID0gWyd0cnVlJywgJ2ZhbHNlJywgJ29uJywgJ29mZicsICd5ZXMnLCAnbm8nXTtcbnZhciBrZXl3b3JkUmVnZXggPSBuZXcgUmVnRXhwKFwiXFxcXGIoKFwiK2NvbnMuam9pbihcIil8KFwiKStcIikpJFwiLCAnaScpO1xuXG5leHBvcnQgY29uc3QgeWFtbCA9IHtcbiAgbmFtZTogXCJ5YW1sXCIsXG4gIHRva2VuOiBmdW5jdGlvbihzdHJlYW0sIHN0YXRlKSB7XG4gICAgdmFyIGNoID0gc3RyZWFtLnBlZWsoKTtcbiAgICB2YXIgZXNjID0gc3RhdGUuZXNjYXBlZDtcbiAgICBzdGF0ZS5lc2NhcGVkID0gZmFsc2U7XG4gICAgLyogY29tbWVudHMgKi9cbiAgICBpZiAoY2ggPT0gXCIjXCIgJiYgKHN0cmVhbS5wb3MgPT0gMCB8fCAvXFxzLy50ZXN0KHN0cmVhbS5zdHJpbmcuY2hhckF0KHN0cmVhbS5wb3MgLSAxKSkpKSB7XG4gICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgICByZXR1cm4gXCJjb21tZW50XCI7XG4gICAgfVxuXG4gICAgaWYgKHN0cmVhbS5tYXRjaCgvXignKFteJ118XFxcXC4pKic/fFwiKFteXCJdfFxcXFwuKSpcIj8pLykpXG4gICAgICByZXR1cm4gXCJzdHJpbmdcIjtcblxuICAgIGlmIChzdGF0ZS5saXRlcmFsICYmIHN0cmVhbS5pbmRlbnRhdGlvbigpID4gc3RhdGUua2V5Q29sKSB7XG4gICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7IHJldHVybiBcInN0cmluZ1wiO1xuICAgIH0gZWxzZSBpZiAoc3RhdGUubGl0ZXJhbCkgeyBzdGF0ZS5saXRlcmFsID0gZmFsc2U7IH1cbiAgICBpZiAoc3RyZWFtLnNvbCgpKSB7XG4gICAgICBzdGF0ZS5rZXlDb2wgPSAwO1xuICAgICAgc3RhdGUucGFpciA9IGZhbHNlO1xuICAgICAgc3RhdGUucGFpclN0YXJ0ID0gZmFsc2U7XG4gICAgICAvKiBkb2N1bWVudCBzdGFydCAqL1xuICAgICAgaWYoc3RyZWFtLm1hdGNoKCctLS0nKSkgeyByZXR1cm4gXCJkZWZcIjsgfVxuICAgICAgLyogZG9jdW1lbnQgZW5kICovXG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKCcuLi4nKSkgeyByZXR1cm4gXCJkZWZcIjsgfVxuICAgICAgLyogYXJyYXkgbGlzdCBpdGVtICovXG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKC9eXFxzKi1cXHMrLykpIHsgcmV0dXJuICdtZXRhJzsgfVxuICAgIH1cbiAgICAvKiBpbmxpbmUgcGFpcnMvbGlzdHMgKi9cbiAgICBpZiAoc3RyZWFtLm1hdGNoKC9eKFxce3xcXH18XFxbfFxcXSkvKSkge1xuICAgICAgaWYgKGNoID09ICd7JylcbiAgICAgICAgc3RhdGUuaW5saW5lUGFpcnMrKztcbiAgICAgIGVsc2UgaWYgKGNoID09ICd9JylcbiAgICAgICAgc3RhdGUuaW5saW5lUGFpcnMtLTtcbiAgICAgIGVsc2UgaWYgKGNoID09ICdbJylcbiAgICAgICAgc3RhdGUuaW5saW5lTGlzdCsrO1xuICAgICAgZWxzZVxuICAgICAgICBzdGF0ZS5pbmxpbmVMaXN0LS07XG4gICAgICByZXR1cm4gJ21ldGEnO1xuICAgIH1cblxuICAgIC8qIGxpc3Qgc2VwYXJhdG9yICovXG4gICAgaWYgKHN0YXRlLmlubGluZUxpc3QgPiAwICYmICFlc2MgJiYgY2ggPT0gJywnKSB7XG4gICAgICBzdHJlYW0ubmV4dCgpO1xuICAgICAgcmV0dXJuICdtZXRhJztcbiAgICB9XG4gICAgLyogcGFpcnMgc2VwYXJhdG9yICovXG4gICAgaWYgKHN0YXRlLmlubGluZVBhaXJzID4gMCAmJiAhZXNjICYmIGNoID09ICcsJykge1xuICAgICAgc3RhdGUua2V5Q29sID0gMDtcbiAgICAgIHN0YXRlLnBhaXIgPSBmYWxzZTtcbiAgICAgIHN0YXRlLnBhaXJTdGFydCA9IGZhbHNlO1xuICAgICAgc3RyZWFtLm5leHQoKTtcbiAgICAgIHJldHVybiAnbWV0YSc7XG4gICAgfVxuXG4gICAgLyogc3RhcnQgb2YgdmFsdWUgb2YgYSBwYWlyICovXG4gICAgaWYgKHN0YXRlLnBhaXJTdGFydCkge1xuICAgICAgLyogYmxvY2sgbGl0ZXJhbHMgKi9cbiAgICAgIGlmIChzdHJlYW0ubWF0Y2goL15cXHMqKFxcfHxcXD4pXFxzKi8pKSB7IHN0YXRlLmxpdGVyYWwgPSB0cnVlOyByZXR1cm4gJ21ldGEnOyB9O1xuICAgICAgLyogcmVmZXJlbmNlcyAqL1xuICAgICAgaWYgKHN0cmVhbS5tYXRjaCgvXlxccyooXFwmfFxcKilbYS16MC05XFwuXy1dK1xcYi9pKSkgeyByZXR1cm4gJ3ZhcmlhYmxlJzsgfVxuICAgICAgLyogbnVtYmVycyAqL1xuICAgICAgaWYgKHN0YXRlLmlubGluZVBhaXJzID09IDAgJiYgc3RyZWFtLm1hdGNoKC9eXFxzKi0/WzAtOVxcLlxcLF0rXFxzPyQvKSkgeyByZXR1cm4gJ251bWJlcic7IH1cbiAgICAgIGlmIChzdGF0ZS5pbmxpbmVQYWlycyA+IDAgJiYgc3RyZWFtLm1hdGNoKC9eXFxzKi0/WzAtOVxcLlxcLF0rXFxzPyg/PSgsfH0pKS8pKSB7IHJldHVybiAnbnVtYmVyJzsgfVxuICAgICAgLyoga2V5d29yZHMgKi9cbiAgICAgIGlmIChzdHJlYW0ubWF0Y2goa2V5d29yZFJlZ2V4KSkgeyByZXR1cm4gJ2tleXdvcmQnOyB9XG4gICAgfVxuXG4gICAgLyogcGFpcnMgKGFzc29jaWF0aXZlIGFycmF5cykgLT4ga2V5ICovXG4gICAgaWYgKCFzdGF0ZS5wYWlyICYmIHN0cmVhbS5tYXRjaCgvXlxccyooPzpbLFxcW1xcXXt9JiohfD4nXCIlQGBdW15cXHMnXCI6XXxbXixcXFtcXF17fSMmKiF8PidcIiVAYF0pW14jXSo/KD89XFxzKjooJHxcXHMpKS8pKSB7XG4gICAgICBzdGF0ZS5wYWlyID0gdHJ1ZTtcbiAgICAgIHN0YXRlLmtleUNvbCA9IHN0cmVhbS5pbmRlbnRhdGlvbigpO1xuICAgICAgcmV0dXJuIFwiYXRvbVwiO1xuICAgIH1cbiAgICBpZiAoc3RhdGUucGFpciAmJiBzdHJlYW0ubWF0Y2goL146XFxzKi8pKSB7IHN0YXRlLnBhaXJTdGFydCA9IHRydWU7IHJldHVybiAnbWV0YSc7IH1cblxuICAgIC8qIG5vdGhpbmcgZm91bmQsIGNvbnRpbnVlICovXG4gICAgc3RhdGUucGFpclN0YXJ0ID0gZmFsc2U7XG4gICAgc3RhdGUuZXNjYXBlZCA9IChjaCA9PSAnXFxcXCcpO1xuICAgIHN0cmVhbS5uZXh0KCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0sXG4gIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBwYWlyOiBmYWxzZSxcbiAgICAgIHBhaXJTdGFydDogZmFsc2UsXG4gICAgICBrZXlDb2w6IDAsXG4gICAgICBpbmxpbmVQYWlyczogMCxcbiAgICAgIGlubGluZUxpc3Q6IDAsXG4gICAgICBsaXRlcmFsOiBmYWxzZSxcbiAgICAgIGVzY2FwZWQ6IGZhbHNlXG4gICAgfTtcbiAgfSxcbiAgbGFuZ3VhZ2VEYXRhOiB7XG4gICAgY29tbWVudFRva2Vuczoge2xpbmU6IFwiI1wifVxuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@codemirror/legacy-modes/mode/yaml.js\n");

/***/ }),

/***/ "./node_modules/@codemirror/search/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@codemirror/search/dist/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegExpCursor: function() { return /* binding */ RegExpCursor; },\n/* harmony export */   SearchCursor: function() { return /* binding */ SearchCursor; },\n/* harmony export */   SearchQuery: function() { return /* binding */ SearchQuery; },\n/* harmony export */   closeSearchPanel: function() { return /* binding */ closeSearchPanel; },\n/* harmony export */   findNext: function() { return /* binding */ findNext; },\n/* harmony export */   findPrevious: function() { return /* binding */ findPrevious; },\n/* harmony export */   getSearchQuery: function() { return /* binding */ getSearchQuery; },\n/* harmony export */   gotoLine: function() { return /* binding */ gotoLine; },\n/* harmony export */   highlightSelectionMatches: function() { return /* binding */ highlightSelectionMatches; },\n/* harmony export */   openSearchPanel: function() { return /* binding */ openSearchPanel; },\n/* harmony export */   replaceAll: function() { return /* binding */ replaceAll; },\n/* harmony export */   replaceNext: function() { return /* binding */ replaceNext; },\n/* harmony export */   search: function() { return /* binding */ search; },\n/* harmony export */   searchKeymap: function() { return /* binding */ searchKeymap; },\n/* harmony export */   searchPanelOpen: function() { return /* binding */ searchPanelOpen; },\n/* harmony export */   selectMatches: function() { return /* binding */ selectMatches; },\n/* harmony export */   selectNextOccurrence: function() { return /* binding */ selectNextOccurrence; },\n/* harmony export */   selectSelectionMatches: function() { return /* binding */ selectSelectionMatches; },\n/* harmony export */   setSearchQuery: function() { return /* binding */ setSearchQuery; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createSuper */ \"./node_modules/@babel/runtime/helpers/esm/createSuper.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createForOfIteratorHelper */ \"./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _codemirror_view__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @codemirror/view */ \"./node_modules/@codemirror/view/dist/index.js\");\n/* harmony import */ var _codemirror_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @codemirror/state */ \"./node_modules/@codemirror/state/dist/index.js\");\n/* harmony import */ var crelt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! crelt */ \"./node_modules/crelt/index.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar basicNormalize = typeof String.prototype.normalize == \"function\" ? function (x) {\n  return x.normalize(\"NFKD\");\n} : function (x) {\n  return x;\n};\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nvar SearchCursor = /*#__PURE__*/function () {\n  /**\n  Create a text cursor. The query is the search string, `from` to\n  `to` provides the region to search.\n  \n  When `normalize` is given, it will be called, on both the query\n  string and the content it is matched against, before comparing.\n  You can, for example, create a case-insensitive search by\n  passing `s => s.toLowerCase()`.\n  \n  Text is always normalized with\n  [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n  (when supported).\n  */\n  function SearchCursor(text, query) {\n    var from = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var to = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : text.length;\n    var normalize = arguments.length > 4 ? arguments[4] : undefined;\n    var test = arguments.length > 5 ? arguments[5] : undefined;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, SearchCursor);\n    this.test = test;\n    /**\n    The current match (only holds a meaningful value after\n    [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n    `done` is false).\n    */\n    this.value = {\n      from: 0,\n      to: 0\n    };\n    /**\n    Whether the end of the iterated region has been reached.\n    */\n    this.done = false;\n    this.matches = [];\n    this.buffer = \"\";\n    this.bufferPos = 0;\n    this.iter = text.iterRange(from, to);\n    this.bufferStart = from;\n    this.normalize = normalize ? function (x) {\n      return normalize(basicNormalize(x));\n    } : basicNormalize;\n    this.query = this.normalize(query);\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(SearchCursor, [{\n    key: \"peek\",\n    value: function peek() {\n      if (this.bufferPos == this.buffer.length) {\n        this.bufferStart += this.buffer.length;\n        this.iter.next();\n        if (this.iter.done) return -1;\n        this.bufferPos = 0;\n        this.buffer = this.iter.value;\n      }\n      return (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointAt)(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n  }, {\n    key: \"next\",\n    value: function next() {\n      while (this.matches.length) this.matches.pop();\n      return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n  }, {\n    key: \"nextOverlapping\",\n    value: function nextOverlapping() {\n      for (;;) {\n        var next = this.peek();\n        if (next < 0) {\n          this.done = true;\n          return this;\n        }\n        var str = (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.fromCodePoint)(next),\n          start = this.bufferStart + this.bufferPos;\n        this.bufferPos += (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.codePointSize)(next);\n        var norm = this.normalize(str);\n        for (var i = 0, pos = start;; i++) {\n          var code = norm.charCodeAt(i);\n          var match = this.match(code, pos);\n          if (match) {\n            this.value = match;\n            return this;\n          }\n          if (i == norm.length - 1) break;\n          if (pos == start && i < str.length && str.charCodeAt(i) == code) pos++;\n        }\n      }\n    }\n  }, {\n    key: \"match\",\n    value: function match(code, pos) {\n      var match = null;\n      for (var i = 0; i < this.matches.length; i += 2) {\n        var index = this.matches[i],\n          keep = false;\n        if (this.query.charCodeAt(index) == code) {\n          if (index == this.query.length - 1) {\n            match = {\n              from: this.matches[i + 1],\n              to: pos + 1\n            };\n          } else {\n            this.matches[i]++;\n            keep = true;\n          }\n        }\n        if (!keep) {\n          this.matches.splice(i, 2);\n          i -= 2;\n        }\n      }\n      if (this.query.charCodeAt(0) == code) {\n        if (this.query.length == 1) match = {\n          from: pos,\n          to: pos + 1\n        };else this.matches.push(1, pos);\n      }\n      if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferPos)) match = null;\n      return match;\n    }\n  }]);\n  return SearchCursor;\n}();\nif (typeof Symbol != \"undefined\") SearchCursor.prototype[Symbol.iterator] = function () {\n  return this;\n};\nvar empty = {\n  from: -1,\n  to: -1,\n  match: /*@__PURE__*/ /.*/.exec(\"\")\n};\nvar baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nvar RegExpCursor = /*#__PURE__*/function () {\n  /**\n  Create a cursor that will search the given range in the given\n  document. `query` should be the raw pattern (as you'd pass it to\n  `new RegExp`).\n  */\n  function RegExpCursor(text, query, options) {\n    var from = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var to = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : text.length;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, RegExpCursor);\n    this.text = text;\n    this.to = to;\n    this.curLine = \"\";\n    /**\n    Set to `true` when the cursor has reached the end of the search\n    range.\n    */\n    this.done = false;\n    /**\n    Will contain an object with the extent of the match and the\n    match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n    sucessfully finds a match.\n    */\n    this.value = empty;\n    if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query)) return new MultilineRegExpCursor(text, query, options, from, to);\n    this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n    this.test = options === null || options === void 0 ? void 0 : options.test;\n    this.iter = text.iter();\n    var startLine = text.lineAt(from);\n    this.curLineStart = startLine.from;\n    this.matchPos = toCharEnd(text, from);\n    this.getLine(this.curLineStart);\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(RegExpCursor, [{\n    key: \"getLine\",\n    value: function getLine(skip) {\n      this.iter.next(skip);\n      if (this.iter.lineBreak) {\n        this.curLine = \"\";\n      } else {\n        this.curLine = this.iter.value;\n        if (this.curLineStart + this.curLine.length > this.to) this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n        this.iter.next();\n      }\n    }\n  }, {\n    key: \"nextLine\",\n    value: function nextLine() {\n      this.curLineStart = this.curLineStart + this.curLine.length + 1;\n      if (this.curLineStart > this.to) this.curLine = \"\";else this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n  }, {\n    key: \"next\",\n    value: function next() {\n      for (var off = this.matchPos - this.curLineStart;;) {\n        this.re.lastIndex = off;\n        var match = this.matchPos <= this.to && this.re.exec(this.curLine);\n        if (match) {\n          var from = this.curLineStart + match.index,\n            to = from + match[0].length;\n          this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n          if (from == this.curLineStart + this.curLine.length) this.nextLine();\n          if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {\n            this.value = {\n              from: from,\n              to: to,\n              match: match\n            };\n            return this;\n          }\n          off = this.matchPos - this.curLineStart;\n        } else if (this.curLineStart + this.curLine.length < this.to) {\n          this.nextLine();\n          off = 0;\n        } else {\n          this.done = true;\n          return this;\n        }\n      }\n    }\n  }]);\n  return RegExpCursor;\n}();\nvar flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nvar FlattenedDoc = /*#__PURE__*/function () {\n  function FlattenedDoc(from, text) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, FlattenedDoc);\n    this.from = from;\n    this.text = text;\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(FlattenedDoc, [{\n    key: \"to\",\n    get: function get() {\n      return this.from + this.text.length;\n    }\n  }], [{\n    key: \"get\",\n    value: function get(doc, from, to) {\n      var cached = flattened.get(doc);\n      if (!cached || cached.from >= to || cached.to <= from) {\n        var flat = new FlattenedDoc(from, doc.sliceString(from, to));\n        flattened.set(doc, flat);\n        return flat;\n      }\n      if (cached.from == from && cached.to == to) return cached;\n      var text = cached.text,\n        cachedFrom = cached.from;\n      if (cachedFrom > from) {\n        text = doc.sliceString(from, cachedFrom) + text;\n        cachedFrom = from;\n      }\n      if (cached.to < to) text += doc.sliceString(cached.to, to);\n      flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n      return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n  }]);\n  return FlattenedDoc;\n}();\nvar MultilineRegExpCursor = /*#__PURE__*/function () {\n  function MultilineRegExpCursor(text, query, options, from, to) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, MultilineRegExpCursor);\n    this.text = text;\n    this.to = to;\n    this.done = false;\n    this.value = empty;\n    this.matchPos = toCharEnd(text, from);\n    this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n    this.test = options === null || options === void 0 ? void 0 : options.test;\n    this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Chunk.Base */));\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(MultilineRegExpCursor, [{\n    key: \"chunkEnd\",\n    value: function chunkEnd(pos) {\n      return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      for (;;) {\n        var off = this.re.lastIndex = this.matchPos - this.flat.from;\n        var match = this.re.exec(this.flat.text);\n        // Skip empty matches directly after the last match\n        if (match && !match[0] && match.index == off) {\n          this.re.lastIndex = off + 1;\n          match = this.re.exec(this.flat.text);\n        }\n        if (match) {\n          var from = this.flat.from + match.index,\n            to = from + match[0].length;\n          // If a match goes almost to the end of a noncomplete chunk, try\n          // again, since it'll likely be able to match more\n          if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) && (!this.test || this.test(from, to, match))) {\n            this.value = {\n              from: from,\n              to: to,\n              match: match\n            };\n            this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n            return this;\n          }\n        }\n        if (this.flat.to == this.to) {\n          this.done = true;\n          return this;\n        }\n        // Grow the flattened doc\n        this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n      }\n    }\n  }]);\n  return MultilineRegExpCursor;\n}();\nif (typeof Symbol != \"undefined\") {\n  RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n}\nfunction validRegExp(source) {\n  try {\n    new RegExp(source, baseFlags);\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}\nfunction toCharEnd(text, pos) {\n  if (pos >= text.length) return pos;\n  var line = text.lineAt(pos),\n    next;\n  while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000) pos++;\n  return pos;\n}\nfunction createLineDialog(view) {\n  var input = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"input\", {\n    class: \"cm-textfield\",\n    name: \"line\"\n  });\n  var dom = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"form\", {\n    class: \"cm-gotoLine\",\n    onkeydown: function onkeydown(event) {\n      if (event.keyCode == 27) {\n        // Escape\n        event.preventDefault();\n        view.dispatch({\n          effects: dialogEffect.of(false)\n        });\n        view.focus();\n      } else if (event.keyCode == 13) {\n        // Enter\n        event.preventDefault();\n        go();\n      }\n    },\n    onsubmit: function onsubmit(event) {\n      event.preventDefault();\n      go();\n    }\n  }, (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"button\", {\n    class: \"cm-button\",\n    type: \"submit\"\n  }, view.state.phrase(\"go\")));\n  function go() {\n    var match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n    if (!match) return;\n    var state = view.state,\n      startLine = state.doc.lineAt(state.selection.main.head);\n    var _match = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(match, 5),\n      sign = _match[1],\n      ln = _match[2],\n      cl = _match[3],\n      percent = _match[4];\n    var col = cl ? +cl.slice(1) : 0;\n    var line = ln ? +ln : startLine.number;\n    if (ln && percent) {\n      var pc = line / 100;\n      if (sign) pc = pc * (sign == \"-\" ? -1 : 1) + startLine.number / state.doc.lines;\n      line = Math.round(state.doc.lines * pc);\n    } else if (ln && sign) {\n      line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n    }\n    var docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n    view.dispatch({\n      effects: dialogEffect.of(false),\n      selection: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),\n      scrollIntoView: true\n    });\n    view.focus();\n  }\n  return {\n    dom: dom\n  };\n}\nvar dialogEffect = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define();\nvar dialogField = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateField.define({\n  create: function create() {\n    return true;\n  },\n  update: function update(value, tr) {\n    var _iterator = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(tr.effects),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var e = _step.value;\n        if (e.is(dialogEffect)) value = e.value;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return value;\n  },\n  provide: function provide(f) {\n    return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.showPanel.from(f, function (val) {\n      return val ? createLineDialog : null;\n    });\n  }\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n*/\nvar gotoLine = function gotoLine(view) {\n  var panel = (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.getPanel)(view, createLineDialog);\n  if (!panel) {\n    var effects = [dialogEffect.of(true)];\n    if (view.state.field(dialogField, false) == null) effects.push(_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n    view.dispatch({\n      effects: effects\n    });\n    panel = (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.getPanel)(view, createLineDialog);\n  }\n  if (panel) panel.dom.querySelector(\"input\").focus();\n  return true;\n};\nvar baseTheme$1 = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.baseTheme({\n  \".cm-panel.cm-gotoLine\": {\n    padding: \"2px 6px 4px\",\n    \"& label\": {\n      fontSize: \"80%\"\n    }\n  }\n});\nvar defaultHighlightOptions = {\n  highlightWordAroundCursor: false,\n  minSelectionLength: 1,\n  maxMatches: 100,\n  wholeWords: false\n};\nvar highlightConfig = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Facet.define({\n  combine: function combine(options) {\n    return (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.combineConfig)(options, defaultHighlightOptions, {\n      highlightWordAroundCursor: function highlightWordAroundCursor(a, b) {\n        return a || b;\n      },\n      minSelectionLength: Math.min,\n      maxMatches: Math.min\n    });\n  }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n  var ext = [defaultTheme, matchHighlighter];\n  if (options) ext.push(highlightConfig.of(options));\n  return ext;\n}\nvar matchDeco = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.mark({\n  class: \"cm-selectionMatch\"\n});\nvar mainMatchDeco = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.mark({\n  class: \"cm-selectionMatch cm-selectionMatch-main\"\n});\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n  return (from == 0 || check(state.sliceDoc(from - 1, from)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word) && (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n  return check(state.sliceDoc(from, from + 1)) == _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word && check(state.sliceDoc(to - 1, to)) == _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word;\n}\nvar matchHighlighter = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.ViewPlugin.fromClass( /*#__PURE__*/function () {\n  function _class(view) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, _class);\n    this.decorations = this.getDeco(view);\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_class, [{\n    key: \"update\",\n    value: function update(_update) {\n      if (_update.selectionSet || _update.docChanged || _update.viewportChanged) this.decorations = this.getDeco(_update.view);\n    }\n  }, {\n    key: \"getDeco\",\n    value: function getDeco(view) {\n      var conf = view.state.facet(highlightConfig);\n      var state = view.state,\n        sel = state.selection;\n      if (sel.ranges.length > 1) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n      var range = sel.main,\n        query,\n        check = null;\n      if (range.empty) {\n        if (!conf.highlightWordAroundCursor) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n        var word = state.wordAt(range.head);\n        if (!word) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n        check = state.charCategorizer(range.head);\n        query = state.sliceDoc(word.from, word.to);\n      } else {\n        var len = range.to - range.from;\n        if (len < conf.minSelectionLength || len > 200) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n        if (conf.wholeWords) {\n          query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n          check = state.charCategorizer(range.head);\n          if (!(insideWordBoundaries(check, state, range.from, range.to) && insideWord(check, state, range.from, range.to))) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n        } else {\n          query = state.sliceDoc(range.from, range.to).trim();\n          if (!query) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n        }\n      }\n      var deco = [];\n      var _iterator2 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(view.visibleRanges),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var part = _step2.value;\n          var cursor = new SearchCursor(state.doc, query, part.from, part.to);\n          while (!cursor.next().done) {\n            var _cursor$value = cursor.value,\n              from = _cursor$value.from,\n              to = _cursor$value.to;\n            if (!check || insideWordBoundaries(check, state, from, to)) {\n              if (range.empty && from <= range.from && to >= range.to) deco.push(mainMatchDeco.range(from, to));else if (from >= range.to || to <= range.from) deco.push(matchDeco.range(from, to));\n              if (deco.length > conf.maxMatches) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.set(deco);\n    }\n  }]);\n  return _class;\n}(), {\n  decorations: function decorations(v) {\n    return v.decorations;\n  }\n});\nvar defaultTheme = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.baseTheme({\n  \".cm-selectionMatch\": {\n    backgroundColor: \"#99ff7780\"\n  },\n  \".cm-searchMatch .cm-selectionMatch\": {\n    backgroundColor: \"transparent\"\n  }\n});\n// Select the words around the cursors.\nvar selectWord = function selectWord(_ref) {\n  var state = _ref.state,\n    dispatch = _ref.dispatch;\n  var selection = state.selection;\n  var newSel = _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.create(selection.ranges.map(function (range) {\n    return state.wordAt(range.head) || _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.cursor(range.head);\n  }), selection.mainIndex);\n  if (newSel.eq(selection)) return false;\n  dispatch(state.update({\n    selection: newSel\n  }));\n  return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n  var _state$selection = state.selection,\n    main = _state$selection.main,\n    ranges = _state$selection.ranges;\n  var word = state.wordAt(main.head),\n    fullWord = word && word.from == main.from && word.to == main.to;\n  var _loop = function _loop(_cycled, _cursor) {\n    _cursor.next();\n    if (_cursor.done) {\n      if (_cycled) return {\n        v: null\n      };\n      _cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n      _cycled = true;\n    } else {\n      if (_cycled && ranges.some(function (r) {\n        return r.from == _cursor.value.from;\n      })) {\n        cycled = _cycled, cursor = _cursor;\n        return \"continue\";\n      }\n      if (fullWord) {\n        var _word = state.wordAt(_cursor.value.from);\n        if (!_word || _word.from != _cursor.value.from || _word.to != _cursor.value.to) {\n          cycled = _cycled, cursor = _cursor;\n          return \"continue\";\n        }\n      }\n      return {\n        v: _cursor.value\n      };\n    }\n    cycled = _cycled, cursor = _cursor;\n  };\n  for (var cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n    var _ret = _loop(cycled, cursor);\n    if (_ret === \"continue\") continue;\n    if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ret) === \"object\") return _ret.v;\n  }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nvar selectNextOccurrence = function selectNextOccurrence(_ref2) {\n  var state = _ref2.state,\n    dispatch = _ref2.dispatch;\n  var ranges = state.selection.ranges;\n  if (ranges.some(function (sel) {\n    return sel.from === sel.to;\n  })) return selectWord({\n    state: state,\n    dispatch: dispatch\n  });\n  var searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n  if (state.selection.ranges.some(function (r) {\n    return state.sliceDoc(r.from, r.to) != searchedText;\n  })) return false;\n  var range = findNextOccurrence(state, searchedText);\n  if (!range) return false;\n  dispatch(state.update({\n    selection: state.selection.addRange(_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.range(range.from, range.to), false),\n    effects: _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.scrollIntoView(range.to)\n  }));\n  return true;\n};\nvar searchConfigFacet = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Facet.define({\n  combine: function combine(configs) {\n    return (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.combineConfig)(configs, {\n      top: false,\n      caseSensitive: false,\n      literal: false,\n      wholeWord: false,\n      createPanel: function createPanel(view) {\n        return new SearchPanel(view);\n      },\n      scrollToMatch: function scrollToMatch(range) {\n        return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.scrollIntoView(range);\n      }\n    });\n  }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n  return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nvar SearchQuery = /*#__PURE__*/function () {\n  /**\n  Create a query object.\n  */\n  function SearchQuery(config) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, SearchQuery);\n    this.search = config.search;\n    this.caseSensitive = !!config.caseSensitive;\n    this.literal = !!config.literal;\n    this.regexp = !!config.regexp;\n    this.replace = config.replace || \"\";\n    this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n    this.unquoted = this.unquote(this.search);\n    this.wholeWord = !!config.wholeWord;\n  }\n  /**\n  @internal\n  */\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(SearchQuery, [{\n    key: \"unquote\",\n    value: function unquote(text) {\n      return this.literal ? text : text.replace(/\\\\([nrt\\\\])/g, function (_, ch) {\n        return ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\";\n      });\n    }\n    /**\n    Compare this query to another query.\n    */\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return this.search == other.search && this.replace == other.replace && this.caseSensitive == other.caseSensitive && this.regexp == other.regexp && this.wholeWord == other.wholeWord;\n    }\n    /**\n    @internal\n    */\n  }, {\n    key: \"create\",\n    value: function create() {\n      return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given state.\n    */\n  }, {\n    key: \"getCursor\",\n    value: function getCursor(state) {\n      var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var to = arguments.length > 2 ? arguments[2] : undefined;\n      var st = state.doc ? state : _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorState.create({\n        doc: state\n      });\n      if (to == null) to = st.doc.length;\n      return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);\n    }\n  }]);\n  return SearchQuery;\n}();\nvar QueryType = /*#__PURE__*/(0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(function QueryType(spec) {\n  (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, QueryType);\n  this.spec = spec;\n});\nfunction stringCursor(spec, state, from, to) {\n  return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : function (x) {\n    return x.toLowerCase();\n  }, spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);\n}\nfunction stringWordTest(doc, categorizer) {\n  return function (from, to, buf, bufPos) {\n    if (bufPos > from || bufPos + buf.length < to) {\n      bufPos = Math.max(0, from - 2);\n      buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));\n    }\n    return (categorizer(charBefore(buf, from - bufPos)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word || categorizer(charAfter(buf, from - bufPos)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word) && (categorizer(charAfter(buf, to - bufPos)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word || categorizer(charBefore(buf, to - bufPos)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word);\n  };\n}\nvar StringQuery = /*#__PURE__*/function (_QueryType) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(StringQuery, _QueryType);\n  var _super = (0,_babel_runtime_helpers_createSuper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(StringQuery);\n  function StringQuery(spec) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, StringQuery);\n    return _super.call(this, spec);\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(StringQuery, [{\n    key: \"nextMatch\",\n    value: function nextMatch(state, curFrom, curTo) {\n      var cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();\n      if (cursor.done) cursor = stringCursor(this.spec, state, 0, curFrom).nextOverlapping();\n      return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing inverted search\n    // cursor, done by scanning chunk after chunk forward.\n  }, {\n    key: \"prevMatchInRange\",\n    value: function prevMatchInRange(state, from, to) {\n      for (var pos = to;;) {\n        var start = Math.max(from, pos - 10000 /* FindPrev.ChunkSize */ - this.spec.unquoted.length);\n        var cursor = stringCursor(this.spec, state, start, pos),\n          range = null;\n        while (!cursor.nextOverlapping().done) range = cursor.value;\n        if (range) return range;\n        if (start == from) return null;\n        pos -= 10000 /* FindPrev.ChunkSize */;\n      }\n    }\n  }, {\n    key: \"prevMatch\",\n    value: function prevMatch(state, curFrom, curTo) {\n      return this.prevMatchInRange(state, 0, curFrom) || this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n  }, {\n    key: \"getReplacement\",\n    value: function getReplacement(_result) {\n      return this.spec.unquote(this.spec.replace);\n    }\n  }, {\n    key: \"matchAll\",\n    value: function matchAll(state, limit) {\n      var cursor = stringCursor(this.spec, state, 0, state.doc.length),\n        ranges = [];\n      while (!cursor.next().done) {\n        if (ranges.length >= limit) return null;\n        ranges.push(cursor.value);\n      }\n      return ranges;\n    }\n  }, {\n    key: \"highlight\",\n    value: function highlight(state, from, to, add) {\n      var cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));\n      while (!cursor.next().done) add(cursor.value.from, cursor.value.to);\n    }\n  }]);\n  return StringQuery;\n}(QueryType);\nfunction regexpCursor(spec, state, from, to) {\n  return new RegExpCursor(state.doc, spec.search, {\n    ignoreCase: !spec.caseSensitive,\n    test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined\n  }, from, to);\n}\nfunction charBefore(str, index) {\n  return str.slice((0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.findClusterBreak)(str, index, false), index);\n}\nfunction charAfter(str, index) {\n  return str.slice(index, (0,_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.findClusterBreak)(str, index));\n}\nfunction regexpWordTest(categorizer) {\n  return function (_from, _to, match) {\n    return !match[0].length || (categorizer(charBefore(match.input, match.index)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word || categorizer(charAfter(match.input, match.index)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word) && (categorizer(charAfter(match.input, match.index + match[0].length)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word || categorizer(charBefore(match.input, match.index + match[0].length)) != _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.CharCategory.Word);\n  };\n}\nvar RegExpQuery = /*#__PURE__*/function (_QueryType2) {\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(RegExpQuery, _QueryType2);\n  var _super2 = (0,_babel_runtime_helpers_createSuper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(RegExpQuery);\n  function RegExpQuery() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, RegExpQuery);\n    return _super2.apply(this, arguments);\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(RegExpQuery, [{\n    key: \"nextMatch\",\n    value: function nextMatch(state, curFrom, curTo) {\n      var cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();\n      if (cursor.done) cursor = regexpCursor(this.spec, state, 0, curFrom).next();\n      return cursor.done ? null : cursor.value;\n    }\n  }, {\n    key: \"prevMatchInRange\",\n    value: function prevMatchInRange(state, from, to) {\n      for (var size = 1;; size++) {\n        var start = Math.max(from, to - size * 10000 /* FindPrev.ChunkSize */);\n        var cursor = regexpCursor(this.spec, state, start, to),\n          range = null;\n        while (!cursor.next().done) range = cursor.value;\n        if (range && (start == from || range.from > start + 10)) return range;\n        if (start == from) return null;\n      }\n    }\n  }, {\n    key: \"prevMatch\",\n    value: function prevMatch(state, curFrom, curTo) {\n      return this.prevMatchInRange(state, 0, curFrom) || this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n  }, {\n    key: \"getReplacement\",\n    value: function getReplacement(result) {\n      return this.spec.unquote(this.spec.replace.replace(/\\$([$&\\d+])/g, function (m, i) {\n        return i == \"$\" ? \"$\" : i == \"&\" ? result.match[0] : i != \"0\" && +i < result.match.length ? result.match[i] : m;\n      }));\n    }\n  }, {\n    key: \"matchAll\",\n    value: function matchAll(state, limit) {\n      var cursor = regexpCursor(this.spec, state, 0, state.doc.length),\n        ranges = [];\n      while (!cursor.next().done) {\n        if (ranges.length >= limit) return null;\n        ranges.push(cursor.value);\n      }\n      return ranges;\n    }\n  }, {\n    key: \"highlight\",\n    value: function highlight(state, from, to, add) {\n      var cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* RegExp.HighlightMargin */), Math.min(to + 250 /* RegExp.HighlightMargin */, state.doc.length));\n      while (!cursor.next().done) add(cursor.value.from, cursor.value.to);\n    }\n  }]);\n  return RegExpQuery;\n}(QueryType);\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nvar setSearchQuery = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define();\nvar togglePanel = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.define();\nvar searchState = /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateField.define({\n  create: function create(state) {\n    return new SearchState(defaultQuery(state).create(), null);\n  },\n  update: function update(value, tr) {\n    var _iterator3 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(tr.effects),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var effect = _step3.value;\n        if (effect.is(setSearchQuery)) value = new SearchState(effect.value.create(), value.panel);else if (effect.is(togglePanel)) value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return value;\n  },\n  provide: function provide(f) {\n    return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.showPanel.from(f, function (val) {\n      return val.panel;\n    });\n  }\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n  var curState = state.field(searchState, false);\n  return curState ? curState.query.spec : defaultQuery(state);\n}\n/**\nQuery whether the search panel is open in the given editor state.\n*/\nfunction searchPanelOpen(state) {\n  var _a;\n  return ((_a = state.field(searchState, false)) === null || _a === void 0 ? void 0 : _a.panel) != null;\n}\nvar SearchState = /*#__PURE__*/(0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(function SearchState(query, panel) {\n  (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, SearchState);\n  this.query = query;\n  this.panel = panel;\n});\nvar matchMark = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.mark({\n    class: \"cm-searchMatch\"\n  }),\n  selectedMatchMark = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.mark({\n    class: \"cm-searchMatch cm-searchMatch-selected\"\n  });\nvar searchHighlighter = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.ViewPlugin.fromClass( /*#__PURE__*/function () {\n  function _class2(view) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, _class2);\n    this.view = view;\n    this.decorations = this.highlight(view.state.field(searchState));\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_class2, [{\n    key: \"update\",\n    value: function update(_update2) {\n      var state = _update2.state.field(searchState);\n      if (state != _update2.startState.field(searchState) || _update2.docChanged || _update2.selectionSet || _update2.viewportChanged) this.decorations = this.highlight(state);\n    }\n  }, {\n    key: \"highlight\",\n    value: function highlight(_ref3) {\n      var query = _ref3.query,\n        panel = _ref3.panel;\n      if (!panel || !query.spec.valid) return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.Decoration.none;\n      var view = this.view;\n      var builder = new _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.RangeSetBuilder();\n      for (var i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n        var _ranges$i = ranges[i],\n          from = _ranges$i.from,\n          to = _ranges$i.to;\n        while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* RegExp.HighlightMargin */) to = ranges[++i].to;\n        query.highlight(view.state, from, to, function (from, to) {\n          var selected = view.state.selection.ranges.some(function (r) {\n            return r.from == from && r.to == to;\n          });\n          builder.add(from, to, selected ? selectedMatchMark : matchMark);\n        });\n      }\n      return builder.finish();\n    }\n  }]);\n  return _class2;\n}(), {\n  decorations: function decorations(v) {\n    return v.decorations;\n  }\n});\nfunction searchCommand(f) {\n  return function (view) {\n    var state = view.state.field(searchState, false);\n    return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n  };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nvar findNext = /*@__PURE__*/searchCommand(function (view, _ref4) {\n  var query = _ref4.query;\n  var to = view.state.selection.main.to;\n  var next = query.nextMatch(view.state, to, to);\n  if (!next) return false;\n  var selection = _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.single(next.from, next.to);\n  var config = view.state.facet(searchConfigFacet);\n  view.dispatch({\n    selection: selection,\n    effects: [announceMatch(view, next), config.scrollToMatch(selection.main, view)],\n    userEvent: \"select.search\"\n  });\n  selectSearchInput(view);\n  return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nvar findPrevious = /*@__PURE__*/searchCommand(function (view, _ref5) {\n  var query = _ref5.query;\n  var state = view.state,\n    from = state.selection.main.from;\n  var prev = query.prevMatch(state, from, from);\n  if (!prev) return false;\n  var selection = _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.single(prev.from, prev.to);\n  var config = view.state.facet(searchConfigFacet);\n  view.dispatch({\n    selection: selection,\n    effects: [announceMatch(view, prev), config.scrollToMatch(selection.main, view)],\n    userEvent: \"select.search\"\n  });\n  selectSearchInput(view);\n  return true;\n});\n/**\nSelect all instances of the search query.\n*/\nvar selectMatches = /*@__PURE__*/searchCommand(function (view, _ref6) {\n  var query = _ref6.query;\n  var ranges = query.matchAll(view.state, 1000);\n  if (!ranges || !ranges.length) return false;\n  view.dispatch({\n    selection: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.create(ranges.map(function (r) {\n      return _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.range(r.from, r.to);\n    })),\n    userEvent: \"select.search.matches\"\n  });\n  return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nvar selectSelectionMatches = function selectSelectionMatches(_ref7) {\n  var state = _ref7.state,\n    dispatch = _ref7.dispatch;\n  var sel = state.selection;\n  if (sel.ranges.length > 1 || sel.main.empty) return false;\n  var _sel$main = sel.main,\n    from = _sel$main.from,\n    to = _sel$main.to;\n  var ranges = [],\n    main = 0;\n  for (var cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n    if (ranges.length > 1000) return false;\n    if (cur.value.from == from) main = ranges.length;\n    ranges.push(_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.range(cur.value.from, cur.value.to));\n  }\n  dispatch(state.update({\n    selection: _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.create(ranges, main),\n    userEvent: \"select.search.matches\"\n  }));\n  return true;\n};\n/**\nReplace the current match of the search query.\n*/\nvar replaceNext = /*@__PURE__*/searchCommand(function (view, _ref8) {\n  var query = _ref8.query;\n  var state = view.state,\n    _state$selection$main = state.selection.main,\n    from = _state$selection$main.from,\n    to = _state$selection$main.to;\n  if (state.readOnly) return false;\n  var next = query.nextMatch(state, from, from);\n  if (!next) return false;\n  var changes = [],\n    selection,\n    replacement;\n  var effects = [];\n  if (next.from == from && next.to == to) {\n    replacement = state.toText(query.getReplacement(next));\n    changes.push({\n      from: next.from,\n      to: next.to,\n      insert: replacement\n    });\n    next = query.nextMatch(state, next.from, next.to);\n    effects.push(_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.announce.of(state.phrase(\"replaced match on line $\", state.doc.lineAt(from).number) + \".\"));\n  }\n  if (next) {\n    var off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n    selection = _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.EditorSelection.single(next.from - off, next.to - off);\n    effects.push(announceMatch(view, next));\n    effects.push(state.facet(searchConfigFacet).scrollToMatch(selection.main, view));\n  }\n  view.dispatch({\n    changes: changes,\n    selection: selection,\n    effects: effects,\n    userEvent: \"input.replace\"\n  });\n  return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nvar replaceAll = /*@__PURE__*/searchCommand(function (view, _ref9) {\n  var query = _ref9.query;\n  if (view.state.readOnly) return false;\n  var changes = query.matchAll(view.state, 1e9).map(function (match) {\n    var from = match.from,\n      to = match.to;\n    return {\n      from: from,\n      to: to,\n      insert: query.getReplacement(match)\n    };\n  });\n  if (!changes.length) return false;\n  var announceText = view.state.phrase(\"replaced $ matches\", changes.length) + \".\";\n  view.dispatch({\n    changes: changes,\n    effects: _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.announce.of(announceText),\n    userEvent: \"input.replace.all\"\n  });\n  return true;\n});\nfunction createSearchPanel(view) {\n  return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n  var _a, _b, _c, _d;\n  var sel = state.selection.main;\n  var selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n  if (fallback && !selText) return fallback;\n  var config = state.facet(searchConfigFacet);\n  return new SearchQuery({\n    search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\\n/g, \"\\\\n\"),\n    caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,\n    literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,\n    wholeWord: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _d !== void 0 ? _d : config.wholeWord\n  });\n}\nfunction getSearchInput(view) {\n  var panel = (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.getPanel)(view, createSearchPanel);\n  return panel && panel.dom.querySelector(\"[main-field]\");\n}\nfunction selectSearchInput(view) {\n  var input = getSearchInput(view);\n  if (input && input == view.root.activeElement) input.select();\n}\n/**\nMake sure the search panel is open and focused.\n*/\nvar openSearchPanel = function openSearchPanel(view) {\n  var state = view.state.field(searchState, false);\n  if (state && state.panel) {\n    var searchInput = getSearchInput(view);\n    if (searchInput && searchInput != view.root.activeElement) {\n      var query = defaultQuery(view.state, state.query.spec);\n      if (query.valid) view.dispatch({\n        effects: setSearchQuery.of(query)\n      });\n      searchInput.focus();\n      searchInput.select();\n    }\n  } else {\n    view.dispatch({\n      effects: [togglePanel.of(true), state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : _codemirror_state__WEBPACK_IMPORTED_MODULE_9__.StateEffect.appendConfig.of(searchExtensions)]\n    });\n  }\n  return true;\n};\n/**\nClose the search panel.\n*/\nvar closeSearchPanel = function closeSearchPanel(view) {\n  var state = view.state.field(searchState, false);\n  if (!state || !state.panel) return false;\n  var panel = (0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.getPanel)(view, createSearchPanel);\n  if (panel && panel.dom.contains(view.root.activeElement)) view.focus();\n  view.dispatch({\n    effects: togglePanel.of(false)\n  });\n  return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nvar searchKeymap = [{\n  key: \"Mod-f\",\n  run: openSearchPanel,\n  scope: \"editor search-panel\"\n}, {\n  key: \"F3\",\n  run: findNext,\n  shift: findPrevious,\n  scope: \"editor search-panel\",\n  preventDefault: true\n}, {\n  key: \"Mod-g\",\n  run: findNext,\n  shift: findPrevious,\n  scope: \"editor search-panel\",\n  preventDefault: true\n}, {\n  key: \"Escape\",\n  run: closeSearchPanel,\n  scope: \"editor search-panel\"\n}, {\n  key: \"Mod-Shift-l\",\n  run: selectSelectionMatches\n}, {\n  key: \"Alt-g\",\n  run: gotoLine\n}, {\n  key: \"Mod-d\",\n  run: selectNextOccurrence,\n  preventDefault: true\n}];\nvar SearchPanel = /*#__PURE__*/function () {\n  function SearchPanel(view) {\n    var _this = this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, SearchPanel);\n    this.view = view;\n    var query = this.query = view.state.field(searchState).query.spec;\n    this.commit = this.commit.bind(this);\n    this.searchField = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"input\", {\n      value: query.search,\n      placeholder: phrase(view, \"Find\"),\n      \"aria-label\": phrase(view, \"Find\"),\n      class: \"cm-textfield\",\n      name: \"search\",\n      form: \"\",\n      \"main-field\": \"true\",\n      onchange: this.commit,\n      onkeyup: this.commit\n    });\n    this.replaceField = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"input\", {\n      value: query.replace,\n      placeholder: phrase(view, \"Replace\"),\n      \"aria-label\": phrase(view, \"Replace\"),\n      class: \"cm-textfield\",\n      name: \"replace\",\n      form: \"\",\n      onchange: this.commit,\n      onkeyup: this.commit\n    });\n    this.caseField = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"input\", {\n      type: \"checkbox\",\n      name: \"case\",\n      form: \"\",\n      checked: query.caseSensitive,\n      onchange: this.commit\n    });\n    this.reField = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"input\", {\n      type: \"checkbox\",\n      name: \"re\",\n      form: \"\",\n      checked: query.regexp,\n      onchange: this.commit\n    });\n    this.wordField = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"input\", {\n      type: \"checkbox\",\n      name: \"word\",\n      form: \"\",\n      checked: query.wholeWord,\n      onchange: this.commit\n    });\n    function button(name, onclick, content) {\n      return (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"button\", {\n        class: \"cm-button\",\n        name: name,\n        onclick: onclick,\n        type: \"button\"\n      }, content);\n    }\n    this.dom = (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"div\", {\n      onkeydown: function onkeydown(e) {\n        return _this.keydown(e);\n      },\n      class: \"cm-search\"\n    }, [this.searchField, button(\"next\", function () {\n      return findNext(view);\n    }, [phrase(view, \"next\")]), button(\"prev\", function () {\n      return findPrevious(view);\n    }, [phrase(view, \"previous\")]), button(\"select\", function () {\n      return selectMatches(view);\n    }, [phrase(view, \"all\")]), (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"label\", null, [this.caseField, phrase(view, \"match case\")]), (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"label\", null, [this.reField, phrase(view, \"regexp\")]), (0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"label\", null, [this.wordField, phrase(view, \"by word\")])].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(view.state.readOnly ? [] : [(0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"br\"), this.replaceField, button(\"replace\", function () {\n      return replaceNext(view);\n    }, [phrase(view, \"replace\")]), button(\"replaceAll\", function () {\n      return replaceAll(view);\n    }, [phrase(view, \"replace all\")])]), [(0,crelt__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"button\", {\n      name: \"close\",\n      onclick: function onclick() {\n        return closeSearchPanel(view);\n      },\n      \"aria-label\": phrase(view, \"close\"),\n      type: \"button\"\n    }, [\"×\"])]));\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(SearchPanel, [{\n    key: \"commit\",\n    value: function commit() {\n      var query = new SearchQuery({\n        search: this.searchField.value,\n        caseSensitive: this.caseField.checked,\n        regexp: this.reField.checked,\n        wholeWord: this.wordField.checked,\n        replace: this.replaceField.value\n      });\n      if (!query.eq(this.query)) {\n        this.query = query;\n        this.view.dispatch({\n          effects: setSearchQuery.of(query)\n        });\n      }\n    }\n  }, {\n    key: \"keydown\",\n    value: function keydown(e) {\n      if ((0,_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.runScopeHandlers)(this.view, e, \"search-panel\")) {\n        e.preventDefault();\n      } else if (e.keyCode == 13 && e.target == this.searchField) {\n        e.preventDefault();\n        (e.shiftKey ? findPrevious : findNext)(this.view);\n      } else if (e.keyCode == 13 && e.target == this.replaceField) {\n        e.preventDefault();\n        replaceNext(this.view);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(_update3) {\n      var _iterator4 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_update3.transactions),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var tr = _step4.value;\n          var _iterator5 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(tr.effects),\n            _step5;\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var effect = _step5.value;\n              if (effect.is(setSearchQuery) && !effect.value.eq(this.query)) this.setQuery(effect.value);\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"setQuery\",\n    value: function setQuery(query) {\n      this.query = query;\n      this.searchField.value = query.search;\n      this.replaceField.value = query.replace;\n      this.caseField.checked = query.caseSensitive;\n      this.reField.checked = query.regexp;\n      this.wordField.checked = query.wholeWord;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      this.searchField.select();\n    }\n  }, {\n    key: \"pos\",\n    get: function get() {\n      return 80;\n    }\n  }, {\n    key: \"top\",\n    get: function get() {\n      return this.view.state.facet(searchConfigFacet).top;\n    }\n  }]);\n  return SearchPanel;\n}();\nfunction phrase(view, phrase) {\n  return view.state.phrase(phrase);\n}\nvar AnnounceMargin = 30;\nvar Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, _ref10) {\n  var from = _ref10.from,\n    to = _ref10.to;\n  var line = view.state.doc.lineAt(from),\n    lineEnd = view.state.doc.lineAt(to).to;\n  var start = Math.max(line.from, from - AnnounceMargin),\n    end = Math.min(lineEnd, to + AnnounceMargin);\n  var text = view.state.sliceDoc(start, end);\n  if (start != line.from) {\n    for (var i = 0; i < AnnounceMargin; i++) if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n      text = text.slice(i);\n      break;\n    }\n  }\n  if (end != lineEnd) {\n    for (var _i = text.length - 1; _i > text.length - AnnounceMargin; _i--) if (!Break.test(text[_i - 1]) && Break.test(text[_i])) {\n      text = text.slice(0, _i);\n      break;\n    }\n  }\n  return _codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.announce.of(\"\".concat(view.state.phrase(\"current match\"), \". \").concat(text, \" \").concat(view.state.phrase(\"on line\"), \" \").concat(line.number, \".\"));\n}\nvar baseTheme = /*@__PURE__*/_codemirror_view__WEBPACK_IMPORTED_MODULE_10__.EditorView.baseTheme({\n  \".cm-panel.cm-search\": {\n    padding: \"2px 6px 4px\",\n    position: \"relative\",\n    \"& [name=close]\": {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"4px\",\n      backgroundColor: \"inherit\",\n      border: \"none\",\n      font: \"inherit\",\n      padding: 0,\n      margin: 0\n    },\n    \"& input, & button, & label\": {\n      margin: \".2em .6em .2em 0\"\n    },\n    \"& input[type=checkbox]\": {\n      marginRight: \".2em\"\n    },\n    \"& label\": {\n      fontSize: \"80%\",\n      whiteSpace: \"pre\"\n    }\n  },\n  \"&light .cm-searchMatch\": {\n    backgroundColor: \"#ffff0054\"\n  },\n  \"&dark .cm-searchMatch\": {\n    backgroundColor: \"#00ffff8a\"\n  },\n  \"&light .cm-searchMatch-selected\": {\n    backgroundColor: \"#ff6a0054\"\n  },\n  \"&dark .cm-searchMatch-selected\": {\n    backgroundColor: \"#ff00ff8a\"\n  }\n});\nvar searchExtensions = [searchState, /*@__PURE__*/_codemirror_state__WEBPACK_IMPORTED_MODULE_9__.Prec.lowest(searchHighlighter), baseTheme];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@codemirror/search/dist/index.js\n");

/***/ }),

/***/ "./node_modules/crelt/index.js":
/*!*************************************!*\
  !*** ./node_modules/crelt/index.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ crelt; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n\nfunction crelt() {\n  var elt = arguments[0];\n  if (typeof elt == \"string\") elt = document.createElement(elt);\n  var i = 1,\n    next = arguments[1];\n  if (next && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(next) == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name];\n      if (typeof value == \"string\") elt.setAttribute(name, value);else if (value != null) elt[name] = value;\n    }\n    i++;\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i]);\n  return elt;\n}\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child));\n  } else if (child == null) {} else if (child.nodeType != null) {\n    elt.appendChild(child);\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i]);\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3JlbHQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2NyZWx0L2luZGV4LmpzP2Q2NjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlbHQoKSB7XG4gIHZhciBlbHQgPSBhcmd1bWVudHNbMF1cbiAgaWYgKHR5cGVvZiBlbHQgPT0gXCJzdHJpbmdcIikgZWx0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChlbHQpXG4gIHZhciBpID0gMSwgbmV4dCA9IGFyZ3VtZW50c1sxXVxuICBpZiAobmV4dCAmJiB0eXBlb2YgbmV4dCA9PSBcIm9iamVjdFwiICYmIG5leHQubm9kZVR5cGUgPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheShuZXh0KSkge1xuICAgIGZvciAodmFyIG5hbWUgaW4gbmV4dCkgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuZXh0LCBuYW1lKSkge1xuICAgICAgdmFyIHZhbHVlID0gbmV4dFtuYW1lXVxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcInN0cmluZ1wiKSBlbHQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKVxuICAgICAgZWxzZSBpZiAodmFsdWUgIT0gbnVsbCkgZWx0W25hbWVdID0gdmFsdWVcbiAgICB9XG4gICAgaSsrXG4gIH1cbiAgZm9yICg7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIGFkZChlbHQsIGFyZ3VtZW50c1tpXSlcbiAgcmV0dXJuIGVsdFxufVxuXG5mdW5jdGlvbiBhZGQoZWx0LCBjaGlsZCkge1xuICBpZiAodHlwZW9mIGNoaWxkID09IFwic3RyaW5nXCIpIHtcbiAgICBlbHQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY2hpbGQpKVxuICB9IGVsc2UgaWYgKGNoaWxkID09IG51bGwpIHtcbiAgfSBlbHNlIGlmIChjaGlsZC5ub2RlVHlwZSAhPSBudWxsKSB7XG4gICAgZWx0LmFwcGVuZENoaWxkKGNoaWxkKVxuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZC5sZW5ndGg7IGkrKykgYWRkKGVsdCwgY2hpbGRbaV0pXG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJVbnN1cHBvcnRlZCBjaGlsZCBub2RlOiBcIiArIGNoaWxkKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crelt/index.js\n");

/***/ })

}]);