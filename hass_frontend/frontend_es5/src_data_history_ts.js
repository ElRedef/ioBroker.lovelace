"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["src_data_history_ts"],{

/***/ "./src/data/history.ts":
/*!*****************************!*\
  !*** ./src/data/history.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeHistory: function() { return /* binding */ computeHistory; },\n/* harmony export */   entityIdHistoryNeedsAttributes: function() { return /* binding */ entityIdHistoryNeedsAttributes; },\n/* harmony export */   fetchDateWS: function() { return /* binding */ fetchDateWS; },\n/* harmony export */   subscribeHistory: function() { return /* binding */ subscribeHistory; },\n/* harmony export */   subscribeHistoryStatesTimeWindow: function() { return /* binding */ subscribeHistoryStatesTimeWindow; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createForOfIteratorHelper */ \"./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/entity/compute_domain */ \"./src/common/entity/compute_domain.ts\");\n/* harmony import */ var _common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/entity/compute_state_display */ \"./src/common/entity/compute_state_display.ts\");\n/* harmony import */ var _common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/entity/compute_state_name */ \"./src/common/entity/compute_state_name.ts\");\n\n\n\n\n\n\n\nvar DOMAINS_USE_LAST_UPDATED = [\"climate\", \"humidifier\", \"water_heater\"];\nvar NEED_ATTRIBUTE_DOMAINS = [\"climate\", \"humidifier\", \"input_datetime\", \"thermostat\", \"water_heater\", \"person\", \"device_tracker\"];\nvar LINE_ATTRIBUTES_TO_KEEP = [\"temperature\", \"current_temperature\", \"target_temp_low\", \"target_temp_high\", \"hvac_action\", \"humidity\", \"mode\"];\nvar entityIdHistoryNeedsAttributes = function entityIdHistoryNeedsAttributes(hass, entityId) {\n  return !hass.states[entityId] || NEED_ATTRIBUTE_DOMAINS.includes((0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_4__.computeDomain)(entityId));\n};\nvar fetchDateWS = function fetchDateWS(hass, startTime, endTime, entityIds) {\n  var params = {\n    type: \"history/history_during_period\",\n    start_time: startTime.toISOString(),\n    end_time: endTime.toISOString(),\n    minimal_response: true,\n    no_attributes: !entityIds.some(function (entityId) {\n      return entityIdHistoryNeedsAttributes(hass, entityId);\n    })\n  };\n  if (entityIds.length !== 0) {\n    return hass.callWS(Object.assign(Object.assign({}, params), {}, {\n      entity_ids: entityIds\n    }));\n  }\n  return hass.callWS(params);\n};\nvar subscribeHistory = function subscribeHistory(hass, callbackFunction, startTime, endTime, entityIds) {\n  var params = {\n    type: \"history/stream\",\n    entity_ids: entityIds,\n    start_time: startTime.toISOString(),\n    end_time: endTime.toISOString(),\n    minimal_response: true,\n    no_attributes: !entityIds.some(function (entityId) {\n      return entityIdHistoryNeedsAttributes(hass, entityId);\n    })\n  };\n  var stream = new HistoryStream(hass);\n  return hass.connection.subscribeMessage(function (message) {\n    return callbackFunction(stream.processMessage(message));\n  }, params);\n};\nvar HistoryStream = /*#__PURE__*/function () {\n  function HistoryStream(hass, hoursToShow) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, HistoryStream);\n    this.hass = void 0;\n    this.hoursToShow = void 0;\n    this.combinedHistory = void 0;\n    this.hass = hass;\n    this.hoursToShow = hoursToShow;\n    this.combinedHistory = {};\n  }\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(HistoryStream, [{\n    key: \"processMessage\",\n    value: function processMessage(streamMessage) {\n      if (!this.combinedHistory || !Object.keys(this.combinedHistory).length) {\n        this.combinedHistory = streamMessage.states;\n        return this.combinedHistory;\n      }\n      if (!Object.keys(streamMessage.states).length) {\n        // Empty messages are still sent to\n        // indicate no more historical events\n        return this.combinedHistory;\n      }\n      var purgeBeforePythonTime = this.hoursToShow ? (new Date().getTime() - 60 * 60 * this.hoursToShow * 1000) / 1000 : undefined;\n      var newHistory = {};\n      for (var _i = 0, _Object$keys = Object.keys(this.combinedHistory); _i < _Object$keys.length; _i++) {\n        var _entityId = _Object$keys[_i];\n        newHistory[_entityId] = [];\n      }\n      for (var _i2 = 0, _Object$keys2 = Object.keys(streamMessage.states); _i2 < _Object$keys2.length; _i2++) {\n        var _entityId2 = _Object$keys2[_i2];\n        newHistory[_entityId2] = [];\n      }\n      for (var _i3 = 0, _Object$keys3 = Object.keys(newHistory); _i3 < _Object$keys3.length; _i3++) {\n        var _entityId3 = _Object$keys3[_i3];\n        if (_entityId3 in this.combinedHistory && _entityId3 in streamMessage.states) {\n          var entityCombinedHistory = this.combinedHistory[_entityId3];\n          var lastEntityCombinedHistory = entityCombinedHistory[entityCombinedHistory.length - 1];\n          newHistory[_entityId3] = entityCombinedHistory.concat(streamMessage.states[_entityId3]);\n          if (streamMessage.states[_entityId3][0].lu < lastEntityCombinedHistory.lu) {\n            // If the history is out of order we have to sort it.\n            newHistory[_entityId3] = newHistory[_entityId3].sort(function (a, b) {\n              return a.lu - b.lu;\n            });\n          }\n        } else if (_entityId3 in this.combinedHistory) {\n          newHistory[_entityId3] = this.combinedHistory[_entityId3];\n        } else {\n          newHistory[_entityId3] = streamMessage.states[_entityId3];\n        }\n        // Remove old history\n        if (purgeBeforePythonTime && _entityId3 in this.combinedHistory) {\n          var expiredStates = newHistory[_entityId3].filter(function (state) {\n            return state.lu < purgeBeforePythonTime;\n          });\n          if (!expiredStates.length) {\n            continue;\n          }\n          newHistory[_entityId3] = newHistory[_entityId3].filter(function (state) {\n            return state.lu >= purgeBeforePythonTime;\n          });\n          if (newHistory[_entityId3].length && newHistory[_entityId3][0].lu === purgeBeforePythonTime) {\n            continue;\n          }\n          // Update the first entry to the start time state\n          // as we need to preserve the start time state and\n          // only expire the rest of the history as it ages.\n          var lastExpiredState = expiredStates[expiredStates.length - 1];\n          lastExpiredState.lu = purgeBeforePythonTime;\n          newHistory[_entityId3].unshift(lastExpiredState);\n        }\n      }\n      this.combinedHistory = newHistory;\n      return this.combinedHistory;\n    }\n  }]);\n  return HistoryStream;\n}();\nvar subscribeHistoryStatesTimeWindow = function subscribeHistoryStatesTimeWindow(hass, callbackFunction, hoursToShow, entityIds) {\n  var minimalResponse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  var significantChangesOnly = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var noAttributes = arguments.length > 6 ? arguments[6] : undefined;\n  var params = {\n    type: \"history/stream\",\n    entity_ids: entityIds,\n    start_time: new Date(new Date().getTime() - 60 * 60 * hoursToShow * 1000).toISOString(),\n    minimal_response: minimalResponse,\n    significant_changes_only: significantChangesOnly,\n    no_attributes: noAttributes !== null && noAttributes !== void 0 ? noAttributes : !entityIds.some(function (entityId) {\n      return entityIdHistoryNeedsAttributes(hass, entityId);\n    })\n  };\n  var stream = new HistoryStream(hass, hoursToShow);\n  return hass.connection.subscribeMessage(function (message) {\n    return callbackFunction(stream.processMessage(message));\n  }, params);\n};\nvar equalState = function equalState(obj1, obj2) {\n  return obj1.state === obj2.state && (\n  // Only compare attributes if both states have an attributes object.\n  // When `minimal_response` is sent, only the first and last state\n  // will have attributes except for domains in DOMAINS_USE_LAST_UPDATED.\n  !obj1.attributes || !obj2.attributes || LINE_ATTRIBUTES_TO_KEEP.every(function (attr) {\n    return obj1.attributes[attr] === obj2.attributes[attr];\n  }));\n};\nvar processTimelineEntity = function processTimelineEntity(localize, language, entities, entityId, states, current_state) {\n  var data = [];\n  var first = states[0];\n  var _iterator = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(states),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var state = _step.value;\n      if (data.length > 0 && state.s === data[data.length - 1].state) {\n        continue;\n      }\n      var currentAttributes = {};\n      if (current_state !== null && current_state !== void 0 && current_state.attributes.device_class) {\n        currentAttributes.device_class = current_state === null || current_state === void 0 ? void 0 : current_state.attributes.device_class;\n      }\n      data.push({\n        state_localize: (0,_common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_5__.computeStateDisplayFromEntityAttributes)(localize, language, entities[entityId], entityId, Object.assign(Object.assign({}, state.a || first.a), currentAttributes), state.s),\n        state: state.s,\n        // lc (last_changed) may be omitted if its the same\n        // as lu (last_updated).\n        last_changed: (state.lc ? state.lc : state.lu) * 1000\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return {\n    name: (0,_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_6__.computeStateNameFromEntityAttributes)(entityId, (current_state === null || current_state === void 0 ? void 0 : current_state.attributes) || first.a),\n    entity_id: entityId,\n    data: data\n  };\n};\nvar processLineChartEntities = function processLineChartEntities(unit, entities, hassEntities) {\n  var data = [];\n  Object.keys(entities).forEach(function (entityId) {\n    var states = entities[entityId];\n    var first = states[0];\n    var domain = (0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_4__.computeDomain)(entityId);\n    var processedStates = [];\n    var _iterator2 = (0,_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(states),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var state = _step2.value;\n        var processedState = void 0;\n        if (DOMAINS_USE_LAST_UPDATED.includes(domain)) {\n          processedState = {\n            state: state.s,\n            last_changed: state.lu * 1000,\n            attributes: {}\n          };\n          for (var _i4 = 0, _LINE_ATTRIBUTES_TO_K = LINE_ATTRIBUTES_TO_KEEP; _i4 < _LINE_ATTRIBUTES_TO_K.length; _i4++) {\n            var attr = _LINE_ATTRIBUTES_TO_K[_i4];\n            if (attr in state.a) {\n              processedState.attributes[attr] = state.a[attr];\n            }\n          }\n        } else {\n          processedState = {\n            state: state.s,\n            // lc (last_changed) may be omitted if its the same\n            // as lu (last_updated).\n            last_changed: (state.lc ? state.lc : state.lu) * 1000,\n            attributes: {}\n          };\n        }\n        if (processedStates.length > 1 && equalState(processedState, processedStates[processedStates.length - 1]) && equalState(processedState, processedStates[processedStates.length - 2])) {\n          continue;\n        }\n        processedStates.push(processedState);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var attributes = entityId in hassEntities ? hassEntities[entityId].attributes : \"friendly_name\" in first.a ? first.a : undefined;\n    data.push({\n      domain: domain,\n      name: (0,_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_6__.computeStateNameFromEntityAttributes)(entityId, attributes || {}),\n      entity_id: entityId,\n      states: processedStates\n    });\n  });\n  return {\n    unit: unit,\n    identifier: Object.keys(entities).join(\"\"),\n    data: data\n  };\n};\nvar stateUsesUnits = function stateUsesUnits(state) {\n  return attributesHaveUnits(state.attributes);\n};\nvar attributesHaveUnits = function attributesHaveUnits(attributes) {\n  return \"unit_of_measurement\" in attributes || \"state_class\" in attributes;\n};\nvar computeHistory = function computeHistory(hass, stateHistory, localize) {\n  var lineChartDevices = {};\n  var timelineDevices = [];\n  if (!stateHistory) {\n    return {\n      line: [],\n      timeline: []\n    };\n  }\n  Object.keys(stateHistory).forEach(function (entityId) {\n    var stateInfo = stateHistory[entityId];\n    if (stateInfo.length === 0) {\n      return;\n    }\n    var currentState = entityId in hass.states ? hass.states[entityId] : undefined;\n    var stateWithUnitorStateClass = !currentState && stateInfo.find(function (state) {\n      return state.a && attributesHaveUnits(state.a);\n    });\n    var unit;\n    if (currentState && stateUsesUnits(currentState)) {\n      unit = currentState.attributes.unit_of_measurement || \" \";\n    } else if (stateWithUnitorStateClass) {\n      unit = stateWithUnitorStateClass.a.unit_of_measurement || \" \";\n    } else {\n      unit = {\n        zone: localize(\"ui.dialogs.more_info_control.zone.graph_unit\"),\n        climate: hass.config.unit_system.temperature,\n        counter: \"#\",\n        humidifier: \"%\",\n        input_number: \"#\",\n        number: \"#\",\n        water_heater: hass.config.unit_system.temperature\n      }[(0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_4__.computeDomain)(entityId)];\n    }\n    if (!unit) {\n      timelineDevices.push(processTimelineEntity(localize, hass.locale, hass.entities, entityId, stateInfo, currentState));\n    } else if (unit in lineChartDevices && entityId in lineChartDevices[unit]) {\n      var _lineChartDevices$uni;\n      (_lineChartDevices$uni = lineChartDevices[unit][entityId]).push.apply(_lineChartDevices$uni, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(stateInfo));\n    } else {\n      if (!(unit in lineChartDevices)) {\n        lineChartDevices[unit] = {};\n      }\n      lineChartDevices[unit][entityId] = stateInfo;\n    }\n  });\n  var unitStates = Object.keys(lineChartDevices).map(function (unit) {\n    return processLineChartEntities(unit, lineChartDevices[unit], hass.states);\n  });\n  return {\n    line: unitStates,\n    timeline: timelineDevices\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/data/history.ts\n");

/***/ })

}]);