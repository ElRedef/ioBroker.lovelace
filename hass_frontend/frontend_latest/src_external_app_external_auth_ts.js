"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["src_external_app_external_auth_ts"],{

/***/ "./src/external_app/external_auth.ts":
/*!*******************************************!*\
  !*** ./src/external_app/external_auth.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExternalAuth: () => (/* binding */ ExternalAuth),\n/* harmony export */   createExternalAuth: () => (/* binding */ createExternalAuth)\n/* harmony export */ });\n/* harmony import */ var home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! home-assistant-js-websocket */ \"./node_modules/home-assistant-js-websocket/dist/auth.js\");\n/* harmony import */ var _external_messaging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./external_messaging */ \"./src/external_app/external_messaging.ts\");\n/**\n * Auth class that connects to a native app for authentication.\n */\n\n\nconst CALLBACK_SET_TOKEN = \"externalAuthSetToken\";\nconst CALLBACK_REVOKE_TOKEN = \"externalAuthRevokeToken\";\nif (!window.externalApp && !window.webkit) {\n  throw new Error(\"External auth requires either externalApp or webkit defined on Window object.\");\n}\nclass ExternalAuth extends home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_1__.Auth {\n  constructor(hassUrl) {\n    super({\n      hassUrl,\n      clientId: \"\",\n      refresh_token: \"\",\n      access_token: \"\",\n      expires_in: 0,\n      // This will trigger connection to do a refresh right away\n      expires: 0\n    });\n    this.external = void 0;\n    this._tokenCallbackPromise = void 0;\n  }\n  async refreshAccessToken(force) {\n    if (this._tokenCallbackPromise && !force) {\n      try {\n        await this._tokenCallbackPromise;\n        return;\n      } catch (err) {\n        // _tokenCallbackPromise is in a rejected state\n        // Clear the _tokenCallbackPromise and go on refreshing access token\n        this._tokenCallbackPromise = undefined;\n      }\n    }\n    const payload = {\n      callback: CALLBACK_SET_TOKEN\n    };\n    if (force) {\n      payload.force = true;\n    }\n    this._tokenCallbackPromise = new Promise((resolve, reject) => {\n      window[CALLBACK_SET_TOKEN] = (success, data) => success ? resolve(data) : reject(data);\n    });\n\n    // we sleep 1 microtask to get the promise to actually set it on the window object.\n    await Promise.resolve();\n    if (window.externalApp) {\n      window.externalApp.getExternalAuth(JSON.stringify(payload));\n    } else {\n      window.webkit.messageHandlers.getExternalAuth.postMessage(payload);\n    }\n    const tokens = await this._tokenCallbackPromise;\n    this.data.access_token = tokens.access_token;\n    this.data.expires = tokens.expires_in * 1000 + Date.now();\n    this._tokenCallbackPromise = undefined;\n  }\n  async revoke() {\n    const payload = {\n      callback: CALLBACK_REVOKE_TOKEN\n    };\n    const callbackPromise = new Promise((resolve, reject) => {\n      window[CALLBACK_REVOKE_TOKEN] = (success, data) => success ? resolve(data) : reject(data);\n    });\n\n    // we sleep 1 microtask to get the promise to actually set it on the window object.\n    await Promise.resolve();\n    if (window.externalApp) {\n      window.externalApp.revokeExternalAuth(JSON.stringify(payload));\n    } else {\n      window.webkit.messageHandlers.revokeExternalAuth.postMessage(payload);\n    }\n    await callbackPromise;\n  }\n}\nconst createExternalAuth = async hassUrl => {\n  const auth = new ExternalAuth(hassUrl);\n  if (window.externalApp && window.externalApp.externalBus || window.webkit && window.webkit.messageHandlers.externalBus) {\n    auth.external = new _external_messaging__WEBPACK_IMPORTED_MODULE_0__.ExternalMessaging();\n    await auth.external.attach();\n  }\n  return auth;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXh0ZXJuYWxfYXBwL2V4dGVybmFsX2F1dGgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBc0NBO0FBQ0E7QUFHQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVhBO0FBWUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBOztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vc3JjL2V4dGVybmFsX2FwcC9leHRlcm5hbF9hdXRoLnRzP2RjMWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBdXRoIGNsYXNzIHRoYXQgY29ubmVjdHMgdG8gYSBuYXRpdmUgYXBwIGZvciBhdXRoZW50aWNhdGlvbi5cbiAqL1xuaW1wb3J0IHsgQXV0aCB9IGZyb20gXCJob21lLWFzc2lzdGFudC1qcy13ZWJzb2NrZXRcIjtcbmltcG9ydCB7IEV4dGVybmFsTWVzc2FnaW5nLCBFTU1lc3NhZ2UgfSBmcm9tIFwiLi9leHRlcm5hbF9tZXNzYWdpbmdcIjtcblxuY29uc3QgQ0FMTEJBQ0tfU0VUX1RPS0VOID0gXCJleHRlcm5hbEF1dGhTZXRUb2tlblwiO1xuY29uc3QgQ0FMTEJBQ0tfUkVWT0tFX1RPS0VOID0gXCJleHRlcm5hbEF1dGhSZXZva2VUb2tlblwiO1xuXG5pbnRlcmZhY2UgQmFzZVBheWxvYWQge1xuICBjYWxsYmFjazogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgR2V0RXh0ZXJuYWxBdXRoUGF5bG9hZCBleHRlbmRzIEJhc2VQYXlsb2FkIHtcbiAgZm9yY2U/OiBib29sZWFuO1xufVxuXG5pbnRlcmZhY2UgUmVmcmVzaFRva2VuUmVzcG9uc2Uge1xuICBhY2Nlc3NfdG9rZW46IHN0cmluZztcbiAgZXhwaXJlc19pbjogbnVtYmVyO1xufVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIGV4dGVybmFsQXBwPzoge1xuICAgICAgZ2V0RXh0ZXJuYWxBdXRoKHBheWxvYWQ6IHN0cmluZyk7XG4gICAgICByZXZva2VFeHRlcm5hbEF1dGgocGF5bG9hZDogc3RyaW5nKTtcbiAgICAgIGV4dGVybmFsQnVzKHBheWxvYWQ6IHN0cmluZyk7XG4gICAgfTtcbiAgICB3ZWJraXQ/OiB7XG4gICAgICBtZXNzYWdlSGFuZGxlcnM6IHtcbiAgICAgICAgZ2V0RXh0ZXJuYWxBdXRoOiB7XG4gICAgICAgICAgcG9zdE1lc3NhZ2UocGF5bG9hZDogR2V0RXh0ZXJuYWxBdXRoUGF5bG9hZCk7XG4gICAgICAgIH07XG4gICAgICAgIHJldm9rZUV4dGVybmFsQXV0aDoge1xuICAgICAgICAgIHBvc3RNZXNzYWdlKHBheWxvYWQ6IEJhc2VQYXlsb2FkKTtcbiAgICAgICAgfTtcbiAgICAgICAgZXh0ZXJuYWxCdXM6IHtcbiAgICAgICAgICBwb3N0TWVzc2FnZShwYXlsb2FkOiBFTU1lc3NhZ2UpO1xuICAgICAgICB9O1xuICAgICAgfTtcbiAgICB9O1xuICB9XG59XG5cbmlmICghd2luZG93LmV4dGVybmFsQXBwICYmICF3aW5kb3cud2Via2l0KSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICBcIkV4dGVybmFsIGF1dGggcmVxdWlyZXMgZWl0aGVyIGV4dGVybmFsQXBwIG9yIHdlYmtpdCBkZWZpbmVkIG9uIFdpbmRvdyBvYmplY3QuXCJcbiAgKTtcbn1cblxuZXhwb3J0IGNsYXNzIEV4dGVybmFsQXV0aCBleHRlbmRzIEF1dGgge1xuICBwdWJsaWMgZXh0ZXJuYWw/OiBFeHRlcm5hbE1lc3NhZ2luZztcblxuICBjb25zdHJ1Y3RvcihoYXNzVXJsOiBzdHJpbmcpIHtcbiAgICBzdXBlcih7XG4gICAgICBoYXNzVXJsLFxuICAgICAgY2xpZW50SWQ6IFwiXCIsXG4gICAgICByZWZyZXNoX3Rva2VuOiBcIlwiLFxuICAgICAgYWNjZXNzX3Rva2VuOiBcIlwiLFxuICAgICAgZXhwaXJlc19pbjogMCxcbiAgICAgIC8vIFRoaXMgd2lsbCB0cmlnZ2VyIGNvbm5lY3Rpb24gdG8gZG8gYSByZWZyZXNoIHJpZ2h0IGF3YXlcbiAgICAgIGV4cGlyZXM6IDAsXG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIF90b2tlbkNhbGxiYWNrUHJvbWlzZT86IFByb21pc2U8UmVmcmVzaFRva2VuUmVzcG9uc2U+O1xuXG4gIHB1YmxpYyBhc3luYyByZWZyZXNoQWNjZXNzVG9rZW4oZm9yY2U/OiBib29sZWFuKSB7XG4gICAgaWYgKHRoaXMuX3Rva2VuQ2FsbGJhY2tQcm9taXNlICYmICFmb3JjZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgdGhpcy5fdG9rZW5DYWxsYmFja1Byb21pc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAgIC8vIF90b2tlbkNhbGxiYWNrUHJvbWlzZSBpcyBpbiBhIHJlamVjdGVkIHN0YXRlXG4gICAgICAgIC8vIENsZWFyIHRoZSBfdG9rZW5DYWxsYmFja1Byb21pc2UgYW5kIGdvIG9uIHJlZnJlc2hpbmcgYWNjZXNzIHRva2VuXG4gICAgICAgIHRoaXMuX3Rva2VuQ2FsbGJhY2tQcm9taXNlID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBwYXlsb2FkOiBHZXRFeHRlcm5hbEF1dGhQYXlsb2FkID0ge1xuICAgICAgY2FsbGJhY2s6IENBTExCQUNLX1NFVF9UT0tFTixcbiAgICB9O1xuICAgIGlmIChmb3JjZSkge1xuICAgICAgcGF5bG9hZC5mb3JjZSA9IHRydWU7XG4gICAgfVxuXG4gICAgdGhpcy5fdG9rZW5DYWxsYmFja1Byb21pc2UgPSBuZXcgUHJvbWlzZTxSZWZyZXNoVG9rZW5SZXNwb25zZT4oXG4gICAgICAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHdpbmRvd1tDQUxMQkFDS19TRVRfVE9LRU5dID0gKHN1Y2Nlc3MsIGRhdGEpID0+XG4gICAgICAgICAgc3VjY2VzcyA/IHJlc29sdmUoZGF0YSkgOiByZWplY3QoZGF0YSk7XG4gICAgICB9XG4gICAgKTtcblxuICAgIC8vIHdlIHNsZWVwIDEgbWljcm90YXNrIHRvIGdldCB0aGUgcHJvbWlzZSB0byBhY3R1YWxseSBzZXQgaXQgb24gdGhlIHdpbmRvdyBvYmplY3QuXG4gICAgYXdhaXQgUHJvbWlzZS5yZXNvbHZlKCk7XG5cbiAgICBpZiAod2luZG93LmV4dGVybmFsQXBwKSB7XG4gICAgICB3aW5kb3cuZXh0ZXJuYWxBcHAuZ2V0RXh0ZXJuYWxBdXRoKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2luZG93LndlYmtpdCEubWVzc2FnZUhhbmRsZXJzLmdldEV4dGVybmFsQXV0aC5wb3N0TWVzc2FnZShwYXlsb2FkKTtcbiAgICB9XG5cbiAgICBjb25zdCB0b2tlbnMgPSBhd2FpdCB0aGlzLl90b2tlbkNhbGxiYWNrUHJvbWlzZTtcblxuICAgIHRoaXMuZGF0YS5hY2Nlc3NfdG9rZW4gPSB0b2tlbnMuYWNjZXNzX3Rva2VuO1xuICAgIHRoaXMuZGF0YS5leHBpcmVzID0gdG9rZW5zLmV4cGlyZXNfaW4gKiAxMDAwICsgRGF0ZS5ub3coKTtcbiAgICB0aGlzLl90b2tlbkNhbGxiYWNrUHJvbWlzZSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyByZXZva2UoKSB7XG4gICAgY29uc3QgcGF5bG9hZDogQmFzZVBheWxvYWQgPSB7IGNhbGxiYWNrOiBDQUxMQkFDS19SRVZPS0VfVE9LRU4gfTtcblxuICAgIGNvbnN0IGNhbGxiYWNrUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHdpbmRvd1tDQUxMQkFDS19SRVZPS0VfVE9LRU5dID0gKHN1Y2Nlc3MsIGRhdGEpID0+XG4gICAgICAgIHN1Y2Nlc3MgPyByZXNvbHZlKGRhdGEpIDogcmVqZWN0KGRhdGEpO1xuICAgIH0pO1xuXG4gICAgLy8gd2Ugc2xlZXAgMSBtaWNyb3Rhc2sgdG8gZ2V0IHRoZSBwcm9taXNlIHRvIGFjdHVhbGx5IHNldCBpdCBvbiB0aGUgd2luZG93IG9iamVjdC5cbiAgICBhd2FpdCBQcm9taXNlLnJlc29sdmUoKTtcblxuICAgIGlmICh3aW5kb3cuZXh0ZXJuYWxBcHApIHtcbiAgICAgIHdpbmRvdy5leHRlcm5hbEFwcC5yZXZva2VFeHRlcm5hbEF1dGgoSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cud2Via2l0IS5tZXNzYWdlSGFuZGxlcnMucmV2b2tlRXh0ZXJuYWxBdXRoLnBvc3RNZXNzYWdlKHBheWxvYWQpO1xuICAgIH1cblxuICAgIGF3YWl0IGNhbGxiYWNrUHJvbWlzZTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlRXh0ZXJuYWxBdXRoID0gYXN5bmMgKGhhc3NVcmw6IHN0cmluZykgPT4ge1xuICBjb25zdCBhdXRoID0gbmV3IEV4dGVybmFsQXV0aChoYXNzVXJsKTtcbiAgaWYgKFxuICAgICh3aW5kb3cuZXh0ZXJuYWxBcHAgJiYgd2luZG93LmV4dGVybmFsQXBwLmV4dGVybmFsQnVzKSB8fFxuICAgICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLmV4dGVybmFsQnVzKVxuICApIHtcbiAgICBhdXRoLmV4dGVybmFsID0gbmV3IEV4dGVybmFsTWVzc2FnaW5nKCk7XG4gICAgYXdhaXQgYXV0aC5leHRlcm5hbC5hdHRhY2goKTtcbiAgfVxuICByZXR1cm4gYXV0aDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/external_app/external_auth.ts\n");

/***/ }),

/***/ "./src/external_app/external_messaging.ts":
/*!************************************************!*\
  !*** ./src/external_app/external_messaging.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExternalMessaging: () => (/* binding */ ExternalMessaging)\n/* harmony export */ });\nconst CALLBACK_EXTERNAL_BUS = \"externalBus\";\nclass ExternalMessaging {\n  constructor() {\n    this.config = void 0;\n    this.commands = {};\n    this.msgId = 0;\n    this._commandHandler = void 0;\n  }\n  async attach() {\n    window[CALLBACK_EXTERNAL_BUS] = msg => this.receiveMessage(msg);\n    window.addEventListener(\"connection-status\", ev => this.fireMessage({\n      type: \"connection-status\",\n      payload: {\n        event: ev.detail\n      }\n    }));\n    this.config = await this.sendMessage({\n      type: \"config/get\"\n    });\n  }\n  addCommandHandler(handler) {\n    this._commandHandler = handler;\n  }\n\n  /**\n   * Send message to external app that expects a response.\n   * @param msg message to send\n   */\n  sendMessage(msg) {\n    const msgId = ++this.msgId;\n    msg.id = msgId;\n    this._sendExternal(msg);\n    return new Promise((resolve, reject) => {\n      this.commands[msgId] = {\n        resolve,\n        reject\n      };\n    });\n  }\n\n  /**\n   * Send message to external app without expecting a response.\n   * @param msg message to send\n   */\n  fireMessage(msg) {\n    if (!msg.id) {\n      msg.id = ++this.msgId;\n    }\n    this._sendExternal(msg);\n  }\n  receiveMessage(msg) {\n    if (true) {\n      // eslint-disable-next-line no-console\n      console.log(\"Receiving message from external app\", msg);\n    }\n    if (msg.type === \"command\") {\n      if (!this._commandHandler || !this._commandHandler(msg)) {\n        let code;\n        let message;\n        if (this._commandHandler) {\n          code = \"not_ready\";\n          message = \"Command handler not ready\";\n        } else {\n          code = \"unknown_command\";\n          message = `Unknown command ${msg.command}`;\n        }\n        // eslint-disable-next-line no-console\n        console.warn(message, msg);\n        this.fireMessage({\n          id: msg.id,\n          type: \"result\",\n          success: false,\n          error: {\n            code,\n            message\n          }\n        });\n      }\n      return;\n    }\n    const pendingCmd = this.commands[msg.id];\n    if (!pendingCmd) {\n      // eslint-disable-next-line no-console\n      console.warn(`Received unknown msg ID`, msg.id);\n      return;\n    }\n    if (msg.type === \"result\") {\n      if (msg.success) {\n        pendingCmd.resolve(msg.result);\n      } else {\n        pendingCmd.reject(msg.error);\n      }\n    }\n  }\n  _sendExternal(msg) {\n    if (true) {\n      // eslint-disable-next-line no-console\n      console.log(\"Sending message to external app\", msg);\n    }\n    if (window.externalApp) {\n      window.externalApp.externalBus(JSON.stringify(msg));\n    } else {\n      window.webkit.messageHandlers.externalBus.postMessage(msg);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/external_app/external_messaging.ts\n");

/***/ })

}]);