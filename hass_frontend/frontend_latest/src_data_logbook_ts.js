"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["src_data_logbook_ts"],{

/***/ "./src/data/logbook.ts":
/*!*****************************!*\
  !*** ./src/data/logbook.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONTINUOUS_DOMAINS: () => (/* binding */ CONTINUOUS_DOMAINS),\n/* harmony export */   clearLogbookCache: () => (/* binding */ clearLogbookCache),\n/* harmony export */   createHistoricState: () => (/* binding */ createHistoricState),\n/* harmony export */   filterLogbookCompatibleEntities: () => (/* binding */ filterLogbookCompatibleEntities),\n/* harmony export */   getLogbookData: () => (/* binding */ getLogbookData),\n/* harmony export */   getLogbookDataForContext: () => (/* binding */ getLogbookDataForContext),\n/* harmony export */   localizeStateMessage: () => (/* binding */ localizeStateMessage),\n/* harmony export */   localizeTriggerSource: () => (/* binding */ localizeTriggerSource),\n/* harmony export */   subscribeLogbook: () => (/* binding */ subscribeLogbook)\n/* harmony export */ });\n/* harmony import */ var _common_const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/const */ \"./src/common/const.ts\");\n/* harmony import */ var _common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/entity/compute_domain */ \"./src/common/entity/compute_domain.ts\");\n/* harmony import */ var _common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/entity/compute_state_display */ \"./src/common/entity/compute_state_display.ts\");\n/* harmony import */ var _common_entity_compute_state_domain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/entity/compute_state_domain */ \"./src/common/entity/compute_state_domain.ts\");\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./entity */ \"./src/data/entity.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_2__]);\n_common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nconst LOGBOOK_LOCALIZE_PATH = \"ui.components.logbook.messages\";\nconst CONTINUOUS_DOMAINS = [\"counter\", \"proximity\", \"sensor\", \"zone\"];\n//\n// Localization mapping for all the triggers in core\n// in homeassistant.components.homeassistant.triggers\n//\nconst triggerPhrases = {\n  \"numeric state of\": \"triggered_by_numeric_state_of\",\n  // number state trigger\n  \"state of\": \"triggered_by_state_of\",\n  // state trigger\n  event: \"triggered_by_event\",\n  // event trigger\n  time: \"triggered_by_time\",\n  // time trigger\n  \"time pattern\": \"triggered_by_time_pattern\",\n  // time trigger\n  \"ioBroker stopping\": \"triggered_by_homeassistant_stopping\",\n  // stop event\n  \"ioBroker starting\": \"triggered_by_homeassistant_starting\" // start event\n};\n\nconst DATA_CACHE = {};\nconst getLogbookDataForContext = async (hass, startDate, contextId) => {\n  await hass.loadBackendTranslation(\"device_class\");\n  return getLogbookDataFromServer(hass, startDate, undefined, undefined, contextId);\n};\nconst getLogbookData = async (hass, startDate, endDate, entityIds, deviceIds) => {\n  await hass.loadBackendTranslation(\"device_class\");\n  return deviceIds !== null && deviceIds !== void 0 && deviceIds.length ? getLogbookDataFromServer(hass, startDate, endDate, entityIds, undefined, deviceIds) : getLogbookDataCache(hass, startDate, endDate, entityIds);\n};\nconst getLogbookDataCache = async (hass, startDate, endDate, entityId) => {\n  const ALL_ENTITIES = \"*\";\n  const entityIdKey = entityId ? entityId.toString() : ALL_ENTITIES;\n  const cacheKey = `${startDate}${endDate}`;\n  if (!DATA_CACHE[cacheKey]) {\n    DATA_CACHE[cacheKey] = {};\n  }\n  if (entityIdKey in DATA_CACHE[cacheKey]) {\n    return DATA_CACHE[cacheKey][entityIdKey];\n  }\n  if (entityId && DATA_CACHE[cacheKey][ALL_ENTITIES]) {\n    const entities = await DATA_CACHE[cacheKey][ALL_ENTITIES];\n    return entities.filter(entity => entity.entity_id && entityId.includes(entity.entity_id));\n  }\n  DATA_CACHE[cacheKey][entityIdKey] = getLogbookDataFromServer(hass, startDate, endDate, entityId);\n  return DATA_CACHE[cacheKey][entityIdKey];\n};\nconst getLogbookDataFromServer = (hass, startDate, endDate, entityIds, contextId, deviceIds) => {\n  // If all specified filters are empty lists, we can return an empty list.\n  if ((entityIds || deviceIds) && (!entityIds || entityIds.length === 0) && (!deviceIds || deviceIds.length === 0)) {\n    return Promise.resolve([]);\n  }\n  const params = {\n    type: \"logbook/get_events\",\n    start_time: startDate\n  };\n  if (endDate) {\n    params.end_time = endDate;\n  }\n  if (entityIds !== null && entityIds !== void 0 && entityIds.length) {\n    params.entity_ids = entityIds;\n  }\n  if (deviceIds !== null && deviceIds !== void 0 && deviceIds.length) {\n    params.device_ids = deviceIds;\n  }\n  if (contextId) {\n    params.context_id = contextId;\n  }\n  return hass.callWS(params);\n};\nconst subscribeLogbook = (hass, callbackFunction, startDate, endDate, entityIds, deviceIds) => {\n  // If all specified filters are empty lists, we can return an empty list.\n  if ((entityIds || deviceIds) && (!entityIds || entityIds.length === 0) && (!deviceIds || deviceIds.length === 0)) {\n    return Promise.reject(\"No entities or devices\");\n  }\n  const params = {\n    type: \"logbook/event_stream\",\n    start_time: startDate,\n    end_time: endDate\n  };\n  if (entityIds !== null && entityIds !== void 0 && entityIds.length) {\n    params.entity_ids = entityIds;\n  }\n  if (deviceIds !== null && deviceIds !== void 0 && deviceIds.length) {\n    params.device_ids = deviceIds;\n  }\n  return hass.connection.subscribeMessage(message => callbackFunction(message), params);\n};\nconst clearLogbookCache = (startDate, endDate) => {\n  DATA_CACHE[`${startDate}${endDate}`] = {};\n};\nconst createHistoricState = (currentStateObj, state) => ({\n  entity_id: currentStateObj.entity_id,\n  state: state,\n  attributes: {\n    // Rebuild the historical state by copying static attributes only\n    device_class: currentStateObj === null || currentStateObj === void 0 ? void 0 : currentStateObj.attributes.device_class,\n    source_type: currentStateObj === null || currentStateObj === void 0 ? void 0 : currentStateObj.attributes.source_type,\n    has_date: currentStateObj === null || currentStateObj === void 0 ? void 0 : currentStateObj.attributes.has_date,\n    has_time: currentStateObj === null || currentStateObj === void 0 ? void 0 : currentStateObj.attributes.has_time,\n    // We do not want to use dynamic entity pictures (e.g., from media player) for the log book rendering,\n    // as they would present a false state in the log (played media right now vs actual historic data).\n    entity_picture_local: _common_const__WEBPACK_IMPORTED_MODULE_0__.DOMAINS_WITH_DYNAMIC_PICTURE.has((0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_1__.computeDomain)(currentStateObj.entity_id)) ? undefined : currentStateObj === null || currentStateObj === void 0 ? void 0 : currentStateObj.attributes.entity_picture_local,\n    entity_picture: _common_const__WEBPACK_IMPORTED_MODULE_0__.DOMAINS_WITH_DYNAMIC_PICTURE.has((0,_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_1__.computeDomain)(currentStateObj.entity_id)) ? undefined : currentStateObj === null || currentStateObj === void 0 ? void 0 : currentStateObj.attributes.entity_picture\n  }\n});\nconst localizeTriggerSource = (localize, source) => {\n  for (const triggerPhrase in triggerPhrases) {\n    if (source.startsWith(triggerPhrase)) {\n      return source.replace(triggerPhrase, `${localize(`ui.components.logbook.${triggerPhrases[triggerPhrase]}`)}`);\n    }\n  }\n  return source;\n};\nconst localizeStateMessage = (hass, localize, state, stateObj, domain) => {\n  switch (domain) {\n    case \"device_tracker\":\n    case \"person\":\n      if (state === \"not_home\") {\n        return localize(`${LOGBOOK_LOCALIZE_PATH}.was_away`);\n      }\n      if (state === \"home\") {\n        return localize(`${LOGBOOK_LOCALIZE_PATH}.was_at_home`);\n      }\n      return localize(`${LOGBOOK_LOCALIZE_PATH}.was_at_state`, \"state\", state);\n    case \"sun\":\n      return state === \"above_horizon\" ? localize(`${LOGBOOK_LOCALIZE_PATH}.rose`) : localize(`${LOGBOOK_LOCALIZE_PATH}.set`);\n    case \"binary_sensor\":\n      {\n        const isOn = state === _common_const__WEBPACK_IMPORTED_MODULE_0__.BINARY_STATE_ON;\n        const isOff = state === _common_const__WEBPACK_IMPORTED_MODULE_0__.BINARY_STATE_OFF;\n        const device_class = stateObj.attributes.device_class;\n        switch (device_class) {\n          case \"battery\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_low`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_normal`);\n            }\n            break;\n          case \"connectivity\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_connected`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_disconnected`);\n            }\n            break;\n          case \"door\":\n          case \"garage_door\":\n          case \"opening\":\n          case \"window\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_opened`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_closed`);\n            }\n            break;\n          case \"lock\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_unlocked`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_locked`);\n            }\n            break;\n          case \"plug\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_plugged_in`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_unplugged`);\n            }\n            break;\n          case \"presence\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_at_home`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_away`);\n            }\n            break;\n          case \"safety\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_unsafe`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.was_safe`);\n            }\n            break;\n          case \"cold\":\n          case \"gas\":\n          case \"heat\":\n          case \"moisture\":\n          case \"motion\":\n          case \"occupancy\":\n          case \"power\":\n          case \"problem\":\n          case \"smoke\":\n          case \"sound\":\n          case \"vibration\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.detected_device_class`, {\n                device_class: localize(`component.binary_sensor.device_class.${device_class}`)\n              });\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.cleared_device_class`, {\n                device_class: localize(`component.binary_sensor.device_class.${device_class}`)\n              });\n            }\n            break;\n          case \"tamper\":\n            if (isOn) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.detected_tampering`);\n            }\n            if (isOff) {\n              return localize(`${LOGBOOK_LOCALIZE_PATH}.cleared_tampering`);\n            }\n            break;\n        }\n        break;\n      }\n    case \"cover\":\n      switch (state) {\n        case \"open\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.was_opened`);\n        case \"opening\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.is_opening`);\n        case \"closing\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.is_closing`);\n        case \"closed\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.was_closed`);\n      }\n      break;\n    case \"lock\":\n      switch (state) {\n        case \"unlocked\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.was_unlocked`);\n        case \"locking\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.is_locking`);\n        case \"unlocking\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.is_unlocking`);\n        case \"locked\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.was_locked`);\n        case \"jammed\":\n          return localize(`${LOGBOOK_LOCALIZE_PATH}.is_jammed`);\n      }\n      break;\n  }\n  if (state === _common_const__WEBPACK_IMPORTED_MODULE_0__.BINARY_STATE_ON) {\n    return localize(`${LOGBOOK_LOCALIZE_PATH}.turned_on`);\n  }\n  if (state === _common_const__WEBPACK_IMPORTED_MODULE_0__.BINARY_STATE_OFF) {\n    return localize(`${LOGBOOK_LOCALIZE_PATH}.turned_off`);\n  }\n  if (state === _entity__WEBPACK_IMPORTED_MODULE_4__.UNKNOWN) {\n    return localize(`${LOGBOOK_LOCALIZE_PATH}.became_unknown`);\n  }\n  if (state === _entity__WEBPACK_IMPORTED_MODULE_4__.UNAVAILABLE) {\n    return localize(`${LOGBOOK_LOCALIZE_PATH}.became_unavailable`);\n  }\n  return hass.localize(`${LOGBOOK_LOCALIZE_PATH}.changed_to_state`, \"state\", stateObj ? (0,_common_entity_compute_state_display__WEBPACK_IMPORTED_MODULE_2__.computeStateDisplay)(localize, stateObj, hass.locale, hass.entities, state) : state);\n};\nconst filterLogbookCompatibleEntities = entity => (0,_common_entity_compute_state_domain__WEBPACK_IMPORTED_MODULE_3__.computeStateDomain)(entity) !== \"sensor\" || entity.attributes.unit_of_measurement === undefined && entity.attributes.state_class === undefined;\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/data/logbook.ts\n");

/***/ })

}]);