"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["src_components_chart_statistics-chart_ts"],{

/***/ "./src/components/chart/statistics-chart.ts":
/*!**************************************************!*\
  !*** ./src/components/chart/statistics-chart.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supportedStatTypeMap: () => (/* binding */ supportedStatTypeMap)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/decorators */ \"./node_modules/lit/decorators.js\");\n/* harmony import */ var memoize_one__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! memoize-one */ \"./node_modules/memoize-one/dist/memoize-one.esm.js\");\n/* harmony import */ var _common_color_colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/color/colors */ \"./src/common/color/colors.ts\");\n/* harmony import */ var _common_config_is_component_loaded__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/config/is_component_loaded */ \"./src/common/config/is_component_loaded.ts\");\n/* harmony import */ var _common_number_format_number__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/number/format_number */ \"./src/common/number/format_number.ts\");\n/* harmony import */ var _data_recorder__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/recorder */ \"./src/data/recorder.ts\");\n/* harmony import */ var _ha_chart_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ha-chart-base */ \"./src/components/chart/ha-chart-base.ts\");\n\n\n\n\n\n\n\n\n\nconst supportedStatTypeMap = {\n  mean: \"mean\",\n  min: \"min\",\n  max: \"max\",\n  sum: \"sum\",\n  state: \"sum\",\n  change: \"sum\"\n};\nlet StatisticsChart = (0,_babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.customElement)(\"statistics-chart\")], function (_initialize, _LitElement) {\n  class StatisticsChart extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: StatisticsChart,\n    d: [{\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        attribute: false\n      })],\n      key: \"statisticsData\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        attribute: false\n      })],\n      key: \"metadata\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)()],\n      key: \"names\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)()],\n      key: \"unit\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        attribute: false\n      })],\n      key: \"endTime\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        type: Array\n      })],\n      key: \"statTypes\",\n      value() {\n        return [\"sum\", \"min\", \"mean\", \"max\"];\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)()],\n      key: \"chartType\",\n      value() {\n        return \"line\";\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        type: Boolean\n      })],\n      key: \"hideLegend\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        type: Boolean\n      })],\n      key: \"isLoadingData\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_chartData\",\n      value() {\n        return {\n          datasets: []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_chartOptions\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_computedStyle\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"willUpdate\",\n      value: function willUpdate(changedProps) {\n        if (!this.hasUpdated || changedProps.has(\"unit\")) {\n          this._createOptions();\n        }\n        if (changedProps.has(\"statisticsData\") || changedProps.has(\"statTypes\") || changedProps.has(\"chartType\") || changedProps.has(\"hideLegend\")) {\n          this._generateData();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        this._computedStyle = getComputedStyle(this);\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!(0,_common_config_is_component_loaded__WEBPACK_IMPORTED_MODULE_4__.isComponentLoaded)(this.hass, \"history\")) {\n          return lit__WEBPACK_IMPORTED_MODULE_1__.html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.history_charts.history_disabled\")}\n      </div>`;\n        }\n        if (this.isLoadingData && !this.statisticsData) {\n          return lit__WEBPACK_IMPORTED_MODULE_1__.html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.statistics_charts.loading_statistics\")}\n      </div>`;\n        }\n        if (!this.statisticsData || !Object.keys(this.statisticsData).length) {\n          return lit__WEBPACK_IMPORTED_MODULE_1__.html`<div class=\"info\">\n        ${this.hass.localize(\"ui.components.statistics_charts.no_statistics_found\")}\n      </div>`;\n        }\n        return lit__WEBPACK_IMPORTED_MODULE_1__.html`\n      <ha-chart-base\n        .hass=${this.hass}\n        .data=${this._chartData}\n        .options=${this._chartOptions}\n        .chartType=${this.chartType}\n      ></ha-chart-base>\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_createOptions\",\n      value: function _createOptions(unit) {\n        this._chartOptions = {\n          parsing: false,\n          animation: false,\n          interaction: {\n            mode: \"nearest\",\n            axis: \"x\"\n          },\n          scales: {\n            x: {\n              type: \"time\",\n              adapters: {\n                date: {\n                  locale: this.hass.locale\n                }\n              },\n              ticks: {\n                maxRotation: 0,\n                sampleSize: 5,\n                autoSkipPadding: 20,\n                major: {\n                  enabled: true\n                },\n                font: context => context.tick && context.tick.major ? {\n                  weight: \"bold\"\n                } : {}\n              },\n              time: {\n                tooltipFormat: \"datetime\"\n              }\n            },\n            y: {\n              beginAtZero: false,\n              ticks: {\n                maxTicksLimit: 7\n              },\n              title: {\n                display: unit || this.unit,\n                text: unit || this.unit\n              }\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: context => `${context.dataset.label}: ${(0,_common_number_format_number__WEBPACK_IMPORTED_MODULE_5__.formatNumber)(context.parsed.y, this.hass.locale)} ${\n                // @ts-ignore\n                context.dataset.unit || \"\"}`\n              }\n            },\n            filler: {\n              propagate: true\n            },\n            legend: {\n              display: !this.hideLegend,\n              labels: {\n                usePointStyle: true\n              }\n            }\n          },\n          elements: {\n            line: {\n              tension: 0.4,\n              cubicInterpolationMode: \"monotone\",\n              borderWidth: 1.5\n            },\n            bar: {\n              borderWidth: 1.5,\n              borderRadius: 4\n            },\n            point: {\n              hitRadius: 50\n            }\n          },\n          // @ts-expect-error\n          locale: (0,_common_number_format_number__WEBPACK_IMPORTED_MODULE_5__.numberFormatToLocale)(this.hass.locale)\n        };\n      }\n    }, {\n      kind: \"field\",\n      key: \"_getStatisticsMetaData\",\n      value() {\n        return (0,memoize_one__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(async statisticIds => {\n          const statsMetadataArray = await (0,_data_recorder__WEBPACK_IMPORTED_MODULE_6__.getStatisticMetadata)(this.hass, statisticIds);\n          const statisticsMetaData = {};\n          statsMetadataArray.forEach(x => {\n            statisticsMetaData[x.statistic_id] = x;\n          });\n          return statisticsMetaData;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_generateData\",\n      value: async function _generateData() {\n        if (!this.statisticsData) {\n          return;\n        }\n        const statisticsMetaData = this.metadata || (await this._getStatisticsMetaData(Object.keys(this.statisticsData)));\n        let colorIndex = 0;\n        const statisticsData = Object.entries(this.statisticsData);\n        const totalDataSets = [];\n        let endTime;\n        if (statisticsData.length === 0) {\n          return;\n        }\n        endTime = this.endTime ||\n        // Get the highest date from the last date of each statistic\n        new Date(Math.max(...statisticsData.map(([_, stats]) => new Date(stats[stats.length - 1].start).getTime())));\n        if (endTime > new Date()) {\n          endTime = new Date();\n        }\n        let unit;\n        const names = this.names || {};\n        statisticsData.forEach(([statistic_id, stats]) => {\n          const meta = statisticsMetaData === null || statisticsMetaData === void 0 ? void 0 : statisticsMetaData[statistic_id];\n          let name = names[statistic_id];\n          if (name === undefined) {\n            name = (0,_data_recorder__WEBPACK_IMPORTED_MODULE_6__.getStatisticLabel)(this.hass, statistic_id, meta);\n          }\n          if (!this.unit) {\n            if (unit === undefined) {\n              unit = (0,_data_recorder__WEBPACK_IMPORTED_MODULE_6__.getDisplayUnit)(this.hass, statistic_id, meta);\n            } else if (unit !== null && unit !== (0,_data_recorder__WEBPACK_IMPORTED_MODULE_6__.getDisplayUnit)(this.hass, statistic_id, meta)) {\n              // Clear unit if not all statistics have same unit\n              unit = null;\n            }\n          }\n\n          // array containing [value1, value2, etc]\n          let prevValues = null;\n          let prevEndTime;\n\n          // The datasets for the current statistic\n          const statDataSets = [];\n          const pushData = (start, end, dataValues) => {\n            if (!dataValues) return;\n            if (start > end) {\n              // Drop data points that are after the requested endTime. This could happen if\n              // endTime is \"now\" and client time is not in sync with server time.\n              return;\n            }\n            statDataSets.forEach((d, i) => {\n              if (this.chartType === \"line\" && prevEndTime && prevValues && prevEndTime.getTime() !== start.getTime()) {\n                // if the end of the previous data doesn't match the start of the current data,\n                // we have to draw a gap so add a value at the end time, and then an empty value.\n                d.data.push({\n                  x: prevEndTime.getTime(),\n                  y: prevValues[i]\n                });\n                // @ts-expect-error\n                d.data.push({\n                  x: prevEndTime.getTime(),\n                  y: null\n                });\n              }\n              d.data.push({\n                x: start.getTime(),\n                y: dataValues[i]\n              });\n            });\n            prevValues = dataValues;\n            prevEndTime = end;\n          };\n          const color = (0,_common_color_colors__WEBPACK_IMPORTED_MODULE_3__.getGraphColorByIndex)(colorIndex, this._computedStyle || getComputedStyle(this));\n          colorIndex++;\n          const statTypes = [];\n          const drawBands = this.statTypes.includes(\"mean\") && (0,_data_recorder__WEBPACK_IMPORTED_MODULE_6__.statisticsHaveType)(stats, \"mean\");\n          const sortedTypes = drawBands ? [...this.statTypes].sort((a, b) => {\n            if (a === \"min\" || b === \"max\") {\n              return -1;\n            }\n            if (a === \"max\" || b === \"min\") {\n              return +1;\n            }\n            return 0;\n          }) : this.statTypes;\n          sortedTypes.forEach(type => {\n            if ((0,_data_recorder__WEBPACK_IMPORTED_MODULE_6__.statisticsHaveType)(stats, type)) {\n              const band = drawBands && (type === \"min\" || type === \"max\");\n              statTypes.push(type);\n              statDataSets.push({\n                label: name ? `${name} (${this.hass.localize(`ui.components.statistics_charts.statistic_types.${type}`)})\n            ` : this.hass.localize(`ui.components.statistics_charts.statistic_types.${type}`),\n                fill: drawBands ? type === \"min\" ? \"+1\" : type === \"max\" ? \"-1\" : false : false,\n                borderColor: band ? color + (this.hideLegend ? \"00\" : \"7F\") : color,\n                backgroundColor: band ? color + \"3F\" : color + \"7F\",\n                pointRadius: 0,\n                data: [],\n                // @ts-ignore\n                unit: meta === null || meta === void 0 ? void 0 : meta.unit_of_measurement,\n                band\n              });\n            }\n          });\n          let prevDate = null;\n          // Process chart data.\n          let firstSum = null;\n          stats.forEach(stat => {\n            const startDate = new Date(stat.start);\n            if (prevDate === startDate) {\n              return;\n            }\n            prevDate = startDate;\n            const dataValues = [];\n            statTypes.forEach(type => {\n              let val;\n              if (type === \"sum\") {\n                if (firstSum === null || firstSum === undefined) {\n                  val = 0;\n                  firstSum = stat.sum;\n                } else {\n                  val = (stat.sum || 0) - firstSum;\n                }\n              } else {\n                val = stat[type];\n              }\n              dataValues.push(val !== null && val !== undefined ? Math.round(val * 100) / 100 : null);\n            });\n            pushData(startDate, new Date(stat.end), dataValues);\n          });\n\n          // Concat two arrays\n          Array.prototype.push.apply(totalDataSets, statDataSets);\n        });\n        if (unit) {\n          this._createOptions(unit);\n        }\n        this._chartData = {\n          datasets: totalDataSets\n        };\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return lit__WEBPACK_IMPORTED_MODULE_1__.css`\n      :host {\n        display: block;\n        min-height: 60px;\n      }\n      .info {\n        text-align: center;\n        line-height: 60px;\n        color: var(--secondary-text-color);\n      }\n    `;\n      }\n    }]\n  };\n}, lit__WEBPACK_IMPORTED_MODULE_1__.LitElement);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/chart/statistics-chart.ts\n");

/***/ })

}]);