"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["vendors-node_modules_vaadin_combo-box_lit_js-node_modules_vaadin_combo-box_theme_material_vaa-9795ce"],{

/***/ "./node_modules/@vaadin/combo-box/lit.js":
/*!***********************************************!*\
  !*** ./node_modules/@vaadin/combo-box/lit.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ComboBoxRendererDirective: () => (/* reexport safe */ _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxRendererDirective),
/* harmony export */   comboBoxRenderer: () => (/* reexport safe */ _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__.comboBoxRenderer)
/* harmony export */ });
/* harmony import */ var _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/lit/renderer-directives.js */ "./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js");


/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxRendererDirective: () => (/* binding */ ComboBoxRendererDirective),\n/* harmony export */   comboBoxRenderer: () => (/* binding */ comboBoxRenderer)\n/* harmony export */ });\n/* harmony import */ var lit_directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit/directive.js */ \"./node_modules/lit/directive.js\");\n/* harmony import */ var _vaadin_lit_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/lit-renderer */ \"./node_modules/@vaadin/lit-renderer/src/lit-renderer.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nclass ComboBoxRendererDirective extends _vaadin_lit_renderer__WEBPACK_IMPORTED_MODULE_1__.LitRendererDirective {\n  /**\n   * Adds the renderer callback to the combo-box.\n   */\n  addRenderer() {\n    this.element.renderer = (root, comboBox, model) => {\n      this.renderRenderer(root, model.item, model, comboBox);\n    };\n  }\n\n  /**\n   * Runs the renderer callback on the combo-box.\n   */\n  runRenderer() {\n    this.element.requestContentUpdate();\n  }\n\n  /**\n   * Removes the renderer callback from the combo-box.\n   */\n  removeRenderer() {\n    this.element.renderer = null;\n  }\n}\n\n/**\n * A Lit directive for rendering the content of the `<vaadin-combo-box-item>` elements.\n *\n * The directive accepts a renderer callback returning a Lit template and assigns it to the combo-box\n * via the `renderer` property. The renderer is called for each combo-box item when assigned\n * and whenever a single dependency or an array of dependencies changes.\n * It is not guaranteed that the renderer will be called immediately (synchronously) in both cases.\n *\n * Dependencies can be a single value or an array of values.\n * Values are checked against previous values with strict equality (`===`),\n * so the check won't detect nested property changes inside objects or arrays.\n * When dependencies are provided as an array, each item is checked against the previous value\n * at the same index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example of usage:\n * ```js\n * `<vaadin-combo-box\n *   ${comboBoxRenderer((item, model, comboBox) => html`...`)}\n * ></vaadin-combo-box>`\n * ```\n *\n * @param renderer the renderer callback that returns a Lit template.\n * @param dependencies a single dependency or an array of dependencies\n *                     which trigger a re-render when changed.\n */\nconst comboBoxRenderer = (0,lit_directive_js__WEBPACK_IMPORTED_MODULE_0__.directive)(ComboBoxRendererDirective);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL2xpdC9yZW5kZXJlci1kaXJlY3RpdmVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL2xpdC9yZW5kZXJlci1kaXJlY3RpdmVzLmpzPzZjMmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBkaXJlY3RpdmUgfSBmcm9tICdsaXQvZGlyZWN0aXZlLmpzJztcbmltcG9ydCB7IExpdFJlbmRlcmVyRGlyZWN0aXZlIH0gZnJvbSAnQHZhYWRpbi9saXQtcmVuZGVyZXInO1xuXG5leHBvcnQgY2xhc3MgQ29tYm9Cb3hSZW5kZXJlckRpcmVjdGl2ZSBleHRlbmRzIExpdFJlbmRlcmVyRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIEFkZHMgdGhlIHJlbmRlcmVyIGNhbGxiYWNrIHRvIHRoZSBjb21iby1ib3guXG4gICAqL1xuICBhZGRSZW5kZXJlcigpIHtcbiAgICB0aGlzLmVsZW1lbnQucmVuZGVyZXIgPSAocm9vdCwgY29tYm9Cb3gsIG1vZGVsKSA9PiB7XG4gICAgICB0aGlzLnJlbmRlclJlbmRlcmVyKHJvb3QsIG1vZGVsLml0ZW0sIG1vZGVsLCBjb21ib0JveCk7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSdW5zIHRoZSByZW5kZXJlciBjYWxsYmFjayBvbiB0aGUgY29tYm8tYm94LlxuICAgKi9cbiAgcnVuUmVuZGVyZXIoKSB7XG4gICAgdGhpcy5lbGVtZW50LnJlcXVlc3RDb250ZW50VXBkYXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyB0aGUgcmVuZGVyZXIgY2FsbGJhY2sgZnJvbSB0aGUgY29tYm8tYm94LlxuICAgKi9cbiAgcmVtb3ZlUmVuZGVyZXIoKSB7XG4gICAgdGhpcy5lbGVtZW50LnJlbmRlcmVyID0gbnVsbDtcbiAgfVxufVxuXG4vKipcbiAqIEEgTGl0IGRpcmVjdGl2ZSBmb3IgcmVuZGVyaW5nIHRoZSBjb250ZW50IG9mIHRoZSBgPHZhYWRpbi1jb21iby1ib3gtaXRlbT5gIGVsZW1lbnRzLlxuICpcbiAqIFRoZSBkaXJlY3RpdmUgYWNjZXB0cyBhIHJlbmRlcmVyIGNhbGxiYWNrIHJldHVybmluZyBhIExpdCB0ZW1wbGF0ZSBhbmQgYXNzaWducyBpdCB0byB0aGUgY29tYm8tYm94XG4gKiB2aWEgdGhlIGByZW5kZXJlcmAgcHJvcGVydHkuIFRoZSByZW5kZXJlciBpcyBjYWxsZWQgZm9yIGVhY2ggY29tYm8tYm94IGl0ZW0gd2hlbiBhc3NpZ25lZFxuICogYW5kIHdoZW5ldmVyIGEgc2luZ2xlIGRlcGVuZGVuY3kgb3IgYW4gYXJyYXkgb2YgZGVwZW5kZW5jaWVzIGNoYW5nZXMuXG4gKiBJdCBpcyBub3QgZ3VhcmFudGVlZCB0aGF0IHRoZSByZW5kZXJlciB3aWxsIGJlIGNhbGxlZCBpbW1lZGlhdGVseSAoc3luY2hyb25vdXNseSkgaW4gYm90aCBjYXNlcy5cbiAqXG4gKiBEZXBlbmRlbmNpZXMgY2FuIGJlIGEgc2luZ2xlIHZhbHVlIG9yIGFuIGFycmF5IG9mIHZhbHVlcy5cbiAqIFZhbHVlcyBhcmUgY2hlY2tlZCBhZ2FpbnN0IHByZXZpb3VzIHZhbHVlcyB3aXRoIHN0cmljdCBlcXVhbGl0eSAoYD09PWApLFxuICogc28gdGhlIGNoZWNrIHdvbid0IGRldGVjdCBuZXN0ZWQgcHJvcGVydHkgY2hhbmdlcyBpbnNpZGUgb2JqZWN0cyBvciBhcnJheXMuXG4gKiBXaGVuIGRlcGVuZGVuY2llcyBhcmUgcHJvdmlkZWQgYXMgYW4gYXJyYXksIGVhY2ggaXRlbSBpcyBjaGVja2VkIGFnYWluc3QgdGhlIHByZXZpb3VzIHZhbHVlXG4gKiBhdCB0aGUgc2FtZSBpbmRleCB3aXRoIHN0cmljdCBlcXVhbGl0eS4gTmVzdGVkIGFycmF5cyBhcmUgYWxzbyBjaGVja2VkIG9ubHkgYnkgc3RyaWN0XG4gKiBlcXVhbGl0eS5cbiAqXG4gKiBFeGFtcGxlIG9mIHVzYWdlOlxuICogYGBganNcbiAqIGA8dmFhZGluLWNvbWJvLWJveFxuICogICAke2NvbWJvQm94UmVuZGVyZXIoKGl0ZW0sIG1vZGVsLCBjb21ib0JveCkgPT4gaHRtbGAuLi5gKX1cbiAqID48L3ZhYWRpbi1jb21iby1ib3g+YFxuICogYGBgXG4gKlxuICogQHBhcmFtIHJlbmRlcmVyIHRoZSByZW5kZXJlciBjYWxsYmFjayB0aGF0IHJldHVybnMgYSBMaXQgdGVtcGxhdGUuXG4gKiBAcGFyYW0gZGVwZW5kZW5jaWVzIGEgc2luZ2xlIGRlcGVuZGVuY3kgb3IgYW4gYXJyYXkgb2YgZGVwZW5kZW5jaWVzXG4gKiAgICAgICAgICAgICAgICAgICAgIHdoaWNoIHRyaWdnZXIgYSByZS1yZW5kZXIgd2hlbiBjaGFuZ2VkLlxuICovXG5leHBvcnQgY29uc3QgY29tYm9Cb3hSZW5kZXJlciA9IGRpcmVjdGl2ZShDb21ib0JveFJlbmRlcmVyRGlyZWN0aXZlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxDataProviderMixin: () => (/* binding */ ComboBoxDataProviderMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @polymerMixin\n */\nconst ComboBoxDataProviderMixin = superClass => class DataProviderMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Number of items fetched at a time from the dataprovider.\n       * @attr {number} page-size\n       * @type {number}\n       */\n      pageSize: {\n        type: Number,\n        value: 50,\n        observer: '_pageSizeChanged'\n      },\n      /**\n       * Total number of items.\n       * @type {number | undefined}\n       */\n      size: {\n        type: Number,\n        observer: '_sizeChanged'\n      },\n      /**\n       * Function that provides items lazily. Receives arguments `params`, `callback`\n       *\n       * `params.page` Requested page index\n       *\n       * `params.pageSize` Current page size\n       *\n       * `params.filter` Currently applied filter\n       *\n       * `callback(items, size)` Callback function with arguments:\n       *   - `items` Current page of items\n       *   - `size` Total number of items.\n       * @type {ComboBoxDataProvider | undefined}\n       */\n      dataProvider: {\n        type: Object,\n        observer: '_dataProviderChanged'\n      },\n      /** @private */\n      _pendingRequests: {\n        value: () => {\n          return {};\n        }\n      },\n      /** @private */\n      __placeHolder: {\n        value: new _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxPlaceholder()\n      },\n      /** @private */\n      __previousDataProviderFilter: {\n        type: String\n      }\n    };\n  }\n  static get observers() {\n    return ['_dataProviderFilterChanged(filter)', '_warnDataProviderValue(dataProvider, value)', '_ensureFirstPage(opened)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._scroller.addEventListener('index-requested', e => {\n      const index = e.detail.index;\n      const currentScrollerPos = e.detail.currentScrollerPos;\n      const allowedIndexRange = Math.floor(this.pageSize * 1.5);\n\n      // Ignores the indexes, which are being re-sent during scrolling reset,\n      // if the corresponding page is around the current scroller position.\n      // Otherwise, there might be a last pages duplicates, which cause the\n      // loading indicator hanging and blank items\n      if (this._shouldSkipIndex(index, allowedIndexRange, currentScrollerPos)) {\n        return;\n      }\n      if (index !== undefined) {\n        const page = this._getPageForIndex(index);\n        if (this._shouldLoadPage(page)) {\n          this._loadPage(page);\n        }\n      }\n    });\n  }\n\n  /** @private */\n  _dataProviderFilterChanged(filter) {\n    if (this.__previousDataProviderFilter === undefined && filter === '') {\n      this.__previousDataProviderFilter = filter;\n      return;\n    }\n    if (this.__previousDataProviderFilter !== filter) {\n      this.__previousDataProviderFilter = filter;\n      this._pendingRequests = {};\n      // Immediately mark as loading if this refresh leads to re-fetching pages\n      // This prevents some issues with the properties below triggering\n      // observers that also rely on the loading state\n      this.loading = this._shouldFetchData();\n      // Reset size and internal loading state\n      this.size = undefined;\n      this.clearCache();\n    }\n  }\n\n  /** @private */\n  _shouldFetchData() {\n    if (!this.dataProvider) {\n      return false;\n    }\n    return this.opened || this.filter && this.filter.length;\n  }\n\n  /** @private */\n  _ensureFirstPage(opened) {\n    if (opened && this._shouldLoadPage(0)) {\n      this._loadPage(0);\n    }\n  }\n\n  /** @private */\n  _shouldSkipIndex(index, allowedIndexRange, currentScrollerPos) {\n    return currentScrollerPos !== 0 && index >= currentScrollerPos - allowedIndexRange && index <= currentScrollerPos + allowedIndexRange;\n  }\n\n  /** @private */\n  _shouldLoadPage(page) {\n    if (!this.filteredItems || this._forceNextRequest) {\n      this._forceNextRequest = false;\n      return true;\n    }\n    const loadedItem = this.filteredItems[page * this.pageSize];\n    if (loadedItem !== undefined) {\n      return loadedItem instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxPlaceholder;\n    }\n    return this.size === undefined;\n  }\n\n  /** @private */\n  _loadPage(page) {\n    // Make sure same page isn't requested multiple times.\n    if (this._pendingRequests[page] || !this.dataProvider) {\n      return;\n    }\n    const params = {\n      page,\n      pageSize: this.pageSize,\n      filter: this.filter\n    };\n    const callback = (items, size) => {\n      if (this._pendingRequests[page] !== callback) {\n        return;\n      }\n      const filteredItems = this.filteredItems ? [...this.filteredItems] : [];\n      filteredItems.splice(params.page * params.pageSize, items.length, ...items);\n      this.filteredItems = filteredItems;\n      if (!this.opened && !this._isInputFocused()) {\n        this._commitValue();\n      }\n      if (size !== undefined) {\n        this.size = size;\n      }\n      delete this._pendingRequests[page];\n      if (Object.keys(this._pendingRequests).length === 0) {\n        this.loading = false;\n      }\n    };\n    this._pendingRequests[page] = callback;\n    // Set the `loading` flag only after marking the request as pending\n    // to prevent the same page from getting requested multiple times\n    // as a result of `__loadingChanged` in the scroller which requests\n    // a virtualizer update which in turn may trigger a data provider page request.\n    this.loading = true;\n    this.dataProvider(params, callback);\n  }\n\n  /** @private */\n  _getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n\n  /**\n   * Clears the cached pages and reloads data from dataprovider when needed.\n   */\n  clearCache() {\n    if (!this.dataProvider) {\n      return;\n    }\n    this._pendingRequests = {};\n    const filteredItems = [];\n    for (let i = 0; i < (this.size || 0); i++) {\n      filteredItems.push(this.__placeHolder);\n    }\n    this.filteredItems = filteredItems;\n    if (this._shouldFetchData()) {\n      this._forceNextRequest = false;\n      this._loadPage(0);\n    } else {\n      this._forceNextRequest = true;\n    }\n  }\n\n  /** @private */\n  _sizeChanged(size = 0) {\n    const filteredItems = (this.filteredItems || []).slice(0, size);\n    for (let i = 0; i < size; i++) {\n      filteredItems[i] = filteredItems[i] !== undefined ? filteredItems[i] : this.__placeHolder;\n    }\n    this.filteredItems = filteredItems;\n\n    // Cleans up the redundant pending requests for pages > size\n    // Refers to https://github.com/vaadin/vaadin-flow-components/issues/229\n    this._flushPendingRequests(size);\n  }\n\n  /** @private */\n  _pageSizeChanged(pageSize, oldPageSize) {\n    if (Math.floor(pageSize) !== pageSize || pageSize < 1) {\n      this.pageSize = oldPageSize;\n      throw new Error('`pageSize` value must be an integer > 0');\n    }\n    this.clearCache();\n  }\n\n  /** @private */\n  _dataProviderChanged(dataProvider, oldDataProvider) {\n    this._ensureItemsOrDataProvider(() => {\n      this.dataProvider = oldDataProvider;\n    });\n    this.clearCache();\n  }\n\n  /** @private */\n  _ensureItemsOrDataProvider(restoreOldValueCallback) {\n    if (this.items !== undefined && this.dataProvider !== undefined) {\n      restoreOldValueCallback();\n      throw new Error('Using `items` and `dataProvider` together is not supported');\n    } else if (this.dataProvider && !this.filteredItems) {\n      this.filteredItems = [];\n    }\n  }\n\n  /** @private */\n  _warnDataProviderValue(dataProvider, value) {\n    if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\n      const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n      if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\n        console.warn('Warning: unable to determine the label for the provided `value`. ' + 'Nothing to display in the text field. This usually happens when ' + 'setting an initial `value` before any items are returned from ' + 'the `dataProvider` callback. Consider setting `selectedItem` ' + 'instead of `value`');\n      }\n    }\n  }\n\n  /**\n   * This method cleans up the page callbacks which refers to the\n   * non-existing pages, i.e. which item indexes are greater than the\n   * changed size.\n   * This case is basically happens when:\n   * 1. Users scroll fast to the bottom and combo box generates the\n   * redundant page request/callback\n   * 2. Server side uses undefined size lazy loading and suddenly reaches\n   * the exact size which is on the range edge\n   * (for default page size = 50, it will be 100, 200, 300, ...).\n   * @param size the new size of items\n   * @private\n   */\n  _flushPendingRequests(size) {\n    if (this._pendingRequests) {\n      const lastPage = Math.ceil(size / this.pageSize);\n      Object.entries(this._pendingRequests).forEach(([page, callback]) => {\n        if (parseInt(page) >= lastPage) {\n          callback([], size);\n        }\n      });\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxItemMixin: () => (/* binding */ ComboBoxItemMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst ComboBoxItemMixin = superClass => class ComboBoxItemMixinClass extends superClass {\n  static get properties() {\n    return {\n      /**\n       * The index of the item.\n       */\n      index: {\n        type: Number\n      },\n      /**\n       * The item to render.\n       */\n      item: {\n        type: Object\n      },\n      /**\n       * The text to render in the item.\n       */\n      label: {\n        type: String\n      },\n      /**\n       * True when item is selected.\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * True when item is focused.\n       */\n      focused: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Custom function for rendering the item content.\n       */\n      renderer: {\n        type: Function\n      }\n    };\n  }\n  static get observers() {\n    return ['__rendererOrItemChanged(renderer, index, item.*, selected, focused)', '__updateLabel(label, renderer)'];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._owner = this.parentNode.owner;\n    const hostDir = this._owner.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the item.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this.renderer) {\n      return;\n    }\n    const model = {\n      index: this.index,\n      item: this.item,\n      focused: this.focused,\n      selected: this.selected\n    };\n    this.renderer(this, this._owner, model);\n  }\n\n  /** @private */\n  __rendererOrItemChanged(renderer, index, item) {\n    if (item === undefined || index === undefined) {\n      return;\n    }\n    if (this._oldRenderer !== renderer) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n    if (renderer) {\n      this._oldRenderer = renderer;\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __updateLabel(label, renderer) {\n    if (renderer) {\n      return;\n    }\n    this.textContent = label;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtaXRlbS1taXhpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvdmFhZGluLWNvbWJvLWJveC1pdGVtLW1peGluLmpzPzNkZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogQHBvbHltZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgQ29tYm9Cb3hJdGVtTWl4aW4gPSAoc3VwZXJDbGFzcykgPT5cbiAgY2xhc3MgQ29tYm9Cb3hJdGVtTWl4aW5DbGFzcyBleHRlbmRzIHN1cGVyQ2xhc3Mge1xuICAgIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgaW5kZXggb2YgdGhlIGl0ZW0uXG4gICAgICAgICAqL1xuICAgICAgICBpbmRleDoge1xuICAgICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGl0ZW0gdG8gcmVuZGVyLlxuICAgICAgICAgKi9cbiAgICAgICAgaXRlbToge1xuICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIHRleHQgdG8gcmVuZGVyIGluIHRoZSBpdGVtLlxuICAgICAgICAgKi9cbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRydWUgd2hlbiBpdGVtIGlzIHNlbGVjdGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZWN0ZWQ6IHtcbiAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRydWUgd2hlbiBpdGVtIGlzIGZvY3VzZWQuXG4gICAgICAgICAqL1xuICAgICAgICBmb2N1c2VkOiB7XG4gICAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDdXN0b20gZnVuY3Rpb24gZm9yIHJlbmRlcmluZyB0aGUgaXRlbSBjb250ZW50LlxuICAgICAgICAgKi9cbiAgICAgICAgcmVuZGVyZXI6IHtcbiAgICAgICAgICB0eXBlOiBGdW5jdGlvbixcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICByZXR1cm4gWydfX3JlbmRlcmVyT3JJdGVtQ2hhbmdlZChyZW5kZXJlciwgaW5kZXgsIGl0ZW0uKiwgc2VsZWN0ZWQsIGZvY3VzZWQpJywgJ19fdXBkYXRlTGFiZWwobGFiZWwsIHJlbmRlcmVyKSddO1xuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuXG4gICAgICB0aGlzLl9vd25lciA9IHRoaXMucGFyZW50Tm9kZS5vd25lcjtcblxuICAgICAgY29uc3QgaG9zdERpciA9IHRoaXMuX293bmVyLmdldEF0dHJpYnV0ZSgnZGlyJyk7XG4gICAgICBpZiAoaG9zdERpcikge1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnZGlyJywgaG9zdERpcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVxdWVzdHMgYW4gdXBkYXRlIGZvciB0aGUgY29udGVudCBvZiB0aGUgaXRlbS5cbiAgICAgKiBXaGlsZSBwZXJmb3JtaW5nIHRoZSB1cGRhdGUsIGl0IGludm9rZXMgdGhlIHJlbmRlcmVyIHBhc3NlZCBpbiB0aGUgYHJlbmRlcmVyYCBwcm9wZXJ0eS5cbiAgICAgKlxuICAgICAqIEl0IGlzIG5vdCBndWFyYW50ZWVkIHRoYXQgdGhlIHVwZGF0ZSBoYXBwZW5zIGltbWVkaWF0ZWx5IChzeW5jaHJvbm91c2x5KSBhZnRlciBpdCBpcyByZXF1ZXN0ZWQuXG4gICAgICovXG4gICAgcmVxdWVzdENvbnRlbnRVcGRhdGUoKSB7XG4gICAgICBpZiAoIXRoaXMucmVuZGVyZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBtb2RlbCA9IHtcbiAgICAgICAgaW5kZXg6IHRoaXMuaW5kZXgsXG4gICAgICAgIGl0ZW06IHRoaXMuaXRlbSxcbiAgICAgICAgZm9jdXNlZDogdGhpcy5mb2N1c2VkLFxuICAgICAgICBzZWxlY3RlZDogdGhpcy5zZWxlY3RlZCxcbiAgICAgIH07XG5cbiAgICAgIHRoaXMucmVuZGVyZXIodGhpcywgdGhpcy5fb3duZXIsIG1vZGVsKTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfX3JlbmRlcmVyT3JJdGVtQ2hhbmdlZChyZW5kZXJlciwgaW5kZXgsIGl0ZW0pIHtcbiAgICAgIGlmIChpdGVtID09PSB1bmRlZmluZWQgfHwgaW5kZXggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9vbGRSZW5kZXJlciAhPT0gcmVuZGVyZXIpIHtcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgLy8gV2hlbmV2ZXIgYSBMaXQtYmFzZWQgcmVuZGVyZXIgaXMgdXNlZCwgaXQgYXNzaWducyBhIExpdCBwYXJ0IHRvIHRoZSBub2RlIGl0IHdhcyByZW5kZXJlZCBpbnRvLlxuICAgICAgICAvLyBXaGVuIGNsZWFyaW5nIHRoZSByZW5kZXJlZCBjb250ZW50LCB0aGlzIHBhcnQgbmVlZHMgdG8gYmUgbWFudWFsbHkgZGlzcG9zZWQgb2YuXG4gICAgICAgIC8vIE90aGVyd2lzZSwgdXNpbmcgYSBMaXQtYmFzZWQgcmVuZGVyZXIgb24gdGhlIHNhbWUgbm9kZSB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBvciByZW5kZXIgbm90aGluZyBhZnRlcndhcmQuXG4gICAgICAgIGRlbGV0ZSB0aGlzLl8kbGl0UGFydCQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZW5kZXJlcikge1xuICAgICAgICB0aGlzLl9vbGRSZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLnJlcXVlc3RDb250ZW50VXBkYXRlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX191cGRhdGVMYWJlbChsYWJlbCwgcmVuZGVyZXIpIHtcbiAgICAgIGlmIChyZW5kZXJlcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMudGV4dENvbnRlbnQgPSBsYWJlbDtcbiAgICB9XG4gIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxItem: () => (/* binding */ ComboBoxItem)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/dir-mixin.js */ \"./node_modules/@vaadin/component-base/src/dir-mixin.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_item_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vaadin-combo-box-item-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n/**\n * An item element used by the `<vaadin-combo-box>` dropdown.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|--------------\n * `checkmark` | The graphical checkmark shown for a selected item\n * `content`   | The element that wraps the item content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `selected`   | Set when the item is selected\n * `focused`    | Set when the item is focused\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @mixes ComboBoxItemMixin\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @private\n */\nclass ComboBoxItem extends (0,_vaadin_combo_box_item_mixin_js__WEBPACK_IMPORTED_MODULE_3__.ComboBoxItemMixin)((0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__.ThemableMixin)((0,_vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_1__.DirMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.PolymerElement))) {\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  static get is() {\n    return 'vaadin-combo-box-item';\n  }\n}\ncustomElements.define(ComboBoxItem.is, ComboBoxItem);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtaXRlbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3NyYy92YWFkaW4tY29tYm8tYm94LWl0ZW0uanM/MjhhOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGh0bWwsIFBvbHltZXJFbGVtZW50IH0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9wb2x5bWVyLWVsZW1lbnQuanMnO1xuaW1wb3J0IHsgRGlyTWl4aW4gfSBmcm9tICdAdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9kaXItbWl4aW4uanMnO1xuaW1wb3J0IHsgVGhlbWFibGVNaXhpbiB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5pbXBvcnQgeyBDb21ib0JveEl0ZW1NaXhpbiB9IGZyb20gJy4vdmFhZGluLWNvbWJvLWJveC1pdGVtLW1peGluLmpzJztcblxuLyoqXG4gKiBBbiBpdGVtIGVsZW1lbnQgdXNlZCBieSB0aGUgYDx2YWFkaW4tY29tYm8tYm94PmAgZHJvcGRvd24uXG4gKlxuICogIyMjIFN0eWxpbmdcbiAqXG4gKiBUaGUgZm9sbG93aW5nIHNoYWRvdyBET00gcGFydHMgYXJlIGF2YWlsYWJsZSBmb3Igc3R5bGluZzpcbiAqXG4gKiBQYXJ0IG5hbWUgICB8IERlc2NyaXB0aW9uXG4gKiAtLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS1cbiAqIGBjaGVja21hcmtgIHwgVGhlIGdyYXBoaWNhbCBjaGVja21hcmsgc2hvd24gZm9yIGEgc2VsZWN0ZWQgaXRlbVxuICogYGNvbnRlbnRgICAgfCBUaGUgZWxlbWVudCB0aGF0IHdyYXBzIHRoZSBpdGVtIGNvbnRlbnRcbiAqXG4gKiBUaGUgZm9sbG93aW5nIHN0YXRlIGF0dHJpYnV0ZXMgYXJlIGV4cG9zZWQgZm9yIHN0eWxpbmc6XG4gKlxuICogQXR0cmlidXRlICAgIHwgRGVzY3JpcHRpb25cbiAqIC0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLVxuICogYHNlbGVjdGVkYCAgIHwgU2V0IHdoZW4gdGhlIGl0ZW0gaXMgc2VsZWN0ZWRcbiAqIGBmb2N1c2VkYCAgICB8IFNldCB3aGVuIHRoZSBpdGVtIGlzIGZvY3VzZWRcbiAqXG4gKiBTZWUgW1N0eWxpbmcgQ29tcG9uZW50c10oaHR0cHM6Ly92YWFkaW4uY29tL2RvY3MvbGF0ZXN0L3N0eWxpbmcvY3VzdG9tLXRoZW1lL3N0eWxpbmctY29tcG9uZW50cykgZG9jdW1lbnRhdGlvbi5cbiAqXG4gKiBAbWl4ZXMgQ29tYm9Cb3hJdGVtTWl4aW5cbiAqIEBtaXhlcyBUaGVtYWJsZU1peGluXG4gKiBAbWl4ZXMgRGlyTWl4aW5cbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21ib0JveEl0ZW0gZXh0ZW5kcyBDb21ib0JveEl0ZW1NaXhpbihUaGVtYWJsZU1peGluKERpck1peGluKFBvbHltZXJFbGVtZW50KSkpIHtcbiAgc3RhdGljIGdldCB0ZW1wbGF0ZSgpIHtcbiAgICByZXR1cm4gaHRtbGBcbiAgICAgIDxzdHlsZT5cbiAgICAgICAgOmhvc3Qge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgOmhvc3QoW2hpZGRlbl0pIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgICA8L3N0eWxlPlxuICAgICAgPHNwYW4gcGFydD1cImNoZWNrbWFya1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj5cbiAgICAgIDxkaXYgcGFydD1cImNvbnRlbnRcIj5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgICAgPC9kaXY+XG4gICAgYDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgaXMoKSB7XG4gICAgcmV0dXJuICd2YWFkaW4tY29tYm8tYm94LWl0ZW0nO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZShDb21ib0JveEl0ZW0uaXMsIENvbWJvQm94SXRlbSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxLight: () => (/* binding */ ComboBoxLight)\n/* harmony export */ });\n/* harmony import */ var _vaadin_combo_box_item_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-item.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js\");\n/* harmony import */ var _vaadin_combo_box_overlay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-combo-box-overlay.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js\");\n/* harmony import */ var _vaadin_combo_box_scroller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vaadin-combo-box-scroller.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/case-map.js */ \"./node_modules/@polymer/polymer/lib/utils/case-map.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/utils/render-status.js */ \"./node_modules/@polymer/polymer/lib/utils/render-status.js\");\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/field-base/src/validate-mixin.js */ \"./node_modules/@vaadin/field-base/src/validate-mixin.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_data_provider_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vaadin-combo-box-data-provider-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_mixin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vaadin-combo-box-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * `<vaadin-combo-box-light>` is a customizable version of the `<vaadin-combo-box>` providing\n * only the dropdown functionality and leaving the input field definition to the user.\n *\n * The element has the same API as `<vaadin-combo-box>`.\n *\n * To create a custom input field, you need to add a child element which has a two-way\n * data-bindable property representing the input value. The property name is expected\n * to be `value` by default. For example, you can use `<vaadin-text-field>` element:\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <vaadin-text-field></vaadin-text-field>\n * </vaadin-combo-box-light>\n * ```\n *\n * If you are using custom input field that has other property for value,\n * set `class=\"input\"` to enable corresponding logic, and use `attr-for-value`\n * attribute to specify which property to use:\n *\n * ```html\n * <vaadin-combo-box-light attr-for-value=\"input-value\">\n *   <custom-input class=\"input\"></custom-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * You can also pass custom toggle and clear buttons with corresponding classes:\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <custom-input class=\"input\" attr-for-value=\"input-value\">\n *     <button slot=\"suffix\" class=\"clear-button\">Clear</button>\n *     <button slot=\"suffix\" class=\"toggle-button\">Toggle</button>\n *   </custom-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} custom-value-set - Fired when the user sets a custom value.\n * @fires {CustomEvent} filter-changed - Fired when the `filter` property changes.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} selected-item-changed - Fired when the `selectedItem` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes ComboBoxDataProviderMixin\n * @mixes ComboBoxMixin\n * @mixes ThemableMixin\n * @mixes ValidateMixin\n */\nclass ComboBoxLight extends (0,_vaadin_combo_box_data_provider_mixin_js__WEBPACK_IMPORTED_MODULE_8__.ComboBoxDataProviderMixin)((0,_vaadin_combo_box_mixin_js__WEBPACK_IMPORTED_MODULE_9__.ComboBoxMixin)((0,_vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_6__.ValidateMixin)((0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_7__.ThemableMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__.PolymerElement)))) {\n  static get is() {\n    return 'vaadin-combo-box-light';\n  }\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__.html`\n      <style>\n        :host([opened]) {\n          pointer-events: auto;\n        }\n      </style>\n\n      <slot></slot>\n\n      <vaadin-combo-box-overlay\n        id=\"overlay\"\n        opened=\"[[_overlayOpened]]\"\n        loading$=\"[[loading]]\"\n        theme$=\"[[_theme]]\"\n        position-target=\"[[inputElement]]\"\n        no-vertical-overlap\n        restore-focus-node=\"[[inputElement]]\"\n      ></vaadin-combo-box-overlay>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * Name of the two-way data-bindable property representing the\n       * value of the custom input field.\n       * @attr {string} attr-for-value\n       * @type {string}\n       */\n      attrForValue: {\n        type: String,\n        value: 'value'\n      }\n    };\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.querySelector('.clear-button');\n  }\n\n  /**\n   * Override this getter from `InputMixin` to allow using\n   * an arbitrary property name instead of `value`\n   * for accessing the input element's value.\n   *\n   * @protected\n   * @override\n   * @return {string}\n   */\n  get _inputElementValueProperty() {\n    return (0,_polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__.dashToCamelCase)(this.attrForValue);\n  }\n\n  /**\n   * @protected\n   * @override\n   * @return {HTMLInputElement | undefined}\n   */\n  get _nativeInput() {\n    const input = this.inputElement;\n    if (input) {\n      // Support `<input class=\"input\">`\n      if (input instanceof HTMLInputElement) {\n        return input;\n      }\n\n      // Support `<input>` in light DOM (e.g. `vaadin-text-field`)\n      const slottedInput = input.querySelector('input');\n      if (slottedInput) {\n        return slottedInput;\n      }\n      if (input.shadowRoot) {\n        // Support `<input>` in Shadow DOM (e.g. `mwc-textfield`)\n        const shadowInput = input.shadowRoot.querySelector('input');\n        if (shadowInput) {\n          return shadowInput;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._toggleElement = this.querySelector('.toggle-button');\n\n    // Wait until the slotted input DOM is ready\n    (0,_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__.afterNextRender)(this, () => {\n      this._setInputElement(this.querySelector('vaadin-text-field,.input'));\n      this._revertInputValue();\n    });\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any).\n   * @return {boolean}\n   */\n  checkValidity() {\n    if (this.inputElement.validate) {\n      return this.inputElement.validate();\n    }\n    return super.checkValidity();\n  }\n\n  /** @protected */\n  _isClearButton(event) {\n    return super._isClearButton(event) || event.type === 'input' && !event.isTrusted ||\n    // Fake input event dispatched by clear button\n    event.composedPath()[0].getAttribute('part') === 'clear-button';\n  }\n\n  /**\n   * @param {!Event} event\n   * @protected\n   */\n  _onChange(event) {\n    super._onChange(event);\n    if (this._isClearButton(event)) {\n      this._onClearAction();\n    }\n  }\n}\ncustomElements.define(ComboBoxLight.is, ComboBoxLight);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxMixin: () => (/* binding */ ComboBoxMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/controller-mixin.js */ \"./node_modules/@vaadin/component-base/src/controller-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_disabled_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/component-base/src/disabled-mixin.js */ \"./node_modules/@vaadin/component-base/src/disabled-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/component-base/src/focus-utils.js */ \"./node_modules/@vaadin/component-base/src/focus-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_keyboard_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/component-base/src/keyboard-mixin.js */ \"./node_modules/@vaadin/component-base/src/keyboard-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_overlay_class_mixin_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @vaadin/component-base/src/overlay-class-mixin.js */ \"./node_modules/@vaadin/component-base/src/overlay-class-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/component-base/src/templates.js */ \"./node_modules/@vaadin/component-base/src/templates.js\");\n/* harmony import */ var _vaadin_field_base_src_input_mixin_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/field-base/src/input-mixin.js */ \"./node_modules/@vaadin/field-base/src/input-mixin.js\");\n/* harmony import */ var _vaadin_field_base_src_virtual_keyboard_controller_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @vaadin/field-base/src/virtual-keyboard-controller.js */ \"./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js\");\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Checks if the value is supported as an item value in this control.\n *\n * @param {unknown} value\n * @return {boolean}\n */\nfunction isValidValue(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * Returns the index of the first item that satisfies the provided testing function\n * ignoring placeholder items.\n *\n * @param {Array<ComboBoxItem | string>} items\n * @param {Function} callback\n * @return {number}\n */\nfunction findItemIndex(items, callback) {\n  return items.findIndex(item => {\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_9__.ComboBoxPlaceholder) {\n      return false;\n    }\n    return callback(item);\n  });\n}\n\n/**\n * @polymerMixin\n * @mixes ControllerMixin\n * @mixes DisabledMixin\n * @mixes InputMixin\n * @mixes KeyboardMixin\n * @mixes OverlayClassMixin\n * @param {function(new:HTMLElement)} subclass\n */\nconst ComboBoxMixin = subclass => class ComboBoxMixinClass extends (0,_vaadin_component_base_src_overlay_class_mixin_js__WEBPACK_IMPORTED_MODULE_5__.OverlayClassMixin)((0,_vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_1__.ControllerMixin)((0,_vaadin_component_base_src_keyboard_mixin_js__WEBPACK_IMPORTED_MODULE_4__.KeyboardMixin)((0,_vaadin_field_base_src_input_mixin_js__WEBPACK_IMPORTED_MODULE_7__.InputMixin)((0,_vaadin_component_base_src_disabled_mixin_js__WEBPACK_IMPORTED_MODULE_2__.DisabledMixin)(subclass))))) {\n  static get properties() {\n    return {\n      /**\n       * True if the dropdown is open, false otherwise.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_openedChanged'\n      },\n      /**\n       * Set true to prevent the overlay from opening automatically.\n       * @attr {boolean} auto-open-disabled\n       */\n      autoOpenDisabled: {\n        type: Boolean\n      },\n      /**\n       * When present, it specifies that the field is read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Custom function for rendering the content of every item.\n       * Receives three arguments:\n       *\n       * - `root` The `<vaadin-combo-box-item>` internal container DOM element.\n       * - `comboBox` The reference to the `<vaadin-combo-box>` element.\n       * - `model` The object with the properties related with the rendered\n       *   item, contains:\n       *   - `model.index` The index of the rendered item.\n       *   - `model.item` The item.\n       * @type {ComboBoxRenderer | undefined}\n       */\n      renderer: Function,\n      /**\n       * A full set of items to filter the visible options from.\n       * The items can be of either `String` or `Object` type.\n       * @type {!Array<!ComboBoxItem | string> | undefined}\n       */\n      items: {\n        type: Array,\n        observer: '_itemsChanged'\n      },\n      /**\n       * If `true`, the user can input a value that is not present in the items list.\n       * `value` property will be set to the input value in this case.\n       * Also, when `value` is set programmatically, the input value will be set\n       * to reflect that value.\n       * @attr {boolean} allow-custom-value\n       * @type {boolean}\n       */\n      allowCustomValue: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * A subset of items, filtered based on the user input. Filtered items\n       * can be assigned directly to omit the internal filtering functionality.\n       * The items can be of either `String` or `Object` type.\n       * @type {!Array<!ComboBoxItem | string> | undefined}\n       */\n      filteredItems: {\n        type: Array,\n        observer: '_filteredItemsChanged'\n      },\n      /**\n       * Used to detect user value changes and fire `change` events.\n       * @private\n       */\n      _lastCommittedValue: String,\n      /**\n       * When set to `true`, \"loading\" attribute is added to host and the overlay element.\n       * @type {boolean}\n       */\n      loading: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * @type {number}\n       * @protected\n       */\n      _focusedIndex: {\n        type: Number,\n        observer: '_focusedIndexChanged',\n        value: -1\n      },\n      /**\n       * Filtering string the user has typed into the input field.\n       * @type {string}\n       */\n      filter: {\n        type: String,\n        value: '',\n        notify: true\n      },\n      /**\n       * The selected item from the `items` array.\n       * @type {ComboBoxItem | string | undefined}\n       */\n      selectedItem: {\n        type: Object,\n        notify: true\n      },\n      /**\n       * Path for label of the item. If `items` is an array of objects, the\n       * `itemLabelPath` is used to fetch the displayed string label for each\n       * item.\n       *\n       * The item label is also used for matching items when processing user\n       * input, i.e., for filtering and selecting items.\n       * @attr {string} item-label-path\n       * @type {string}\n       */\n      itemLabelPath: {\n        type: String,\n        value: 'label',\n        observer: '_itemLabelPathChanged'\n      },\n      /**\n       * Path for the value of the item. If `items` is an array of objects, the\n       * `itemValuePath:` is used to fetch the string value for the selected\n       * item.\n       *\n       * The item value is used in the `value` property of the combo box,\n       * to provide the form value.\n       * @attr {string} item-value-path\n       * @type {string}\n       */\n      itemValuePath: {\n        type: String,\n        value: 'value'\n      },\n      /**\n       * Path for the id of the item. If `items` is an array of objects,\n       * the `itemIdPath` is used to compare and identify the same item\n       * in `selectedItem` and `filteredItems` (items given by the\n       * `dataProvider` callback).\n       * @attr {string} item-id-path\n       */\n      itemIdPath: String,\n      /**\n       * @type {!HTMLElement | undefined}\n       * @protected\n       */\n      _toggleElement: {\n        type: Object,\n        observer: '_toggleElementChanged'\n      },\n      /** @private */\n      _closeOnBlurIsPrevented: Boolean,\n      /** @private */\n      _scroller: Object,\n      /** @private */\n      _overlayOpened: {\n        type: Boolean,\n        observer: '_overlayOpenedChanged'\n      }\n    };\n  }\n  static get observers() {\n    return ['_selectedItemChanged(selectedItem, itemValuePath, itemLabelPath)', '_openedOrItemsChanged(opened, filteredItems, loading)', '_updateScroller(_scroller, filteredItems, opened, loading, selectedItem, itemIdPath, _focusedIndex, renderer, theme)'];\n  }\n  constructor() {\n    super();\n    this._boundOnFocusout = this._onFocusout.bind(this);\n    this._boundOverlaySelectedItemChanged = this._overlaySelectedItemChanged.bind(this);\n    this._boundOnClearButtonMouseDown = this.__onClearButtonMouseDown.bind(this);\n    this._boundOnClick = this._onClick.bind(this);\n    this._boundOnOverlayTouchAction = this._onOverlayTouchAction.bind(this);\n    this._boundOnTouchend = this._onTouchend.bind(this);\n  }\n\n  /**\n   * Tag name prefix used by scroller and items.\n   * @protected\n   * @return {string}\n   */\n  get _tagNamePrefix() {\n    return 'vaadin-combo-box';\n  }\n\n  /**\n   * Get a reference to the native `<input>` element.\n   * Override to provide a custom input.\n   * @protected\n   * @return {HTMLInputElement | undefined}\n   */\n  get _nativeInput() {\n    return this.inputElement;\n  }\n\n  /**\n   * Override method inherited from `InputMixin`\n   * to customize the input element.\n   * @protected\n   * @override\n   */\n  _inputElementChanged(inputElement) {\n    super._inputElementChanged(inputElement);\n    const input = this._nativeInput;\n    if (input) {\n      input.autocomplete = 'off';\n      input.autocapitalize = 'off';\n      input.setAttribute('role', 'combobox');\n      input.setAttribute('aria-autocomplete', 'list');\n      input.setAttribute('aria-expanded', !!this.opened);\n\n      // Disable the macOS Safari spell check auto corrections.\n      input.setAttribute('spellcheck', 'false');\n\n      // Disable iOS autocorrect suggestions.\n      input.setAttribute('autocorrect', 'off');\n      this._revertInputValueToValue();\n      if (this.clearElement) {\n        this.clearElement.addEventListener('mousedown', this._boundOnClearButtonMouseDown);\n      }\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._initOverlay();\n    this._initScroller();\n    this.addEventListener('focusout', this._boundOnFocusout);\n    this._lastCommittedValue = this.value;\n    this.addEventListener('click', this._boundOnClick);\n    this.addEventListener('touchend', this._boundOnTouchend);\n    const bringToFrontListener = () => {\n      requestAnimationFrame(() => {\n        this._overlayElement.bringToFront();\n      });\n    };\n    this.addEventListener('mousedown', bringToFrontListener);\n    this.addEventListener('touchstart', bringToFrontListener);\n    (0,_vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_6__.processTemplates)(this);\n    this.addController(new _vaadin_field_base_src_virtual_keyboard_controller_js__WEBPACK_IMPORTED_MODULE_8__.VirtualKeyboardController(this));\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // Close the overlay on detach\n    this.close();\n  }\n\n  /**\n   * Requests an update for the content of items.\n   * While performing the update, it invokes the renderer (passed in the `renderer` property) once an item.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this._scroller) {\n      return;\n    }\n    this._scroller.requestContentUpdate();\n    this._getItemElements().forEach(item => {\n      item.requestContentUpdate();\n    });\n  }\n\n  /**\n   * Opens the dropdown list.\n   */\n  open() {\n    // Prevent _open() being called when input is disabled or read-only\n    if (!this.disabled && !this.readonly) {\n      this.opened = true;\n    }\n  }\n\n  /**\n   * Closes the dropdown list.\n   */\n  close() {\n    this.opened = false;\n  }\n\n  /**\n   * Override Polymer lifecycle callback to handle `filter` property change after\n   * the observer for `opened` property is triggered. This is needed when opening\n   * combo-box on user input to ensure the focused index is set correctly.\n   *\n   * @param {!Object} currentProps Current accessor values\n   * @param {?Object} changedProps Properties changed since the last call\n   * @param {?Object} oldProps Previous values for each changed property\n   * @protected\n   * @override\n   */\n  _propertiesChanged(currentProps, changedProps, oldProps) {\n    super._propertiesChanged(currentProps, changedProps, oldProps);\n    if (changedProps.filter !== undefined) {\n      this._filterChanged(changedProps.filter);\n    }\n  }\n\n  /** @private */\n  _initOverlay() {\n    const overlay = this.$.overlay;\n\n    // Store instance for detecting \"dir\" attribute on opening\n    overlay._comboBox = this;\n    overlay.addEventListener('touchend', this._boundOnOverlayTouchAction);\n    overlay.addEventListener('touchmove', this._boundOnOverlayTouchAction);\n\n    // Prevent blurring the input when clicking inside the overlay\n    overlay.addEventListener('mousedown', e => e.preventDefault());\n\n    // Manual two-way binding for the overlay \"opened\" property\n    overlay.addEventListener('opened-changed', e => {\n      this._overlayOpened = e.detail.value;\n    });\n    this._overlayElement = overlay;\n  }\n\n  /**\n   * Create and initialize the scroller element.\n   * Override to provide custom host reference.\n   *\n   * @protected\n   */\n  _initScroller(host) {\n    const scrollerTag = `${this._tagNamePrefix}-scroller`;\n    const overlay = this._overlayElement;\n    overlay.renderer = root => {\n      if (!root.firstChild) {\n        root.appendChild(document.createElement(scrollerTag));\n      }\n    };\n\n    // Ensure the scroller is rendered\n    overlay.requestContentUpdate();\n    const scroller = overlay.querySelector(scrollerTag);\n    scroller.owner = host || this;\n    scroller.getItemLabel = this._getItemLabel.bind(this);\n    scroller.addEventListener('selection-changed', this._boundOverlaySelectedItemChanged);\n\n    // Trigger the observer to set properties\n    this._scroller = scroller;\n  }\n\n  /** @private */\n  // eslint-disable-next-line max-params\n  _updateScroller(scroller, items, opened, loading, selectedItem, itemIdPath, focusedIndex, renderer, theme) {\n    if (scroller) {\n      if (opened) {\n        scroller.style.maxHeight = getComputedStyle(this).getPropertyValue(`--${this._tagNamePrefix}-overlay-max-height`) || '65vh';\n      }\n      scroller.setProperties({\n        items: opened ? items : [],\n        opened,\n        loading,\n        selectedItem,\n        itemIdPath,\n        focusedIndex,\n        renderer,\n        theme\n      });\n    }\n  }\n\n  /** @private */\n  _openedOrItemsChanged(opened, items, loading) {\n    // Close the overlay if there are no items to display.\n    // See https://github.com/vaadin/vaadin-combo-box/pull/964\n    this._overlayOpened = !!(opened && (loading || items && items.length));\n  }\n\n  /** @private */\n  _overlayOpenedChanged(opened, wasOpened) {\n    if (opened) {\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-opened', {\n        bubbles: true,\n        composed: true\n      }));\n      this._onOpened();\n    } else if (wasOpened && this.filteredItems && this.filteredItems.length) {\n      this.close();\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-closed', {\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n\n  /** @private */\n  _focusedIndexChanged(index, oldIndex) {\n    if (oldIndex === undefined) {\n      return;\n    }\n    this._updateActiveDescendant(index);\n  }\n\n  /** @protected */\n  _isInputFocused() {\n    return this.inputElement && (0,_vaadin_component_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_3__.isElementFocused)(this.inputElement);\n  }\n\n  /** @private */\n  _updateActiveDescendant(index) {\n    const input = this._nativeInput;\n    if (!input) {\n      return;\n    }\n    const item = this._getItemElements().find(el => el.index === index);\n    if (item) {\n      input.setAttribute('aria-activedescendant', item.id);\n    } else {\n      input.removeAttribute('aria-activedescendant');\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    // Prevent _close() being called when opened is set to its default value (false).\n    if (wasOpened === undefined) {\n      return;\n    }\n    if (opened) {\n      this._openedWithFocusRing = this.hasAttribute('focus-ring');\n      // For touch devices, we don't want to popup virtual keyboard\n      // unless input element is explicitly focused by the user.\n      if (!this._isInputFocused() && !_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_0__.isTouch) {\n        this.focus();\n      }\n      this._overlayElement.restoreFocusOnClose = true;\n    } else {\n      this._onClosed();\n      if (this._openedWithFocusRing && this._isInputFocused()) {\n        this.setAttribute('focus-ring', '');\n      }\n    }\n    const input = this._nativeInput;\n    if (input) {\n      input.setAttribute('aria-expanded', !!opened);\n      if (opened) {\n        input.setAttribute('aria-controls', this._scroller.id);\n      } else {\n        input.removeAttribute('aria-controls');\n      }\n    }\n  }\n\n  /** @private */\n  _onOverlayTouchAction() {\n    // On touch devices, blur the input on touch start inside the overlay, in order to hide\n    // the virtual keyboard. But don't close the overlay on this blur.\n    this._closeOnBlurIsPrevented = true;\n    this.inputElement.blur();\n    this._closeOnBlurIsPrevented = false;\n  }\n\n  /** @protected */\n  _isClearButton(event) {\n    return event.composedPath()[0] === this.clearElement;\n  }\n\n  /** @private */\n  __onClearButtonMouseDown(event) {\n    event.preventDefault(); // Prevent native focusout event\n    this.inputElement.focus();\n  }\n\n  /**\n   * @param {Event} event\n   * @protected\n   */\n  _onClearButtonClick(event) {\n    event.preventDefault();\n    this._onClearAction();\n\n    // De-select dropdown item\n    if (this.opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @private\n   */\n  _onToggleButtonClick(event) {\n    // Prevent parent components such as `vaadin-grid`\n    // from handling the click event after it bubbles.\n    event.preventDefault();\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @protected\n   */\n  _onHostClick(event) {\n    if (!this.autoOpenDisabled) {\n      event.preventDefault();\n      this.open();\n    }\n  }\n\n  /** @private */\n  _onClick(event) {\n    if (this._isClearButton(event)) {\n      this._onClearButtonClick(event);\n    } else if (event.composedPath().includes(this._toggleElement)) {\n      this._onToggleButtonClick(event);\n    } else {\n      this._onHostClick(event);\n    }\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   *\n   * @param {KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onKeyDown(e) {\n    super._onKeyDown(e);\n    if (e.key === 'Tab') {\n      this._overlayElement.restoreFocusOnClose = false;\n    } else if (e.key === 'ArrowDown') {\n      this._onArrowDown();\n\n      // Prevent caret from moving\n      e.preventDefault();\n    } else if (e.key === 'ArrowUp') {\n      this._onArrowUp();\n\n      // Prevent caret from moving\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _getItemLabel(item) {\n    let label = item && this.itemLabelPath ? this.get(this.itemLabelPath, item) : undefined;\n    if (label === undefined || label === null) {\n      label = item ? item.toString() : '';\n    }\n    return label;\n  }\n\n  /** @private */\n  _getItemValue(item) {\n    let value = item && this.itemValuePath ? this.get(this.itemValuePath, item) : undefined;\n    if (value === undefined) {\n      value = item ? item.toString() : '';\n    }\n    return value;\n  }\n\n  /** @private */\n  _onArrowDown() {\n    if (this.opened) {\n      const items = this.filteredItems;\n      if (items) {\n        this._focusedIndex = Math.min(items.length - 1, this._focusedIndex + 1);\n        this._prefillFocusedItemLabel();\n      }\n    } else {\n      this.open();\n    }\n  }\n\n  /** @private */\n  _onArrowUp() {\n    if (this.opened) {\n      if (this._focusedIndex > -1) {\n        this._focusedIndex = Math.max(0, this._focusedIndex - 1);\n      } else {\n        const items = this.filteredItems;\n        if (items) {\n          this._focusedIndex = items.length - 1;\n        }\n      }\n      this._prefillFocusedItemLabel();\n    } else {\n      this.open();\n    }\n  }\n\n  /** @private */\n  _prefillFocusedItemLabel() {\n    if (this._focusedIndex > -1) {\n      const focusedItem = this.filteredItems[this._focusedIndex];\n      this._inputElementValue = this._getItemLabel(focusedItem);\n      this._markAllSelectionRange();\n    }\n  }\n\n  /** @private */\n  _setSelectionRange(start, end) {\n    // Setting selection range focuses and/or moves the caret in some browsers,\n    // and there's no need to modify the selection range if the input isn't focused anyway.\n    // This affects Safari. When the overlay is open, and then hitting tab, browser should focus\n    // the next focusable element instead of the combo-box itself.\n    if (this._isInputFocused() && this.inputElement.setSelectionRange) {\n      this.inputElement.setSelectionRange(start, end);\n    }\n  }\n\n  /** @private */\n  _markAllSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      this._setSelectionRange(0, this._inputElementValue.length);\n    }\n  }\n\n  /** @private */\n  _clearSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      const pos = this._inputElementValue ? this._inputElementValue.length : 0;\n      this._setSelectionRange(pos, pos);\n    }\n  }\n\n  /** @private */\n  _closeOrCommit() {\n    if (!this.opened && !this.loading) {\n      this._commitValue();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   *\n   * @param {KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onEnter(e) {\n    // Do not commit value when custom values are disallowed and input value is not a valid option\n    // also stop propagation of the event, otherwise the user could submit a form while the input\n    // still contains an invalid value\n    const hasInvalidOption = this._focusedIndex < 0 && this._inputElementValue !== '' && this._getItemLabel(this.selectedItem) !== this._inputElementValue;\n    if (!this.allowCustomValue && hasInvalidOption) {\n      // Do not submit the surrounding form.\n      e.preventDefault();\n      // Do not trigger global listeners\n      e.stopPropagation();\n      return;\n    }\n\n    // Stop propagation of the enter event only if the dropdown is opened, this\n    // \"consumes\" the enter event for the action of closing the dropdown\n    if (this.opened) {\n      // Do not submit the surrounding form.\n      e.preventDefault();\n      // Do not trigger global listeners\n      e.stopPropagation();\n    }\n    this._closeOrCommit();\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   * Do not call `super` in order to override clear\n   * button logic defined in `InputControlMixin`.\n   *\n   * @param {!KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onEscape(e) {\n    if (this.autoOpenDisabled) {\n      // Auto-open is disabled\n      if (this.opened || this.value !== this._inputElementValue && this._inputElementValue.length > 0) {\n        // The overlay is open or\n        // The input value has changed but the change hasn't been committed, so cancel it.\n        e.stopPropagation();\n        this._focusedIndex = -1;\n        this.cancel();\n      } else if (this.clearButtonVisible && !this.opened && !!this.value) {\n        e.stopPropagation();\n        // The clear button is visible and the overlay is closed, so clear the value.\n        this._onClearAction();\n      }\n    } else if (this.opened) {\n      // Auto-open is enabled\n      // The overlay is open\n      e.stopPropagation();\n      if (this._focusedIndex > -1) {\n        // An item is focused, revert the input to the filtered value\n        this._focusedIndex = -1;\n        this._revertInputValue();\n      } else {\n        // No item is focused, cancel the change and close the overlay\n        this.cancel();\n      }\n    } else if (this.clearButtonVisible && !!this.value) {\n      e.stopPropagation();\n      // The clear button is visible and the overlay is closed, so clear the value.\n      this._onClearAction();\n    }\n  }\n\n  /** @private */\n  _toggleElementChanged(toggleElement) {\n    if (toggleElement) {\n      // Don't blur the input on toggle mousedown\n      toggleElement.addEventListener('mousedown', e => e.preventDefault());\n      // Unfocus previously focused element if focus is not inside combo box (on touch devices)\n      toggleElement.addEventListener('click', () => {\n        if (_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_0__.isTouch && !this._isInputFocused()) {\n          document.activeElement.blur();\n        }\n      });\n    }\n  }\n\n  /**\n   * Clears the current value.\n   * @protected\n   */\n  _onClearAction() {\n    this.selectedItem = null;\n    if (this.allowCustomValue) {\n      this.value = '';\n    }\n    this._detectAndDispatchChange();\n  }\n\n  /**\n   * Reverts back to original value.\n   */\n  cancel() {\n    this._revertInputValueToValue();\n    // In the next _detectAndDispatchChange() call, the change detection should not pass\n    this._lastCommittedValue = this.value;\n    this._closeOrCommit();\n  }\n\n  /** @private */\n  _onOpened() {\n    // Defer scroll position adjustment to improve performance.\n    requestAnimationFrame(() => {\n      this._scrollIntoView(this._focusedIndex);\n\n      // Set attribute after the items are rendered when overlay is opened for the first time.\n      this._updateActiveDescendant(this._focusedIndex);\n    });\n\n    // _detectAndDispatchChange() should not consider value changes done before opening\n    this._lastCommittedValue = this.value;\n  }\n\n  /** @private */\n  _onClosed() {\n    if (!this.loading || this.allowCustomValue) {\n      this._commitValue();\n    }\n  }\n\n  /** @private */\n  _commitValue() {\n    if (this._focusedIndex > -1) {\n      const focusedItem = this.filteredItems[this._focusedIndex];\n      if (this.selectedItem !== focusedItem) {\n        this.selectedItem = focusedItem;\n      }\n      // Make sure input field is updated in case value doesn't change (i.e. FOO -> foo)\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n    } else if (this._inputElementValue === '' || this._inputElementValue === undefined) {\n      this.selectedItem = null;\n      if (this.allowCustomValue) {\n        this.value = '';\n      }\n    } else {\n      // Try to find an item which label matches the input value.\n      const items = [...(this.filteredItems || []), this.selectedItem];\n      const itemMatchingInputValue = items[this.__getItemIndexByLabel(items, this._inputElementValue)];\n      if (this.allowCustomValue &&\n      // To prevent a repetitive input value being saved after pressing ESC and Tab.\n      !itemMatchingInputValue) {\n        const customValue = this._inputElementValue;\n\n        // Store reference to the last custom value for checking it on focusout.\n        this._lastCustomValue = customValue;\n\n        // An item matching by label was not found, but custom values are allowed.\n        // Dispatch a custom-value-set event with the input value.\n        const e = new CustomEvent('custom-value-set', {\n          detail: customValue,\n          composed: true,\n          cancelable: true,\n          bubbles: true\n        });\n        this.dispatchEvent(e);\n        if (!e.defaultPrevented) {\n          this.value = customValue;\n        }\n      } else if (!this.allowCustomValue && !this.opened && itemMatchingInputValue) {\n        // An item matching by label was found, select it.\n        this.value = this._getItemValue(itemMatchingInputValue);\n      } else {\n        // Revert the input value\n        this._inputElementValue = this.selectedItem ? this._getItemLabel(this.selectedItem) : this.value || '';\n      }\n    }\n    this._detectAndDispatchChange();\n    this._clearSelectionRange();\n    this.filter = '';\n  }\n\n  /**\n   * Override an event listener from `InputMixin`.\n   * @param {!Event} event\n   * @protected\n   * @override\n   */\n  _onInput(event) {\n    const filter = this._inputElementValue;\n\n    // When opening dropdown on user input, both `opened` and `filter` properties are set.\n    // Perform a batched property update instead of relying on sync property observers.\n    // This is necessary to avoid an extra data-provider request for loading first page.\n    const props = {};\n    if (this.filter === filter) {\n      // Filter and input value might get out of sync, while keyboard navigating for example.\n      // Afterwards, input value might be changed to the same value as used in filtering.\n      // In situation like these, we need to make sure all the filter changes handlers are run.\n      this._filterChanged(this.filter);\n    } else {\n      props.filter = filter;\n    }\n    if (!this.opened && !this._isClearButton(event) && !this.autoOpenDisabled) {\n      props.opened = true;\n    }\n    this.setProperties(props);\n  }\n\n  /**\n   * Override an event listener from `InputMixin`.\n   * @param {!Event} event\n   * @protected\n   * @override\n   */\n  _onChange(event) {\n    // Suppress the native change event fired on the native input.\n    // We use `_detectAndDispatchChange` to fire a custom event.\n    event.stopPropagation();\n  }\n\n  /** @private */\n  _itemLabelPathChanged(itemLabelPath) {\n    if (typeof itemLabelPath !== 'string') {\n      console.error('You should set itemLabelPath to a valid string');\n    }\n  }\n\n  /** @private */\n  _filterChanged(filter) {\n    // Scroll to the top of the list whenever the filter changes.\n    this._scrollIntoView(0);\n    this._focusedIndex = -1;\n    if (this.items) {\n      this.filteredItems = this._filterItems(this.items, filter);\n    } else {\n      // With certain use cases (e. g., external filtering), `items` are\n      // undefined. Filtering is unnecessary per se, but the filteredItems\n      // observer should still be invoked to update focused item.\n      this._filteredItemsChanged(this.filteredItems);\n    }\n  }\n\n  /** @protected */\n  _revertInputValue() {\n    if (this.filter !== '') {\n      this._inputElementValue = this.filter;\n    } else {\n      this._revertInputValueToValue();\n    }\n    this._clearSelectionRange();\n  }\n\n  /** @private */\n  _revertInputValueToValue() {\n    if (this.allowCustomValue && !this.selectedItem) {\n      this._inputElementValue = this.value;\n    } else {\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n    }\n  }\n\n  /** @private */\n  _selectedItemChanged(selectedItem) {\n    if (selectedItem === null || selectedItem === undefined) {\n      if (this.filteredItems) {\n        if (!this.allowCustomValue) {\n          this.value = '';\n        }\n        this._toggleHasValue(this._hasValue);\n        this._inputElementValue = this.value;\n      }\n    } else {\n      const value = this._getItemValue(selectedItem);\n      if (this.value !== value) {\n        this.value = value;\n        if (this.value !== value) {\n          // The value was changed to something else in value-changed listener,\n          // so prevent from resetting it to the previous value.\n          return;\n        }\n      }\n      this._toggleHasValue(true);\n      this._inputElementValue = this._getItemLabel(selectedItem);\n    }\n    if (this.filteredItems) {\n      this._focusedIndex = this.filteredItems.indexOf(selectedItem);\n    }\n  }\n\n  /**\n   * Override an observer from `InputMixin`.\n   * @protected\n   * @override\n   */\n  _valueChanged(value, oldVal) {\n    if (value === '' && oldVal === undefined) {\n      // Initializing, no need to do anything\n      // See https://github.com/vaadin/vaadin-combo-box/issues/554\n      return;\n    }\n    if (isValidValue(value)) {\n      if (this._getItemValue(this.selectedItem) !== value) {\n        this._selectItemForValue(value);\n      }\n      if (!this.selectedItem && this.allowCustomValue) {\n        this._inputElementValue = value;\n      }\n      this._toggleHasValue(this._hasValue);\n    } else {\n      this.selectedItem = null;\n    }\n    this.filter = '';\n\n    // In the next _detectAndDispatchChange() call, the change detection should pass\n    this._lastCommittedValue = undefined;\n  }\n\n  /** @private */\n  _detectAndDispatchChange() {\n    if (this.value !== this._lastCommittedValue) {\n      this.dispatchEvent(new CustomEvent('change', {\n        bubbles: true\n      }));\n      this._lastCommittedValue = this.value;\n    }\n  }\n\n  /** @private */\n  _itemsChanged(items, oldItems) {\n    this._ensureItemsOrDataProvider(() => {\n      this.items = oldItems;\n    });\n    if (items) {\n      this.filteredItems = items.slice(0);\n    } else if (oldItems) {\n      // Only clear filteredItems if the component had items previously but got cleared\n      this.filteredItems = null;\n    }\n  }\n\n  /** @private */\n  _filteredItemsChanged(filteredItems, oldFilteredItems) {\n    // Store the currently focused item if any. The focused index preserves\n    // in the case when more filtered items are loading but it is reset\n    // when the user types in a filter query.\n    const focusedItem = oldFilteredItems ? oldFilteredItems[this._focusedIndex] : null;\n\n    // Try to sync `selectedItem` based on `value` once a new set of `filteredItems` is available\n    // (as a result of external filtering or when they have been loaded by the data provider).\n    // When `value` is specified but `selectedItem` is not, it means that there was no item\n    // matching `value` at the moment `value` was set, so `selectedItem` has remained unsynced.\n    const valueIndex = this.__getItemIndexByValue(filteredItems, this.value);\n    if ((this.selectedItem === null || this.selectedItem === undefined) && valueIndex >= 0) {\n      this.selectedItem = filteredItems[valueIndex];\n    }\n\n    // Try to first set focus on the item that had been focused before `filteredItems` were updated\n    // if it is still present in the `filteredItems` array. Otherwise, set the focused index\n    // depending on the selected item or the filter query.\n    const focusedItemIndex = this.__getItemIndexByValue(filteredItems, this._getItemValue(focusedItem));\n    if (focusedItemIndex > -1) {\n      this._focusedIndex = focusedItemIndex;\n    } else {\n      this.__setInitialFocusedIndex();\n    }\n  }\n\n  /** @private */\n  __setInitialFocusedIndex() {\n    const inputValue = this._inputElementValue;\n    if (inputValue === undefined || inputValue === this._getItemLabel(this.selectedItem)) {\n      // When the input element value is the same as the current value or not defined,\n      // set the focused index to the item that matches the value.\n      this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this._getItemLabel(this.selectedItem));\n    } else {\n      // When the user filled in something that is different from the current value = filtering is enabled,\n      // set the focused index to the item that matches the filter query.\n      this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this.filter);\n    }\n  }\n\n  /** @private */\n  _filterItems(arr, filter) {\n    if (!arr) {\n      return arr;\n    }\n    const filteredItems = arr.filter(item => {\n      filter = filter ? filter.toString().toLowerCase() : '';\n      // Check if item contains input value.\n      return this._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n    });\n    return filteredItems;\n  }\n\n  /** @private */\n  _selectItemForValue(value) {\n    const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n    const previouslySelectedItem = this.selectedItem;\n    if (valueIndex >= 0) {\n      this.selectedItem = this.filteredItems[valueIndex];\n    } else if (this.dataProvider && this.selectedItem === undefined) {\n      this.selectedItem = undefined;\n    } else {\n      this.selectedItem = null;\n    }\n    if (this.selectedItem === null && previouslySelectedItem === null) {\n      this._selectedItemChanged(this.selectedItem);\n    }\n  }\n\n  /** @private */\n  _getItemElements() {\n    return Array.from(this._scroller.querySelectorAll(`${this._tagNamePrefix}-item`));\n  }\n\n  /** @private */\n  _scrollIntoView(index) {\n    if (!this._scroller) {\n      return;\n    }\n    this._scroller.scrollIntoView(index);\n  }\n\n  /**\n   * Returns the first item that matches the provided value.\n   *\n   * @private\n   */\n  __getItemIndexByValue(items, value) {\n    if (!items || !isValidValue(value)) {\n      return -1;\n    }\n    return findItemIndex(items, item => {\n      return this._getItemValue(item) === value;\n    });\n  }\n\n  /**\n   * Returns the first item that matches the provided label.\n   * Labels are matched against each other case insensitively.\n   *\n   * @private\n   */\n  __getItemIndexByLabel(items, label) {\n    if (!items || !label) {\n      return -1;\n    }\n    return findItemIndex(items, item => {\n      return this._getItemLabel(item).toString().toLowerCase() === label.toString().toLowerCase();\n    });\n  }\n\n  /** @private */\n  _overlaySelectedItemChanged(e) {\n    // Stop this private event from leaking outside.\n    e.stopPropagation();\n    if (e.detail.item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_9__.ComboBoxPlaceholder) {\n      // Placeholder items should not be selectable.\n      return;\n    }\n    if (this.opened) {\n      this._focusedIndex = this.filteredItems.indexOf(e.detail.item);\n      this.close();\n    }\n  }\n\n  /** @private */\n  _onFocusout(event) {\n    // VoiceOver on iOS fires `focusout` event when moving focus to the item in the dropdown.\n    // Do not focus the input in this case, because it would break announcement for the item.\n    if (event.relatedTarget && event.relatedTarget.localName === `${this._tagNamePrefix}-item`) {\n      return;\n    }\n\n    // Fixes the problem with `focusout` happening when clicking on the scroll bar on Edge\n    if (event.relatedTarget === this._overlayElement) {\n      event.composedPath()[0].focus();\n      return;\n    }\n    if (!this.readonly && !this._closeOnBlurIsPrevented) {\n      // User's logic in `custom-value-set` event listener might cause input to blur,\n      // which will result in attempting to commit the same custom value once again.\n      if (!this.opened && this.allowCustomValue && this._inputElementValue === this._lastCustomValue) {\n        delete this._lastCustomValue;\n        return;\n      }\n      this._closeOrCommit();\n    }\n  }\n\n  /** @private */\n  _onTouchend(event) {\n    if (!this.clearElement || event.composedPath()[0] !== this.clearElement) {\n      return;\n    }\n    event.preventDefault();\n    this._onClearAction();\n  }\n\n  /**\n   * Fired when the value changes.\n   *\n   * @event value-changed\n   * @param {Object} detail\n   * @param {String} detail.value the combobox value\n   */\n\n  /**\n   * Fired when selected item changes.\n   *\n   * @event selected-item-changed\n   * @param {Object} detail\n   * @param {Object|String} detail.value the selected item. Type is the same as the type of `items`.\n   */\n\n  /**\n   * Fired when the user sets a custom value.\n   * @event custom-value-set\n   * @param {String} detail the custom value\n   */\n\n  /**\n   * Fired when value changes.\n   * To comply with https://developer.mozilla.org/en-US/docs/Web/Events/change\n   * @event change\n   */\n\n  /**\n   * Fired after the `vaadin-combo-box-overlay` opens.\n   *\n   * @event vaadin-combo-box-dropdown-opened\n   */\n\n  /**\n   * Fired after the `vaadin-combo-box-overlay` closes.\n   *\n   * @event vaadin-combo-box-dropdown-closed\n   */\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxOverlayMixin: () => (/* binding */ ComboBoxOverlayMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_overlay_src_vaadin_overlay_position_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/overlay/src/vaadin-overlay-position-mixin.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @polymerMixin\n * @mixes PositionMixin\n */\nconst ComboBoxOverlayMixin = superClass => class ComboBoxOverlayMixin extends (0,_vaadin_overlay_src_vaadin_overlay_position_mixin_js__WEBPACK_IMPORTED_MODULE_0__.PositionMixin)(superClass) {\n  static get observers() {\n    return ['_setOverlayWidth(positionTarget, opened)'];\n  }\n  constructor() {\n    super();\n    this.requiredVerticalSpace = 200;\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    const comboBox = this._comboBox;\n    const hostDir = comboBox && comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  /**\n   * Override method inherited from `Overlay`\n   * to not close on position target click.\n   *\n   * @param {Event} event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldCloseOnOutsideClick(event) {\n    const eventPath = event.composedPath();\n    return !eventPath.includes(this.positionTarget) && !eventPath.includes(this);\n  }\n\n  /** @private */\n  _setOverlayWidth(positionTarget, opened) {\n    if (positionTarget && opened) {\n      const propPrefix = this.localName;\n      this.style.setProperty(`--_${propPrefix}-default-width`, `${positionTarget.clientWidth}px`);\n      const customWidth = getComputedStyle(this._comboBox).getPropertyValue(`--${propPrefix}-width`);\n      if (customWidth === '') {\n        this.style.removeProperty(`--${propPrefix}-width`);\n      } else {\n        this.style.setProperty(`--${propPrefix}-width`, customWidth);\n      }\n      this._updatePosition();\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS1taXhpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LW1peGluLmpzPzI2NzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBQb3NpdGlvbk1peGluIH0gZnJvbSAnQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1wb3NpdGlvbi1taXhpbi5qcyc7XG5cbi8qKlxuICogQHBvbHltZXJNaXhpblxuICogQG1peGVzIFBvc2l0aW9uTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbWJvQm94T3ZlcmxheU1peGluID0gKHN1cGVyQ2xhc3MpID0+XG4gIGNsYXNzIENvbWJvQm94T3ZlcmxheU1peGluIGV4dGVuZHMgUG9zaXRpb25NaXhpbihzdXBlckNsYXNzKSB7XG4gICAgc3RhdGljIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICByZXR1cm4gWydfc2V0T3ZlcmxheVdpZHRoKHBvc2l0aW9uVGFyZ2V0LCBvcGVuZWQpJ107XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICBzdXBlcigpO1xuXG4gICAgICB0aGlzLnJlcXVpcmVkVmVydGljYWxTcGFjZSA9IDIwMDtcbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgICAgY29uc3QgY29tYm9Cb3ggPSB0aGlzLl9jb21ib0JveDtcblxuICAgICAgY29uc3QgaG9zdERpciA9IGNvbWJvQm94ICYmIGNvbWJvQm94LmdldEF0dHJpYnV0ZSgnZGlyJyk7XG4gICAgICBpZiAoaG9zdERpcikge1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnZGlyJywgaG9zdERpcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGUgbWV0aG9kIGluaGVyaXRlZCBmcm9tIGBPdmVybGF5YFxuICAgICAqIHRvIG5vdCBjbG9zZSBvbiBwb3NpdGlvbiB0YXJnZXQgY2xpY2suXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBldmVudFxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIF9zaG91bGRDbG9zZU9uT3V0c2lkZUNsaWNrKGV2ZW50KSB7XG4gICAgICBjb25zdCBldmVudFBhdGggPSBldmVudC5jb21wb3NlZFBhdGgoKTtcbiAgICAgIHJldHVybiAhZXZlbnRQYXRoLmluY2x1ZGVzKHRoaXMucG9zaXRpb25UYXJnZXQpICYmICFldmVudFBhdGguaW5jbHVkZXModGhpcyk7XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX3NldE92ZXJsYXlXaWR0aChwb3NpdGlvblRhcmdldCwgb3BlbmVkKSB7XG4gICAgICBpZiAocG9zaXRpb25UYXJnZXQgJiYgb3BlbmVkKSB7XG4gICAgICAgIGNvbnN0IHByb3BQcmVmaXggPSB0aGlzLmxvY2FsTmFtZTtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShgLS1fJHtwcm9wUHJlZml4fS1kZWZhdWx0LXdpZHRoYCwgYCR7cG9zaXRpb25UYXJnZXQuY2xpZW50V2lkdGh9cHhgKTtcblxuICAgICAgICBjb25zdCBjdXN0b21XaWR0aCA9IGdldENvbXB1dGVkU3R5bGUodGhpcy5fY29tYm9Cb3gpLmdldFByb3BlcnR5VmFsdWUoYC0tJHtwcm9wUHJlZml4fS13aWR0aGApO1xuXG4gICAgICAgIGlmIChjdXN0b21XaWR0aCA9PT0gJycpIHtcbiAgICAgICAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KGAtLSR7cHJvcFByZWZpeH0td2lkdGhgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KGAtLSR7cHJvcFByZWZpeH0td2lkdGhgLCBjdXN0b21XaWR0aCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl91cGRhdGVQb3NpdGlvbigpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxOverlay: () => (/* binding */ ComboBoxOverlay)\n/* harmony export */ });\n/* harmony import */ var _vaadin_overlay_src_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/overlay/src/vaadin-overlay.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_overlay_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vaadin-combo-box-overlay-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('vaadin-combo-box-overlay', _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n    #overlay {\n      width: var(--vaadin-combo-box-overlay-width, var(--_vaadin-combo-box-overlay-default-width, auto));\n    }\n\n    [part='content'] {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    }\n  `, {\n  moduleId: 'vaadin-combo-box-overlay-styles'\n});\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-combo-box>`. Not intended to be used separately.\n *\n * @extends Overlay\n * @mixes ComboBoxOverlayMixin\n * @private\n */\nclass ComboBoxOverlay extends (0,_vaadin_combo_box_overlay_mixin_js__WEBPACK_IMPORTED_MODULE_2__.ComboBoxOverlayMixin)(_vaadin_overlay_src_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_0__.Overlay) {\n  static get is() {\n    return 'vaadin-combo-box-overlay';\n  }\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      const overlay = memoizedTemplate.content.querySelector('[part~=\"overlay\"]');\n      overlay.removeAttribute('tabindex');\n      const loader = document.createElement('div');\n      loader.setAttribute('part', 'loader');\n      overlay.insertBefore(loader, overlay.firstElementChild);\n    }\n    return memoizedTemplate;\n  }\n}\ncustomElements.define(ComboBoxOverlay.is, ComboBoxOverlay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS5qcz81ZGMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgT3ZlcmxheSB9IGZyb20gJ0B2YWFkaW4vb3ZlcmxheS9zcmMvdmFhZGluLW92ZXJsYXkuanMnO1xuaW1wb3J0IHsgY3NzLCByZWdpc3RlclN0eWxlcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5pbXBvcnQgeyBDb21ib0JveE92ZXJsYXlNaXhpbiB9IGZyb20gJy4vdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LW1peGluLmpzJztcblxucmVnaXN0ZXJTdHlsZXMoXG4gICd2YWFkaW4tY29tYm8tYm94LW92ZXJsYXknLFxuICBjc3NgXG4gICAgI292ZXJsYXkge1xuICAgICAgd2lkdGg6IHZhcigtLXZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS13aWR0aCwgdmFyKC0tX3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS1kZWZhdWx0LXdpZHRoLCBhdXRvKSk7XG4gICAgfVxuXG4gICAgW3BhcnQ9J2NvbnRlbnQnXSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gIGAsXG4gIHsgbW9kdWxlSWQ6ICd2YWFkaW4tY29tYm8tYm94LW92ZXJsYXktc3R5bGVzJyB9LFxuKTtcblxubGV0IG1lbW9pemVkVGVtcGxhdGU7XG5cbi8qKlxuICogQW4gZWxlbWVudCB1c2VkIGludGVybmFsbHkgYnkgYDx2YWFkaW4tY29tYm8tYm94PmAuIE5vdCBpbnRlbmRlZCB0byBiZSB1c2VkIHNlcGFyYXRlbHkuXG4gKlxuICogQGV4dGVuZHMgT3ZlcmxheVxuICogQG1peGVzIENvbWJvQm94T3ZlcmxheU1peGluXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY2xhc3MgQ29tYm9Cb3hPdmVybGF5IGV4dGVuZHMgQ29tYm9Cb3hPdmVybGF5TWl4aW4oT3ZlcmxheSkge1xuICBzdGF0aWMgZ2V0IGlzKCkge1xuICAgIHJldHVybiAndmFhZGluLWNvbWJvLWJveC1vdmVybGF5JztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgdGVtcGxhdGUoKSB7XG4gICAgaWYgKCFtZW1vaXplZFRlbXBsYXRlKSB7XG4gICAgICBtZW1vaXplZFRlbXBsYXRlID0gc3VwZXIudGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgICBjb25zdCBvdmVybGF5ID0gbWVtb2l6ZWRUZW1wbGF0ZS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJ1twYXJ0fj1cIm92ZXJsYXlcIl0nKTtcbiAgICAgIG92ZXJsYXkucmVtb3ZlQXR0cmlidXRlKCd0YWJpbmRleCcpO1xuXG4gICAgICBjb25zdCBsb2FkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGxvYWRlci5zZXRBdHRyaWJ1dGUoJ3BhcnQnLCAnbG9hZGVyJyk7XG5cbiAgICAgIG92ZXJsYXkuaW5zZXJ0QmVmb3JlKGxvYWRlciwgb3ZlcmxheS5maXJzdEVsZW1lbnRDaGlsZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9pemVkVGVtcGxhdGU7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKENvbWJvQm94T3ZlcmxheS5pcywgQ29tYm9Cb3hPdmVybGF5KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxPlaceholder: () => (/* binding */ ComboBoxPlaceholder)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/*\n * Placeholder object class representing items being loaded.\n *\n * @private\n */\nconst ComboBoxPlaceholder = class ComboBoxPlaceholder {\n  toString() {\n    return '';\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtcGxhY2Vob2xkZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvdmFhZGluLWNvbWJvLWJveC1wbGFjZWhvbGRlci5qcz8zZDk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKlxuICogUGxhY2Vob2xkZXIgb2JqZWN0IGNsYXNzIHJlcHJlc2VudGluZyBpdGVtcyBiZWluZyBsb2FkZWQuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IENvbWJvQm94UGxhY2Vob2xkZXIgPSBjbGFzcyBDb21ib0JveFBsYWNlaG9sZGVyIHtcbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxScrollerMixin: () => (/* binding */ ComboBoxScrollerMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_unique_id_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/unique-id-utils.js */ \"./node_modules/@vaadin/component-base/src/unique-id-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_virtualizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/virtualizer.js */ \"./node_modules/@vaadin/component-base/src/virtualizer.js\");\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n/**\n * @polymerMixin\n */\nconst ComboBoxScrollerMixin = superClass => class ComboBoxScrollerMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * A full set of items to filter the visible options from.\n       * Set to an empty array when combo-box is not opened.\n       */\n      items: {\n        type: Array,\n        observer: '__itemsChanged'\n      },\n      /**\n       * Index of an item that has focus outline and is scrolled into view.\n       * The actual focus still remains in the input field.\n       */\n      focusedIndex: {\n        type: Number,\n        observer: '__focusedIndexChanged'\n      },\n      /**\n       * Set to true while combo-box fetches new page from the data provider.\n       */\n      loading: {\n        type: Boolean,\n        observer: '__loadingChanged'\n      },\n      /**\n       * Whether the combo-box is currently opened or not. If set to false,\n       * calling `scrollIntoView` does not have any effect.\n       */\n      opened: {\n        type: Boolean,\n        observer: '__openedChanged'\n      },\n      /**\n       * The selected item from the `items` array.\n       */\n      selectedItem: {\n        type: Object,\n        observer: '__selectedItemChanged'\n      },\n      /**\n       * Path for the id of the item, used to detect whether the item is selected.\n       */\n      itemIdPath: {\n        type: String\n      },\n      /**\n       * Reference to the owner (combo-box owner), used by the item elements.\n       */\n      owner: {\n        type: Object\n      },\n      /**\n       * Function used to set a label for every combo-box item.\n       */\n      getItemLabel: {\n        type: Object\n      },\n      /**\n       * Function used to render the content of every combo-box item.\n       */\n      renderer: {\n        type: Object,\n        observer: '__rendererChanged'\n      },\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: {\n        type: String\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.__boundOnItemClick = this.__onItemClick.bind(this);\n  }\n\n  /** @private */\n  get _viewportTotalPaddingBottom() {\n    if (this._cachedViewportTotalPaddingBottom === undefined) {\n      const itemsStyle = window.getComputedStyle(this.$.selector);\n      this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth].map(v => {\n        return parseInt(v, 10);\n      }).reduce((sum, v) => {\n        return sum + v;\n      });\n    }\n    return this._cachedViewportTotalPaddingBottom;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'listbox');\n\n    // Ensure every instance has unique ID\n    this.id = `${this.localName}-${(0,_vaadin_component_base_src_unique_id_utils_js__WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)()}`;\n\n    // Allow extensions to customize tag name for the items\n    this.__hostTagName = this.constructor.is.replace('-scroller', '');\n    this.addEventListener('click', e => e.stopPropagation());\n    this.__patchWheelOverScrolling();\n    this.__virtualizer = new _vaadin_component_base_src_virtualizer_js__WEBPACK_IMPORTED_MODULE_1__.Virtualizer({\n      createElements: this.__createElements.bind(this),\n      updateElement: this._updateElement.bind(this),\n      elementsContainer: this,\n      scrollTarget: this,\n      scrollContainer: this.$.selector\n    });\n  }\n\n  /**\n   * Requests an update for the virtualizer to re-render items.\n   */\n  requestContentUpdate() {\n    if (this.__virtualizer) {\n      this.__virtualizer.update();\n    }\n  }\n\n  /**\n   * Scrolls an item at given index into view and adjusts `scrollTop`\n   * so that the element gets fully visible on Arrow Down key press.\n   * @param {number} index\n   */\n  scrollIntoView(index) {\n    if (!(this.opened && index >= 0)) {\n      return;\n    }\n    const visibleItemsCount = this._visibleItemsCount();\n    let targetIndex = index;\n    if (index > this.__virtualizer.lastVisibleIndex - 1) {\n      // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n      // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n      this.__virtualizer.scrollToIndex(index);\n      // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n      targetIndex = index - visibleItemsCount + 1;\n    } else if (index > this.__virtualizer.firstVisibleIndex) {\n      // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n      // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n      targetIndex = this.__virtualizer.firstVisibleIndex;\n    }\n    this.__virtualizer.scrollToIndex(Math.max(0, targetIndex));\n\n    // Sometimes the item is partly below the bottom edge, detect and adjust.\n    const lastPhysicalItem = [...this.children].find(el => !el.hidden && el.index === this.__virtualizer.lastVisibleIndex);\n    if (!lastPhysicalItem || index !== lastPhysicalItem.index) {\n      return;\n    }\n    const lastPhysicalItemRect = lastPhysicalItem.getBoundingClientRect();\n    const scrollerRect = this.getBoundingClientRect();\n    const scrollTopAdjust = lastPhysicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n    if (scrollTopAdjust > 0) {\n      this.scrollTop += scrollTopAdjust;\n    }\n  }\n\n  /**\n   * @param {string | object} item\n   * @param {string | object} selectedItem\n   * @param {string} itemIdPath\n   * @protected\n   */\n  _isItemSelected(item, selectedItem, itemIdPath) {\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_2__.ComboBoxPlaceholder) {\n      return false;\n    } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n      return this.get(itemIdPath, item) === this.get(itemIdPath, selectedItem);\n    }\n    return item === selectedItem;\n  }\n\n  /** @private */\n  __itemsChanged(items) {\n    if (this.__virtualizer && items) {\n      this.__virtualizer.size = items.length;\n      this.__virtualizer.flush();\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __loadingChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __openedChanged(opened) {\n    if (opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __selectedItemChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __focusedIndexChanged(index, oldIndex) {\n    if (index !== oldIndex) {\n      this.requestContentUpdate();\n    }\n\n    // Do not jump back to the previously focused item while loading\n    // when requesting next page from the data provider on scroll.\n    if (index >= 0 && !this.loading) {\n      this.scrollIntoView(index);\n    }\n  }\n\n  /** @private */\n  __rendererChanged(renderer, oldRenderer) {\n    if (renderer || oldRenderer) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __createElements(count) {\n    return [...Array(count)].map(() => {\n      const item = document.createElement(`${this.__hostTagName}-item`);\n      item.addEventListener('click', this.__boundOnItemClick);\n      // Negative tabindex prevents the item content from being focused.\n      item.tabIndex = '-1';\n      item.style.width = '100%';\n      return item;\n    });\n  }\n\n  /**\n   * @param {HTMLElement} el\n   * @param {number} index\n   * @protected\n   */\n  _updateElement(el, index) {\n    const item = this.items[index];\n    const focusedIndex = this.focusedIndex;\n    const selected = this._isItemSelected(item, this.selectedItem, this.itemIdPath);\n    el.setProperties({\n      item,\n      index,\n      label: this.getItemLabel(item),\n      selected,\n      renderer: this.renderer,\n      focused: !this.loading && focusedIndex === index\n    });\n    el.id = `${this.__hostTagName}-item-${index}`;\n    el.setAttribute('role', index !== undefined ? 'option' : false);\n    el.setAttribute('aria-selected', selected.toString());\n    el.setAttribute('aria-posinset', index + 1);\n    el.setAttribute('aria-setsize', this.items.length);\n    if (this.theme) {\n      el.setAttribute('theme', this.theme);\n    } else {\n      el.removeAttribute('theme');\n    }\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_2__.ComboBoxPlaceholder) {\n      this.__requestItemByIndex(index);\n    }\n  }\n\n  /** @private */\n  __onItemClick(e) {\n    this.dispatchEvent(new CustomEvent('selection-changed', {\n      detail: {\n        item: e.currentTarget.item\n      }\n    }));\n  }\n\n  /**\n   * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n   * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n   * scrolling the parent similarly to touch scrolling.\n   * @private\n   */\n  __patchWheelOverScrolling() {\n    this.$.selector.addEventListener('wheel', e => {\n      const scrolledToTop = this.scrollTop === 0;\n      const scrolledToBottom = this.scrollHeight - this.scrollTop - this.clientHeight <= 1;\n      if (scrolledToTop && e.deltaY < 0) {\n        e.preventDefault();\n      } else if (scrolledToBottom && e.deltaY > 0) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  /**\n   * Dispatches an `index-requested` event for the given index to notify\n   * the data provider that it should start loading the page containing the requested index.\n   *\n   * The event is dispatched asynchronously to prevent an immediate page request and therefore\n   * a possible infinite recursion in case the data provider implements page request cancelation logic\n   * by invoking data provider page callbacks with an empty array.\n   * The infinite recursion may occur otherwise since invoking a data provider page callback with an empty array\n   * triggers a synchronous scroller update and, if the callback corresponds to the currently visible page,\n   * the scroller will synchronously request the page again which may lead to looping in the end.\n   * That was the case for the Flow counterpart:\n   * https://github.com/vaadin/flow-components/issues/3553#issuecomment-1239344828\n   * @private\n   */\n  __requestItemByIndex(index) {\n    requestAnimationFrame(() => {\n      this.dispatchEvent(new CustomEvent('index-requested', {\n        detail: {\n          index,\n          currentScrollerPos: this._oldScrollerPosition\n        }\n      }));\n    });\n  }\n\n  /** @private */\n  _visibleItemsCount() {\n    // Ensure items are positioned\n    this.__virtualizer.scrollToIndex(this.__virtualizer.firstVisibleIndex);\n    const hasItems = this.__virtualizer.size > 0;\n    return hasItems ? this.__virtualizer.lastVisibleIndex - this.__virtualizer.firstVisibleIndex + 1 : 0;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComboBoxScroller: () => (/* binding */ ComboBoxScroller)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_combo_box_scroller_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-combo-box-scroller-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n/**\n * An element used internally by `<vaadin-combo-box>`. Not intended to be used separately.\n *\n * @extends HTMLElement\n * @mixes ComboBoxScrollerMixin\n * @private\n */\nclass ComboBoxScroller extends (0,_vaadin_combo_box_scroller_mixin_js__WEBPACK_IMPORTED_MODULE_1__.ComboBoxScrollerMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.PolymerElement) {\n  static get is() {\n    return 'vaadin-combo-box-scroller';\n  }\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.html`\n      <style>\n        :host {\n          display: block;\n          min-height: 1px;\n          overflow: auto;\n\n          /* Fixes item background from getting on top of scrollbars on Safari */\n          transform: translate3d(0, 0, 0);\n\n          /* Enable momentum scrolling on iOS */\n          -webkit-overflow-scrolling: touch;\n\n          /* Fixes scrollbar disappearing when 'Show scroll bars: Always' enabled in Safari */\n          box-shadow: 0 0 0 white;\n        }\n\n        #selector {\n          border-width: var(--_vaadin-combo-box-items-container-border-width);\n          border-style: var(--_vaadin-combo-box-items-container-border-style);\n          border-color: var(--_vaadin-combo-box-items-container-border-color, transparent);\n          position: relative;\n        }\n      </style>\n      <div id=\"selector\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\ncustomElements.define(ComboBoxScroller.is, ComboBoxScroller);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtc2Nyb2xsZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvdmFhZGluLWNvbWJvLWJveC1zY3JvbGxlci5qcz9mMGYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgaHRtbCwgUG9seW1lckVsZW1lbnQgfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItZWxlbWVudC5qcyc7XG5pbXBvcnQgeyBDb21ib0JveFNjcm9sbGVyTWl4aW4gfSBmcm9tICcuL3ZhYWRpbi1jb21iby1ib3gtc2Nyb2xsZXItbWl4aW4uanMnO1xuXG4vKipcbiAqIEFuIGVsZW1lbnQgdXNlZCBpbnRlcm5hbGx5IGJ5IGA8dmFhZGluLWNvbWJvLWJveD5gLiBOb3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBzZXBhcmF0ZWx5LlxuICpcbiAqIEBleHRlbmRzIEhUTUxFbGVtZW50XG4gKiBAbWl4ZXMgQ29tYm9Cb3hTY3JvbGxlck1peGluXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY2xhc3MgQ29tYm9Cb3hTY3JvbGxlciBleHRlbmRzIENvbWJvQm94U2Nyb2xsZXJNaXhpbihQb2x5bWVyRWxlbWVudCkge1xuICBzdGF0aWMgZ2V0IGlzKCkge1xuICAgIHJldHVybiAndmFhZGluLWNvbWJvLWJveC1zY3JvbGxlcic7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHRlbXBsYXRlKCkge1xuICAgIHJldHVybiBodG1sYFxuICAgICAgPHN0eWxlPlxuICAgICAgICA6aG9zdCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgbWluLWhlaWdodDogMXB4O1xuICAgICAgICAgIG92ZXJmbG93OiBhdXRvO1xuXG4gICAgICAgICAgLyogRml4ZXMgaXRlbSBiYWNrZ3JvdW5kIGZyb20gZ2V0dGluZyBvbiB0b3Agb2Ygc2Nyb2xsYmFycyBvbiBTYWZhcmkgKi9cbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuXG4gICAgICAgICAgLyogRW5hYmxlIG1vbWVudHVtIHNjcm9sbGluZyBvbiBpT1MgKi9cbiAgICAgICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG5cbiAgICAgICAgICAvKiBGaXhlcyBzY3JvbGxiYXIgZGlzYXBwZWFyaW5nIHdoZW4gJ1Nob3cgc2Nyb2xsIGJhcnM6IEFsd2F5cycgZW5hYmxlZCBpbiBTYWZhcmkgKi9cbiAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMCB3aGl0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICNzZWxlY3RvciB7XG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiB2YXIoLS1fdmFhZGluLWNvbWJvLWJveC1pdGVtcy1jb250YWluZXItYm9yZGVyLXdpZHRoKTtcbiAgICAgICAgICBib3JkZXItc3R5bGU6IHZhcigtLV92YWFkaW4tY29tYm8tYm94LWl0ZW1zLWNvbnRhaW5lci1ib3JkZXItc3R5bGUpO1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0tX3ZhYWRpbi1jb21iby1ib3gtaXRlbXMtY29udGFpbmVyLWJvcmRlci1jb2xvciwgdHJhbnNwYXJlbnQpO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfVxuICAgICAgPC9zdHlsZT5cbiAgICAgIDxkaXYgaWQ9XCJzZWxlY3RvclwiPlxuICAgICAgICA8c2xvdD48L3Nsb3Q+XG4gICAgICA8L2Rpdj5cbiAgICBgO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZShDb21ib0JveFNjcm9sbGVyLmlzLCBDb21ib0JveFNjcm9sbGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comboBoxItem: () => (/* binding */ comboBoxItem)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_font_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/font-icons.js */ \"./node_modules/@vaadin/vaadin-material-styles/font-icons.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_typography_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _vaadin_item_theme_material_vaadin_item_styles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/item/theme/material/vaadin-item-styles.js */ \"./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\n\nconst comboBoxItem = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.css`\n  :host {\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n    padding: 4px 10px;\n    --_material-item-selected-icon-display: block;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.registerStyles)('vaadin-combo-box-item', [_vaadin_item_theme_material_vaadin_item_styles_js__WEBPACK_IMPORTED_MODULE_3__.item, comboBoxItem], {\n  moduleId: 'material-combo-box-item'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1pdGVtLXN0eWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1jb21iby1ib3gtaXRlbS1zdHlsZXMuanM/OWVlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9jb2xvci5qcyc7XG5pbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9mb250LWljb25zLmpzJztcbmltcG9ydCAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3R5cG9ncmFwaHkuanMnO1xuaW1wb3J0IHsgaXRlbSB9IGZyb20gJ0B2YWFkaW4vaXRlbS90aGVtZS9tYXRlcmlhbC92YWFkaW4taXRlbS1zdHlsZXMuanMnO1xuaW1wb3J0IHsgY3NzLCByZWdpc3RlclN0eWxlcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IGNvbWJvQm94SXRlbSA9IGNzc2BcbiAgOmhvc3Qge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHBhZGRpbmc6IDRweCAxMHB4O1xuICAgIC0tX21hdGVyaWFsLWl0ZW0tc2VsZWN0ZWQtaWNvbi1kaXNwbGF5OiBibG9jaztcbiAgfVxuYDtcblxucmVnaXN0ZXJTdHlsZXMoJ3ZhYWRpbi1jb21iby1ib3gtaXRlbScsIFtpdGVtLCBjb21ib0JveEl0ZW1dLCB7XG4gIG1vZHVsZUlkOiAnbWF0ZXJpYWwtY29tYm8tYm94LWl0ZW0nLFxufSk7XG5cbmV4cG9ydCB7IGNvbWJvQm94SXRlbSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_combo_box_item_styles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-item-styles.js */ \"./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js\");\n/* harmony import */ var _vaadin_combo_box_overlay_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-combo-box-overlay-styles.js */ \"./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js\");\n/* harmony import */ var _src_vaadin_combo_box_light_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/vaadin-combo-box-light.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1saWdodC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1jb21iby1ib3gtbGlnaHQuanM/ZmE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vdmFhZGluLWNvbWJvLWJveC1pdGVtLXN0eWxlcy5qcyc7XG5pbXBvcnQgJy4vdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LXN0eWxlcy5qcyc7XG5pbXBvcnQgJy4uLy4uL3NyYy92YWFkaW4tY29tYm8tYm94LWxpZ2h0LmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comboBoxLoader: () => (/* binding */ comboBoxLoader),\n/* harmony export */   comboBoxOverlay: () => (/* binding */ comboBoxOverlay)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_overlay_theme_material_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/overlay/theme/material/vaadin-overlay.js */ \"./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_loader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/loader.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_menu_overlay_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/menu-overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\n\nconst comboBoxOverlay = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.css`\n  [part='overlay'] {\n    position: relative;\n    overflow: visible;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  [part='content'] {\n    padding: 0;\n  }\n`;\nconst comboBoxLoader = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.css`\n  [part~='loader'] {\n    position: absolute;\n    z-index: 1;\n    top: -2px;\n    left: 0;\n    right: 0;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.registerStyles)('vaadin-combo-box-overlay', [_vaadin_vaadin_material_styles_mixins_menu_overlay_js__WEBPACK_IMPORTED_MODULE_3__.menuOverlay, comboBoxOverlay, _vaadin_vaadin_material_styles_mixins_loader_js__WEBPACK_IMPORTED_MODULE_2__.loader, comboBoxLoader, _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.css`\n      :host {\n        --_vaadin-combo-box-items-container-border-width: 8px 0;\n        --_vaadin-combo-box-items-container-border-style: solid;\n      }\n    `], {\n  moduleId: 'material-combo-box-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LXN0eWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC90aGVtZS9tYXRlcmlhbC92YWFkaW4tY29tYm8tYm94LW92ZXJsYXktc3R5bGVzLmpzPzA4YjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvY29sb3IuanMnO1xuaW1wb3J0ICdAdmFhZGluL292ZXJsYXkvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLW92ZXJsYXkuanMnO1xuaW1wb3J0IHsgbG9hZGVyIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9sb2FkZXIuanMnO1xuaW1wb3J0IHsgbWVudU92ZXJsYXkgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvbWl4aW5zL21lbnUtb3ZlcmxheS5qcyc7XG5pbXBvcnQgeyBjc3MsIHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcblxuY29uc3QgY29tYm9Cb3hPdmVybGF5ID0gY3NzYFxuICBbcGFydD0nb3ZlcmxheSddIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcbiAgfVxuXG4gIFtwYXJ0PSdjb250ZW50J10ge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbmA7XG5cbmNvbnN0IGNvbWJvQm94TG9hZGVyID0gY3NzYFxuICBbcGFydH49J2xvYWRlciddIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTtcbiAgICB0b3A6IC0ycHg7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgfVxuYDtcblxucmVnaXN0ZXJTdHlsZXMoXG4gICd2YWFkaW4tY29tYm8tYm94LW92ZXJsYXknLFxuICBbXG4gICAgbWVudU92ZXJsYXksXG4gICAgY29tYm9Cb3hPdmVybGF5LFxuICAgIGxvYWRlcixcbiAgICBjb21ib0JveExvYWRlcixcbiAgICBjc3NgXG4gICAgICA6aG9zdCB7XG4gICAgICAgIC0tX3ZhYWRpbi1jb21iby1ib3gtaXRlbXMtY29udGFpbmVyLWJvcmRlci13aWR0aDogOHB4IDA7XG4gICAgICAgIC0tX3ZhYWRpbi1jb21iby1ib3gtaXRlbXMtY29udGFpbmVyLWJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbiAgeyBtb2R1bGVJZDogJ21hdGVyaWFsLWNvbWJvLWJveC1vdmVybGF5JyB9LFxuKTtcblxuZXhwb3J0IHsgY29tYm9Cb3hMb2FkZXIsIGNvbWJvQm94T3ZlcmxheSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-overlay-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/async.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/async.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animationFrame: () => (/* binding */ animationFrame),\n/* harmony export */   idlePeriod: () => (/* binding */ idlePeriod),\n/* harmony export */   microTask: () => (/* binding */ microTask),\n/* harmony export */   timeOut: () => (/* binding */ timeOut)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nconst microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskScheduled = false;\nconst microtaskNode = document.createTextNode('');\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    const cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => {\n          throw e;\n        });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {\n  characterData: true\n});\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) {\n        return window.setTimeout(fn, delay);\n      },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    if (window.cancelIdleCallback) {\n      window.cancelIdleCallback(handle);\n    } else {\n      window.clearTimeout(handle);\n    }\n  }\n};\n\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      microtaskNode.textContent = microtaskNodeContent;\n      microtaskNodeContent += 1;\n    }\n    microtaskCallbacks.push(callback);\n    const result = microtaskCurrHandle;\n    microtaskCurrHandle += 1;\n    return result;\n  },\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error(`invalid async handle: ${handle}`);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvYXN5bmMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvYXN5bmMuanM/YjZhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dFxuICogVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHRcbiAqIFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4dFxuICogQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXMgcGFydCBvZiB0aGUgcG9seW1lciBwcm9qZWN0IGlzIGFsc29cbiAqIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnQgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0XG4gKi9cblxuLyoqXG4gKiBAZmlsZW92ZXJ2aWV3XG4gKlxuICogVGhpcyBtb2R1bGUgcHJvdmlkZXMgYSBudW1iZXIgb2Ygc3RyYXRlZ2llcyBmb3IgZW5xdWV1aW5nIGFzeW5jaHJvbm91c1xuICogdGFza3MuIEVhY2ggc3ViLW1vZHVsZSBwcm92aWRlcyBhIHN0YW5kYXJkIGBydW4oZm4pYCBpbnRlcmZhY2UgdGhhdCByZXR1cm5zIGFcbiAqIGhhbmRsZSwgYW5kIGEgYGNhbmNlbChoYW5kbGUpYCBpbnRlcmZhY2UgZm9yIGNhbmNlbGluZyBhc3luYyB0YXNrcyBiZWZvcmVcbiAqIHRoZXkgcnVuLlxuICpcbiAqIEBzdW1tYXJ5IE1vZHVsZSB0aGF0IHByb3ZpZGVzIGEgbnVtYmVyIG9mIHN0cmF0ZWdpZXMgZm9yIGVucXVldWluZ1xuICogYXN5bmNocm9ub3VzIHRhc2tzLlxuICovXG5cbi8vIE1pY3JvdGFzayBpbXBsZW1lbnRlZCB1c2luZyBNdXRhdGlvbiBPYnNlcnZlclxubGV0IG1pY3JvdGFza0N1cnJIYW5kbGUgPSAwO1xubGV0IG1pY3JvdGFza0xhc3RIYW5kbGUgPSAwO1xuY29uc3QgbWljcm90YXNrQ2FsbGJhY2tzID0gW107XG5sZXQgbWljcm90YXNrTm9kZUNvbnRlbnQgPSAwO1xubGV0IG1pY3JvdGFza1NjaGVkdWxlZCA9IGZhbHNlO1xuY29uc3QgbWljcm90YXNrTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcblxuZnVuY3Rpb24gbWljcm90YXNrRmx1c2goKSB7XG4gIG1pY3JvdGFza1NjaGVkdWxlZCA9IGZhbHNlO1xuICBjb25zdCBsZW4gPSBtaWNyb3Rhc2tDYWxsYmFja3MubGVuZ3RoO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgY29uc3QgY2IgPSBtaWNyb3Rhc2tDYWxsYmFja3NbaV07XG4gICAgaWYgKGNiKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjYigpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgbWljcm90YXNrQ2FsbGJhY2tzLnNwbGljZSgwLCBsZW4pO1xuICBtaWNyb3Rhc2tMYXN0SGFuZGxlICs9IGxlbjtcbn1cblxubmV3IHdpbmRvdy5NdXRhdGlvbk9ic2VydmVyKG1pY3JvdGFza0ZsdXNoKS5vYnNlcnZlKG1pY3JvdGFza05vZGUsIHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9KTtcblxuLyoqXG4gKiBBc3luYyBpbnRlcmZhY2Ugd3JhcHBlciBhcm91bmQgYHNldFRpbWVvdXRgLlxuICpcbiAqIEBuYW1lc3BhY2VcbiAqIEBzdW1tYXJ5IEFzeW5jIGludGVyZmFjZSB3cmFwcGVyIGFyb3VuZCBgc2V0VGltZW91dGAuXG4gKi9cbmNvbnN0IHRpbWVPdXQgPSB7XG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgc3ViLW1vZHVsZSB3aXRoIHRoZSBhc3luYyBpbnRlcmZhY2UgcHJvdmlkaW5nIHRoZSBwcm92aWRlZFxuICAgKiBkZWxheS5cbiAgICpcbiAgICogQG1lbWJlcm9mIHRpbWVPdXRcbiAgICogQHBhcmFtIHtudW1iZXI9fSBkZWxheSBUaW1lIHRvIHdhaXQgYmVmb3JlIGNhbGxpbmcgY2FsbGJhY2tzIGluIG1zXG4gICAqIEByZXR1cm4geyFBc3luY0ludGVyZmFjZX0gQW4gYXN5bmMgdGltZW91dCBpbnRlcmZhY2VcbiAgICovXG4gIGFmdGVyKGRlbGF5KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJ1bihmbikge1xuICAgICAgICByZXR1cm4gd2luZG93LnNldFRpbWVvdXQoZm4sIGRlbGF5KTtcbiAgICAgIH0sXG4gICAgICBjYW5jZWwoaGFuZGxlKSB7XG4gICAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoaGFuZGxlKTtcbiAgICAgIH0sXG4gICAgfTtcbiAgfSxcbiAgLyoqXG4gICAqIEVucXVldWVzIGEgZnVuY3Rpb24gY2FsbGVkIGluIHRoZSBuZXh0IHRhc2suXG4gICAqXG4gICAqIEBtZW1iZXJvZiB0aW1lT3V0XG4gICAqIEBwYXJhbSB7IUZ1bmN0aW9ufSBmbiBDYWxsYmFjayB0byBydW5cbiAgICogQHBhcmFtIHtudW1iZXI9fSBkZWxheSBEZWxheSBpbiBtaWxsaXNlY29uZHNcbiAgICogQHJldHVybiB7bnVtYmVyfSBIYW5kbGUgdXNlZCBmb3IgY2FuY2VsaW5nIHRhc2tcbiAgICovXG4gIHJ1bihmbiwgZGVsYXkpIHtcbiAgICByZXR1cm4gd2luZG93LnNldFRpbWVvdXQoZm4sIGRlbGF5KTtcbiAgfSxcbiAgLyoqXG4gICAqIENhbmNlbHMgYSBwcmV2aW91c2x5IGVucXVldWVkIGB0aW1lT3V0YCBjYWxsYmFjay5cbiAgICpcbiAgICogQG1lbWJlcm9mIHRpbWVPdXRcbiAgICogQHBhcmFtIHtudW1iZXJ9IGhhbmRsZSBIYW5kbGUgcmV0dXJuZWQgZnJvbSBgcnVuYCBvZiBjYWxsYmFjayB0byBjYW5jZWxcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGNhbmNlbChoYW5kbGUpIHtcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGhhbmRsZSk7XG4gIH0sXG59O1xuZXhwb3J0IHsgdGltZU91dCB9O1xuXG4vKipcbiAqIEFzeW5jIGludGVyZmFjZSB3cmFwcGVyIGFyb3VuZCBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYC5cbiAqXG4gKiBAbmFtZXNwYWNlXG4gKiBAc3VtbWFyeSBBc3luYyBpbnRlcmZhY2Ugd3JhcHBlciBhcm91bmQgYHJlcXVlc3RBbmltYXRpb25GcmFtZWAuXG4gKi9cbmNvbnN0IGFuaW1hdGlvbkZyYW1lID0ge1xuICAvKipcbiAgICogRW5xdWV1ZXMgYSBmdW5jdGlvbiBjYWxsZWQgYXQgYHJlcXVlc3RBbmltYXRpb25GcmFtZWAgdGltaW5nLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgYW5pbWF0aW9uRnJhbWVcbiAgICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIpOnZvaWR9IGZuIENhbGxiYWNrIHRvIHJ1blxuICAgKiBAcmV0dXJuIHtudW1iZXJ9IEhhbmRsZSB1c2VkIGZvciBjYW5jZWxpbmcgdGFza1xuICAgKi9cbiAgcnVuKGZuKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZm4pO1xuICB9LFxuICAvKipcbiAgICogQ2FuY2VscyBhIHByZXZpb3VzbHkgZW5xdWV1ZWQgYGFuaW1hdGlvbkZyYW1lYCBjYWxsYmFjay5cbiAgICpcbiAgICogQG1lbWJlcm9mIGFuaW1hdGlvbkZyYW1lXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBoYW5kbGUgSGFuZGxlIHJldHVybmVkIGZyb20gYHJ1bmAgb2YgY2FsbGJhY2sgdG8gY2FuY2VsXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBjYW5jZWwoaGFuZGxlKSB7XG4gICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKGhhbmRsZSk7XG4gIH0sXG59O1xuZXhwb3J0IHsgYW5pbWF0aW9uRnJhbWUgfTtcblxuLyoqXG4gKiBBc3luYyBpbnRlcmZhY2Ugd3JhcHBlciBhcm91bmQgYHJlcXVlc3RJZGxlQ2FsbGJhY2tgLiAgRmFsbHMgYmFjayB0b1xuICogYHNldFRpbWVvdXRgIG9uIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgYHJlcXVlc3RJZGxlQ2FsbGJhY2tgLlxuICpcbiAqIEBuYW1lc3BhY2VcbiAqIEBzdW1tYXJ5IEFzeW5jIGludGVyZmFjZSB3cmFwcGVyIGFyb3VuZCBgcmVxdWVzdElkbGVDYWxsYmFja2AuXG4gKi9cbmNvbnN0IGlkbGVQZXJpb2QgPSB7XG4gIC8qKlxuICAgKiBFbnF1ZXVlcyBhIGZ1bmN0aW9uIGNhbGxlZCBhdCBgcmVxdWVzdElkbGVDYWxsYmFja2AgdGltaW5nLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgaWRsZVBlcmlvZFxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFJZGxlRGVhZGxpbmUpOnZvaWR9IGZuIENhbGxiYWNrIHRvIHJ1blxuICAgKiBAcmV0dXJuIHtudW1iZXJ9IEhhbmRsZSB1c2VkIGZvciBjYW5jZWxpbmcgdGFza1xuICAgKi9cbiAgcnVuKGZuKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5yZXF1ZXN0SWRsZUNhbGxiYWNrID8gd2luZG93LnJlcXVlc3RJZGxlQ2FsbGJhY2soZm4pIDogd2luZG93LnNldFRpbWVvdXQoZm4sIDE2KTtcbiAgfSxcbiAgLyoqXG4gICAqIENhbmNlbHMgYSBwcmV2aW91c2x5IGVucXVldWVkIGBpZGxlUGVyaW9kYCBjYWxsYmFjay5cbiAgICpcbiAgICogQG1lbWJlcm9mIGlkbGVQZXJpb2RcbiAgICogQHBhcmFtIHtudW1iZXJ9IGhhbmRsZSBIYW5kbGUgcmV0dXJuZWQgZnJvbSBgcnVuYCBvZiBjYWxsYmFjayB0byBjYW5jZWxcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIGNhbmNlbChoYW5kbGUpIHtcbiAgICBpZiAod2luZG93LmNhbmNlbElkbGVDYWxsYmFjaykge1xuICAgICAgd2luZG93LmNhbmNlbElkbGVDYWxsYmFjayhoYW5kbGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGhhbmRsZSk7XG4gICAgfVxuICB9LFxufTtcbmV4cG9ydCB7IGlkbGVQZXJpb2QgfTtcblxuLyoqXG4gKiBBc3luYyBpbnRlcmZhY2UgZm9yIGVucXVldWluZyBjYWxsYmFja3MgdGhhdCBydW4gYXQgbWljcm90YXNrIHRpbWluZy5cbiAqXG4gKiBOb3RlIHRoYXQgbWljcm90YXNrIHRpbWluZyBpcyBhY2hpZXZlZCB2aWEgYSBzaW5nbGUgYE11dGF0aW9uT2JzZXJ2ZXJgLFxuICogYW5kIHRodXMgY2FsbGJhY2tzIGVucXVldWVkIHdpdGggdGhpcyBBUEkgd2lsbCBhbGwgcnVuIGluIGEgc2luZ2xlXG4gKiBiYXRjaCwgYW5kIG5vdCBpbnRlcmxlYXZlZCB3aXRoIG90aGVyIG1pY3JvdGFza3Mgc3VjaCBhcyBwcm9taXNlcy5cbiAqIFByb21pc2VzIGFyZSBhdm9pZGVkIGFzIGFuIGltcGxlbWVudGF0aW9uIGNob2ljZSBmb3IgdGhlIHRpbWUgYmVpbmdcbiAqIGR1ZSB0byBTYWZhcmkgYnVncyB0aGF0IGNhdXNlIFByb21pc2VzIHRvIGxhY2sgbWljcm90YXNrIGd1YXJhbnRlZXMuXG4gKlxuICogQG5hbWVzcGFjZVxuICogQHN1bW1hcnkgQXN5bmMgaW50ZXJmYWNlIGZvciBlbnF1ZXVpbmcgY2FsbGJhY2tzIHRoYXQgcnVuIGF0IG1pY3JvdGFza1xuICogICB0aW1pbmcuXG4gKi9cbmNvbnN0IG1pY3JvVGFzayA9IHtcbiAgLyoqXG4gICAqIEVucXVldWVzIGEgZnVuY3Rpb24gY2FsbGVkIGF0IG1pY3JvdGFzayB0aW1pbmcuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBtaWNyb1Rhc2tcbiAgICogQHBhcmFtIHshRnVuY3Rpb249fSBjYWxsYmFjayBDYWxsYmFjayB0byBydW5cbiAgICogQHJldHVybiB7bnVtYmVyfSBIYW5kbGUgdXNlZCBmb3IgY2FuY2VsaW5nIHRhc2tcbiAgICovXG4gIHJ1bihjYWxsYmFjaykge1xuICAgIGlmICghbWljcm90YXNrU2NoZWR1bGVkKSB7XG4gICAgICBtaWNyb3Rhc2tTY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgbWljcm90YXNrTm9kZS50ZXh0Q29udGVudCA9IG1pY3JvdGFza05vZGVDb250ZW50O1xuICAgICAgbWljcm90YXNrTm9kZUNvbnRlbnQgKz0gMTtcbiAgICB9XG4gICAgbWljcm90YXNrQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICAgIGNvbnN0IHJlc3VsdCA9IG1pY3JvdGFza0N1cnJIYW5kbGU7XG4gICAgbWljcm90YXNrQ3VyckhhbmRsZSArPSAxO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIENhbmNlbHMgYSBwcmV2aW91c2x5IGVucXVldWVkIGBtaWNyb1Rhc2tgIGNhbGxiYWNrLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgbWljcm9UYXNrXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBoYW5kbGUgSGFuZGxlIHJldHVybmVkIGZyb20gYHJ1bmAgb2YgY2FsbGJhY2sgdG8gY2FuY2VsXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBjYW5jZWwoaGFuZGxlKSB7XG4gICAgY29uc3QgaWR4ID0gaGFuZGxlIC0gbWljcm90YXNrTGFzdEhhbmRsZTtcbiAgICBpZiAoaWR4ID49IDApIHtcbiAgICAgIGlmICghbWljcm90YXNrQ2FsbGJhY2tzW2lkeF0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBpbnZhbGlkIGFzeW5jIGhhbmRsZTogJHtoYW5kbGV9YCk7XG4gICAgICB9XG4gICAgICBtaWNyb3Rhc2tDYWxsYmFja3NbaWR4XSA9IG51bGw7XG4gICAgfVxuICB9LFxufTtcbmV4cG9ydCB7IG1pY3JvVGFzayB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/async.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/browser-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/browser-utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAndroid: () => (/* binding */ isAndroid),\n/* harmony export */   isChrome: () => (/* binding */ isChrome),\n/* harmony export */   isFirefox: () => (/* binding */ isFirefox),\n/* harmony export */   isIOS: () => (/* binding */ isIOS),\n/* harmony export */   isIPad: () => (/* binding */ isIPad),\n/* harmony export */   isIPhone: () => (/* binding */ isIPhone),\n/* harmony export */   isSafari: () => (/* binding */ isSafari),\n/* harmony export */   isTouch: () => (/* binding */ isTouch)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst testUserAgent = regexp => regexp.test(navigator.userAgent);\nconst testPlatform = regexp => regexp.test(navigator.platform);\nconst testVendor = regexp => regexp.test(navigator.vendor);\nconst isAndroid = testUserAgent(/Android/u);\nconst isChrome = testUserAgent(/Chrome/u) && testVendor(/Google Inc/u);\nconst isFirefox = testUserAgent(/Firefox/u);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nconst isIPad = testPlatform(/^iPad/u) || testPlatform(/^Mac/u) && navigator.maxTouchPoints > 1;\nconst isIPhone = testPlatform(/^iPhone/u);\nconst isIOS = isIPhone || isIPad;\nconst isSafari = testUserAgent(/^((?!chrome|android).)*safari/iu);\nconst isTouch = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvYnJvd3Nlci11dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBOztBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvYnJvd3Nlci11dGlscy5qcz85ZTMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG5jb25zdCB0ZXN0VXNlckFnZW50ID0gKHJlZ2V4cCkgPT4gcmVnZXhwLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG5cbmNvbnN0IHRlc3RQbGF0Zm9ybSA9IChyZWdleHApID0+IHJlZ2V4cC50ZXN0KG5hdmlnYXRvci5wbGF0Zm9ybSk7XG5cbmNvbnN0IHRlc3RWZW5kb3IgPSAocmVnZXhwKSA9PiByZWdleHAudGVzdChuYXZpZ2F0b3IudmVuZG9yKTtcblxuZXhwb3J0IGNvbnN0IGlzQW5kcm9pZCA9IHRlc3RVc2VyQWdlbnQoL0FuZHJvaWQvdSk7XG5cbmV4cG9ydCBjb25zdCBpc0Nocm9tZSA9IHRlc3RVc2VyQWdlbnQoL0Nocm9tZS91KSAmJiB0ZXN0VmVuZG9yKC9Hb29nbGUgSW5jL3UpO1xuXG5leHBvcnQgY29uc3QgaXNGaXJlZm94ID0gdGVzdFVzZXJBZ2VudCgvRmlyZWZveC91KTtcblxuLy8gSVBhZE9TIDEzIGxpZXMgYW5kIHNheXMgaXQncyBhIE1hYywgYnV0IHdlIGNhbiBkaXN0aW5ndWlzaCBieSBkZXRlY3RpbmcgdG91Y2ggc3VwcG9ydC5cbmV4cG9ydCBjb25zdCBpc0lQYWQgPSB0ZXN0UGxhdGZvcm0oL15pUGFkL3UpIHx8ICh0ZXN0UGxhdGZvcm0oL15NYWMvdSkgJiYgbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzID4gMSk7XG5cbmV4cG9ydCBjb25zdCBpc0lQaG9uZSA9IHRlc3RQbGF0Zm9ybSgvXmlQaG9uZS91KTtcblxuZXhwb3J0IGNvbnN0IGlzSU9TID0gaXNJUGhvbmUgfHwgaXNJUGFkO1xuXG5leHBvcnQgY29uc3QgaXNTYWZhcmkgPSB0ZXN0VXNlckFnZW50KC9eKCg/IWNocm9tZXxhbmRyb2lkKS4pKnNhZmFyaS9pdSk7XG5cbmV4cG9ydCBjb25zdCBpc1RvdWNoID0gKCgpID0+IHtcbiAgdHJ5IHtcbiAgICBkb2N1bWVudC5jcmVhdGVFdmVudCgnVG91Y2hFdmVudCcpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59KSgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/browser-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/controller-mixin.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/controller-mixin.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControllerMixin: () => (/* binding */ ControllerMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @typedef ReactiveController\n * @type {import('lit').ReactiveController}\n */\n\n/**\n * A mixin for connecting controllers to the element.\n *\n * @polymerMixin\n */\nconst ControllerMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superClass => class ControllerMixinClass extends superClass {\n  constructor() {\n    super();\n\n    /**\n     * @type {Set<ReactiveController>}\n     */\n    this.__controllers = new Set();\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__controllers.forEach(c => {\n      if (c.hostConnected) {\n        c.hostConnected();\n      }\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__controllers.forEach(c => {\n      if (c.hostDisconnected) {\n        c.hostDisconnected();\n      }\n    });\n  }\n\n  /**\n   * Registers a controller to participate in the element update cycle.\n   *\n   * @param {ReactiveController} controller\n   * @protected\n   */\n  addController(controller) {\n    this.__controllers.add(controller);\n    // Call hostConnected if a controller is added after the element is attached.\n    if (this.$ !== undefined && this.isConnected && controller.hostConnected) {\n      controller.hostConnected();\n    }\n  }\n\n  /**\n   * Removes a controller from the element.\n   *\n   * @param {ReactiveController} controller\n   * @protected\n   */\n  removeController(controller) {\n    this.__controllers.delete(controller);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvY29udHJvbGxlci1taXhpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2NvbnRyb2xsZXItbWl4aW4uanM/YTlhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRlZHVwaW5nTWl4aW4gfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9taXhpbi5qcyc7XG5cbi8qKlxuICogQHR5cGVkZWYgUmVhY3RpdmVDb250cm9sbGVyXG4gKiBAdHlwZSB7aW1wb3J0KCdsaXQnKS5SZWFjdGl2ZUNvbnRyb2xsZXJ9XG4gKi9cblxuLyoqXG4gKiBBIG1peGluIGZvciBjb25uZWN0aW5nIGNvbnRyb2xsZXJzIHRvIHRoZSBlbGVtZW50LlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbnRyb2xsZXJNaXhpbiA9IGRlZHVwaW5nTWl4aW4oXG4gIChzdXBlckNsYXNzKSA9PlxuICAgIGNsYXNzIENvbnRyb2xsZXJNaXhpbkNsYXNzIGV4dGVuZHMgc3VwZXJDbGFzcyB7XG4gICAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHR5cGUge1NldDxSZWFjdGl2ZUNvbnRyb2xsZXI+fVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5fX2NvbnRyb2xsZXJzID0gbmV3IFNldCgpO1xuICAgICAgfVxuXG4gICAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICAgICAgdGhpcy5fX2NvbnRyb2xsZXJzLmZvckVhY2goKGMpID0+IHtcbiAgICAgICAgICBpZiAoYy5ob3N0Q29ubmVjdGVkKSB7XG4gICAgICAgICAgICBjLmhvc3RDb25uZWN0ZWQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgIHN1cGVyLmRpc2Nvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICAgICAgdGhpcy5fX2NvbnRyb2xsZXJzLmZvckVhY2goKGMpID0+IHtcbiAgICAgICAgICBpZiAoYy5ob3N0RGlzY29ubmVjdGVkKSB7XG4gICAgICAgICAgICBjLmhvc3REaXNjb25uZWN0ZWQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFJlZ2lzdGVycyBhIGNvbnRyb2xsZXIgdG8gcGFydGljaXBhdGUgaW4gdGhlIGVsZW1lbnQgdXBkYXRlIGN5Y2xlLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7UmVhY3RpdmVDb250cm9sbGVyfSBjb250cm9sbGVyXG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIGFkZENvbnRyb2xsZXIoY29udHJvbGxlcikge1xuICAgICAgICB0aGlzLl9fY29udHJvbGxlcnMuYWRkKGNvbnRyb2xsZXIpO1xuICAgICAgICAvLyBDYWxsIGhvc3RDb25uZWN0ZWQgaWYgYSBjb250cm9sbGVyIGlzIGFkZGVkIGFmdGVyIHRoZSBlbGVtZW50IGlzIGF0dGFjaGVkLlxuICAgICAgICBpZiAodGhpcy4kICE9PSB1bmRlZmluZWQgJiYgdGhpcy5pc0Nvbm5lY3RlZCAmJiBjb250cm9sbGVyLmhvc3RDb25uZWN0ZWQpIHtcbiAgICAgICAgICBjb250cm9sbGVyLmhvc3RDb25uZWN0ZWQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFJlbW92ZXMgYSBjb250cm9sbGVyIGZyb20gdGhlIGVsZW1lbnQuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtSZWFjdGl2ZUNvbnRyb2xsZXJ9IGNvbnRyb2xsZXJcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgcmVtb3ZlQ29udHJvbGxlcihjb250cm9sbGVyKSB7XG4gICAgICAgIHRoaXMuX19jb250cm9sbGVycy5kZWxldGUoY29udHJvbGxlcik7XG4gICAgICB9XG4gICAgfSxcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/controller-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/debounce.js":
/*!*************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/debounce.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Debouncer: () => (/* binding */ Debouncer),\n/* harmony export */   enqueueDebouncer: () => (/* binding */ enqueueDebouncer),\n/* harmony export */   flush: () => (/* binding */ flush),\n/* harmony export */   flushDebouncers: () => (/* binding */ flushDebouncers)\n/* harmony export */ });\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst debouncerQueue = new Set();\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nclass Debouncer {\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@vaadin/component-base/src/async.js';\n   * import {Debouncer} from '@vaadin/component-base/src/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel( /** @type {number} */this._timer);\n      this._timer = null;\n    }\n  }\n\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n}\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nfunction enqueueDebouncer(debouncer) {\n  debouncerQueue.add(debouncer);\n}\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nfunction flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach(debouncer => {\n    try {\n      debouncer.flush();\n    } catch (e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n}\nconst flush = () => {\n  let debouncers;\n  do {\n    debouncers = flushDebouncers();\n  } while (debouncers);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/debounce.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/dir-mixin.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/dir-mixin.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DirMixin: () => (/* binding */ DirMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\nfunction alignDirs(element, documentDir, elementDir = element.getAttribute('dir')) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else if (elementDir != null) {\n    element.removeAttribute('dir');\n  }\n}\nfunction getDocumentDir() {\n  return document.documentElement.getAttribute('dir');\n}\nfunction directionUpdater() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach(element => {\n    alignDirs(element, documentDir);\n  });\n}\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, {\n  attributes: true,\n  attributeFilter: ['dir']\n});\n\n/**\n * A mixin to handle `dir` attribute based on the one set on the `<html>` element.\n *\n * @polymerMixin\n */\nconst DirMixin = superClass => class VaadinDirMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * @protected\n       */\n      dir: {\n        type: String,\n        value: '',\n        reflectToAttribute: true,\n        converter: {\n          fromAttribute: attr => {\n            return !attr ? '' : attr;\n          },\n          toAttribute: prop => {\n            return prop === '' ? null : prop;\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  get __isRTL() {\n    return this.getAttribute('dir') === 'rtl';\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.hasAttribute('dir') || this.__restoreSubscription) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir(), null);\n    }\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name !== 'dir') {\n      return;\n    }\n    const documentDir = getDocumentDir();\n\n    // New value equals to the document direction and the element is not subscribed to the changes\n    const newValueEqlDocDir = newValue === documentDir && directionSubscribers.indexOf(this) === -1;\n    // Value was emptied and the element is not subscribed to the changes\n    const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n    // New value is different and the old equals to document direction and the element is not subscribed to the changes\n    const newDiffValue = newValue !== documentDir && oldValue === documentDir;\n    if (newValueEqlDocDir || newValueEmptied) {\n      this.__subscribe();\n      alignDirs(this, documentDir, newValue);\n    } else if (newDiffValue) {\n      this.__unsubscribe();\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__restoreSubscription = directionSubscribers.includes(this);\n    this.__unsubscribe();\n  }\n\n  /** @protected */\n  _valueToNodeAttribute(node, value, attribute) {\n    // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n    // If the property contains an empty string then it should not create an empty attribute\n    if (attribute === 'dir' && value === '' && !node.hasAttribute('dir')) {\n      return;\n    }\n    super._valueToNodeAttribute(node, value, attribute);\n  }\n\n  /** @protected */\n  _attributeToProperty(attribute, value, type) {\n    // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n    // If the attribute is removed, then the dir property should contain an empty string instead of null\n    if (attribute === 'dir' && !value) {\n      this.dir = '';\n    } else {\n      super._attributeToProperty(attribute, value, type);\n    }\n  }\n\n  /** @private */\n  __subscribe() {\n    if (!directionSubscribers.includes(this)) {\n      directionSubscribers.push(this);\n    }\n  }\n\n  /** @private */\n  __unsubscribe() {\n    if (directionSubscribers.includes(this)) {\n      directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGlyLW1peGluLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2Rpci1taXhpbi5qcz9jY2QyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIEFycmF5IG9mIFZhYWRpbiBjdXN0b20gZWxlbWVudCBjbGFzc2VzIHRoYXQgaGF2ZSBiZWVuIHN1YnNjcmliZWQgdG8gdGhlIGRpciBjaGFuZ2VzLlxuICovXG5jb25zdCBkaXJlY3Rpb25TdWJzY3JpYmVycyA9IFtdO1xuXG5mdW5jdGlvbiBhbGlnbkRpcnMoZWxlbWVudCwgZG9jdW1lbnREaXIsIGVsZW1lbnREaXIgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGlyJykpIHtcbiAgaWYgKGRvY3VtZW50RGlyKSB7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RpcicsIGRvY3VtZW50RGlyKTtcbiAgfSBlbHNlIGlmIChlbGVtZW50RGlyICE9IG51bGwpIHtcbiAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGlyJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RG9jdW1lbnREaXIoKSB7XG4gIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkaXInKTtcbn1cblxuZnVuY3Rpb24gZGlyZWN0aW9uVXBkYXRlcigpIHtcbiAgY29uc3QgZG9jdW1lbnREaXIgPSBnZXREb2N1bWVudERpcigpO1xuICBkaXJlY3Rpb25TdWJzY3JpYmVycy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgYWxpZ25EaXJzKGVsZW1lbnQsIGRvY3VtZW50RGlyKTtcbiAgfSk7XG59XG5cbmNvbnN0IGRpcmVjdGlvbk9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZGlyZWN0aW9uVXBkYXRlcik7XG5kaXJlY3Rpb25PYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgeyBhdHRyaWJ1dGVzOiB0cnVlLCBhdHRyaWJ1dGVGaWx0ZXI6IFsnZGlyJ10gfSk7XG5cbi8qKlxuICogQSBtaXhpbiB0byBoYW5kbGUgYGRpcmAgYXR0cmlidXRlIGJhc2VkIG9uIHRoZSBvbmUgc2V0IG9uIHRoZSBgPGh0bWw+YCBlbGVtZW50LlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IERpck1peGluID0gKHN1cGVyQ2xhc3MpID0+XG4gIGNsYXNzIFZhYWRpbkRpck1peGluIGV4dGVuZHMgc3VwZXJDbGFzcyB7XG4gICAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIGRpcjoge1xuICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgICAgIGNvbnZlcnRlcjoge1xuICAgICAgICAgICAgZnJvbUF0dHJpYnV0ZTogKGF0dHIpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuICFhdHRyID8gJycgOiBhdHRyO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRvQXR0cmlidXRlOiAocHJvcCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcCA9PT0gJycgPyBudWxsIDogcHJvcDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgZ2V0IF9faXNSVEwoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoJ2RpcicpID09PSAncnRsJztcbiAgICB9XG5cbiAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgICAgaWYgKCF0aGlzLmhhc0F0dHJpYnV0ZSgnZGlyJykgfHwgdGhpcy5fX3Jlc3RvcmVTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgdGhpcy5fX3N1YnNjcmliZSgpO1xuICAgICAgICBhbGlnbkRpcnModGhpcywgZ2V0RG9jdW1lbnREaXIoKSwgbnVsbCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKSB7XG4gICAgICBzdXBlci5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKTtcbiAgICAgIGlmIChuYW1lICE9PSAnZGlyJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRvY3VtZW50RGlyID0gZ2V0RG9jdW1lbnREaXIoKTtcblxuICAgICAgLy8gTmV3IHZhbHVlIGVxdWFscyB0byB0aGUgZG9jdW1lbnQgZGlyZWN0aW9uIGFuZCB0aGUgZWxlbWVudCBpcyBub3Qgc3Vic2NyaWJlZCB0byB0aGUgY2hhbmdlc1xuICAgICAgY29uc3QgbmV3VmFsdWVFcWxEb2NEaXIgPSBuZXdWYWx1ZSA9PT0gZG9jdW1lbnREaXIgJiYgZGlyZWN0aW9uU3Vic2NyaWJlcnMuaW5kZXhPZih0aGlzKSA9PT0gLTE7XG4gICAgICAvLyBWYWx1ZSB3YXMgZW1wdGllZCBhbmQgdGhlIGVsZW1lbnQgaXMgbm90IHN1YnNjcmliZWQgdG8gdGhlIGNoYW5nZXNcbiAgICAgIGNvbnN0IG5ld1ZhbHVlRW1wdGllZCA9ICFuZXdWYWx1ZSAmJiBvbGRWYWx1ZSAmJiBkaXJlY3Rpb25TdWJzY3JpYmVycy5pbmRleE9mKHRoaXMpID09PSAtMTtcbiAgICAgIC8vIE5ldyB2YWx1ZSBpcyBkaWZmZXJlbnQgYW5kIHRoZSBvbGQgZXF1YWxzIHRvIGRvY3VtZW50IGRpcmVjdGlvbiBhbmQgdGhlIGVsZW1lbnQgaXMgbm90IHN1YnNjcmliZWQgdG8gdGhlIGNoYW5nZXNcbiAgICAgIGNvbnN0IG5ld0RpZmZWYWx1ZSA9IG5ld1ZhbHVlICE9PSBkb2N1bWVudERpciAmJiBvbGRWYWx1ZSA9PT0gZG9jdW1lbnREaXI7XG5cbiAgICAgIGlmIChuZXdWYWx1ZUVxbERvY0RpciB8fCBuZXdWYWx1ZUVtcHRpZWQpIHtcbiAgICAgICAgdGhpcy5fX3N1YnNjcmliZSgpO1xuICAgICAgICBhbGlnbkRpcnModGhpcywgZG9jdW1lbnREaXIsIG5ld1ZhbHVlKTtcbiAgICAgIH0gZWxzZSBpZiAobmV3RGlmZlZhbHVlKSB7XG4gICAgICAgIHRoaXMuX191bnN1YnNjcmliZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgICAgdGhpcy5fX3Jlc3RvcmVTdWJzY3JpcHRpb24gPSBkaXJlY3Rpb25TdWJzY3JpYmVycy5pbmNsdWRlcyh0aGlzKTtcbiAgICAgIHRoaXMuX191bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgX3ZhbHVlVG9Ob2RlQXR0cmlidXRlKG5vZGUsIHZhbHVlLCBhdHRyaWJ1dGUpIHtcbiAgICAgIC8vIE92ZXJyaWRlIGRlZmF1bHQgUG9seW1lciBhdHRyaWJ1dGUgcmVmbGVjdGlvbiB0byBtYXRjaCBuYXRpdmUgYmVoYXZpb3Igb2YgSFRNTEVsZW1lbnQuZGlyIHByb3BlcnR5XG4gICAgICAvLyBJZiB0aGUgcHJvcGVydHkgY29udGFpbnMgYW4gZW1wdHkgc3RyaW5nIHRoZW4gaXQgc2hvdWxkIG5vdCBjcmVhdGUgYW4gZW1wdHkgYXR0cmlidXRlXG4gICAgICBpZiAoYXR0cmlidXRlID09PSAnZGlyJyAmJiB2YWx1ZSA9PT0gJycgJiYgIW5vZGUuaGFzQXR0cmlidXRlKCdkaXInKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzdXBlci5fdmFsdWVUb05vZGVBdHRyaWJ1dGUobm9kZSwgdmFsdWUsIGF0dHJpYnV0ZSk7XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBfYXR0cmlidXRlVG9Qcm9wZXJ0eShhdHRyaWJ1dGUsIHZhbHVlLCB0eXBlKSB7XG4gICAgICAvLyBPdmVycmlkZSBkZWZhdWx0IFBvbHltZXIgYXR0cmlidXRlIHJlZmxlY3Rpb24gdG8gbWF0Y2ggbmF0aXZlIGJlaGF2aW9yIG9mIEhUTUxFbGVtZW50LmRpciBwcm9wZXJ0eVxuICAgICAgLy8gSWYgdGhlIGF0dHJpYnV0ZSBpcyByZW1vdmVkLCB0aGVuIHRoZSBkaXIgcHJvcGVydHkgc2hvdWxkIGNvbnRhaW4gYW4gZW1wdHkgc3RyaW5nIGluc3RlYWQgb2YgbnVsbFxuICAgICAgaWYgKGF0dHJpYnV0ZSA9PT0gJ2RpcicgJiYgIXZhbHVlKSB7XG4gICAgICAgIHRoaXMuZGlyID0gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdXBlci5fYXR0cmlidXRlVG9Qcm9wZXJ0eShhdHRyaWJ1dGUsIHZhbHVlLCB0eXBlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfX3N1YnNjcmliZSgpIHtcbiAgICAgIGlmICghZGlyZWN0aW9uU3Vic2NyaWJlcnMuaW5jbHVkZXModGhpcykpIHtcbiAgICAgICAgZGlyZWN0aW9uU3Vic2NyaWJlcnMucHVzaCh0aGlzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICBfX3Vuc3Vic2NyaWJlKCkge1xuICAgICAgaWYgKGRpcmVjdGlvblN1YnNjcmliZXJzLmluY2x1ZGVzKHRoaXMpKSB7XG4gICAgICAgIGRpcmVjdGlvblN1YnNjcmliZXJzLnNwbGljZShkaXJlY3Rpb25TdWJzY3JpYmVycy5pbmRleE9mKHRoaXMpLCAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/dir-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/disabled-mixin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/disabled-mixin.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DisabledMixin: () => (/* binding */ DisabledMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nconst DisabledMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class DisabledMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _disabledChanged(disabled) {\n    this._setAriaDisabled(disabled);\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _setAriaDisabled(disabled) {\n    if (disabled) {\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  /**\n   * Overrides the default element `click` method in order to prevent\n   * firing the `click` event when the element is disabled.\n   * @protected\n   * @override\n   */\n  click() {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGlzYWJsZWQtbWl4aW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9kaXNhYmxlZC1taXhpbi5qcz80YTJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgZGVkdXBpbmdNaXhpbiB9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL21peGluLmpzJztcblxuLyoqXG4gKiBBIG1peGluIHRvIHByb3ZpZGUgZGlzYWJsZWQgcHJvcGVydHkgZm9yIGZpZWxkIGNvbXBvbmVudHMuXG4gKlxuICogQHBvbHltZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgRGlzYWJsZWRNaXhpbiA9IGRlZHVwaW5nTWl4aW4oXG4gIChzdXBlcmNsYXNzKSA9PlxuICAgIGNsYXNzIERpc2FibGVkTWl4aW5DbGFzcyBleHRlbmRzIHN1cGVyY2xhc3Mge1xuICAgICAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIElmIHRydWUsIHRoZSB1c2VyIGNhbm5vdCBpbnRlcmFjdCB3aXRoIHRoaXMgZWxlbWVudC5cbiAgICAgICAgICAgKi9cbiAgICAgICAgICBkaXNhYmxlZDoge1xuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgICAgICAgIG9ic2VydmVyOiAnX2Rpc2FibGVkQ2hhbmdlZCcsXG4gICAgICAgICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRpc2FibGVkXG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIF9kaXNhYmxlZENoYW5nZWQoZGlzYWJsZWQpIHtcbiAgICAgICAgdGhpcy5fc2V0QXJpYURpc2FibGVkKGRpc2FibGVkKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRpc2FibGVkXG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIF9zZXRBcmlhRGlzYWJsZWQoZGlzYWJsZWQpIHtcbiAgICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2FyaWEtZGlzYWJsZWQnLCAndHJ1ZScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWRpc2FibGVkJyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBPdmVycmlkZXMgdGhlIGRlZmF1bHQgZWxlbWVudCBgY2xpY2tgIG1ldGhvZCBpbiBvcmRlciB0byBwcmV2ZW50XG4gICAgICAgKiBmaXJpbmcgdGhlIGBjbGlja2AgZXZlbnQgd2hlbiB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZC5cbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqIEBvdmVycmlkZVxuICAgICAgICovXG4gICAgICBjbGljaygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICAgICAgc3VwZXIuY2xpY2soKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/disabled-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/dom-utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/dom-utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addValueToAttribute: () => (/* binding */ addValueToAttribute),\n/* harmony export */   getAncestorRootNodes: () => (/* binding */ getAncestorRootNodes),\n/* harmony export */   isEmptyTextNode: () => (/* binding */ isEmptyTextNode),\n/* harmony export */   removeValueFromAttribute: () => (/* binding */ removeValueFromAttribute)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns an array of ancestor root nodes for the given node.\n *\n * A root node is either a document node or a document fragment node (Shadow Root).\n * The array is collected by a bottom-up DOM traversing that starts with the given node\n * and involves both the light DOM and ancestor shadow DOM trees.\n *\n * @param {Node} node\n * @return {Node[]}\n */\nfunction getAncestorRootNodes(node) {\n  const result = [];\n  while (node) {\n    if (node.nodeType === Node.DOCUMENT_NODE) {\n      result.push(node);\n      break;\n    }\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      result.push(node);\n      node = node.host;\n      continue;\n    }\n    if (node.assignedSlot) {\n      node = node.assignedSlot;\n      continue;\n    }\n    node = node.parentNode;\n  }\n  return result;\n}\n\n/**\n * @param {string} value\n * @return {Set<string>}\n */\nfunction deserializeAttributeValue(value) {\n  if (!value) {\n    return new Set();\n  }\n  return new Set(value.split(' '));\n}\n\n/**\n * @param {Set<string>} values\n * @return {string}\n */\nfunction serializeAttributeValue(values) {\n  return [...values].join(' ');\n}\n\n/**\n * Adds a value to an attribute containing space-delimited values.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nfunction addValueToAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.add(value);\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Removes a value from an attribute containing space-delimited values.\n * If the value is the last one, the whole attribute is removed.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nfunction removeValueFromAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.delete(value);\n  if (values.size === 0) {\n    element.removeAttribute(attr);\n    return;\n  }\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Returns true if the given node is an empty text node, false otherwise.\n *\n * @param {Node} node\n * @return {boolean}\n */\nfunction isEmptyTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE && node.textContent.trim() === '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZG9tLXV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9kb20tdXRpbHMuanM/MGYzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cblxuLyoqXG4gKiBSZXR1cm5zIGFuIGFycmF5IG9mIGFuY2VzdG9yIHJvb3Qgbm9kZXMgZm9yIHRoZSBnaXZlbiBub2RlLlxuICpcbiAqIEEgcm9vdCBub2RlIGlzIGVpdGhlciBhIGRvY3VtZW50IG5vZGUgb3IgYSBkb2N1bWVudCBmcmFnbWVudCBub2RlIChTaGFkb3cgUm9vdCkuXG4gKiBUaGUgYXJyYXkgaXMgY29sbGVjdGVkIGJ5IGEgYm90dG9tLXVwIERPTSB0cmF2ZXJzaW5nIHRoYXQgc3RhcnRzIHdpdGggdGhlIGdpdmVuIG5vZGVcbiAqIGFuZCBpbnZvbHZlcyBib3RoIHRoZSBsaWdodCBET00gYW5kIGFuY2VzdG9yIHNoYWRvdyBET00gdHJlZXMuXG4gKlxuICogQHBhcmFtIHtOb2RlfSBub2RlXG4gKiBAcmV0dXJuIHtOb2RlW119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRBbmNlc3RvclJvb3ROb2Rlcyhub2RlKSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuXG4gIHdoaWxlIChub2RlKSB7XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IE5vZGUuRE9DVU1FTlRfTk9ERSkge1xuICAgICAgcmVzdWx0LnB1c2gobm9kZSk7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5ET0NVTUVOVF9GUkFHTUVOVF9OT0RFKSB7XG4gICAgICByZXN1bHQucHVzaChub2RlKTtcbiAgICAgIG5vZGUgPSBub2RlLmhvc3Q7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAobm9kZS5hc3NpZ25lZFNsb3QpIHtcbiAgICAgIG5vZGUgPSBub2RlLmFzc2lnbmVkU2xvdDtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHJldHVybiB7U2V0PHN0cmluZz59XG4gKi9cbmZ1bmN0aW9uIGRlc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSkge1xuICAgIHJldHVybiBuZXcgU2V0KCk7XG4gIH1cblxuICByZXR1cm4gbmV3IFNldCh2YWx1ZS5zcGxpdCgnICcpKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1NldDxzdHJpbmc+fSB2YWx1ZXNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWVzKSB7XG4gIHJldHVybiBbLi4udmFsdWVzXS5qb2luKCcgJyk7XG59XG5cbi8qKlxuICogQWRkcyBhIHZhbHVlIHRvIGFuIGF0dHJpYnV0ZSBjb250YWluaW5nIHNwYWNlLWRlbGltaXRlZCB2YWx1ZXMuXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtzdHJpbmd9IGF0dHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRkVmFsdWVUb0F0dHJpYnV0ZShlbGVtZW50LCBhdHRyLCB2YWx1ZSkge1xuICBjb25zdCB2YWx1ZXMgPSBkZXNlcmlhbGl6ZUF0dHJpYnV0ZVZhbHVlKGVsZW1lbnQuZ2V0QXR0cmlidXRlKGF0dHIpKTtcbiAgdmFsdWVzLmFkZCh2YWx1ZSk7XG4gIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHIsIHNlcmlhbGl6ZUF0dHJpYnV0ZVZhbHVlKHZhbHVlcykpO1xufVxuXG4vKipcbiAqIFJlbW92ZXMgYSB2YWx1ZSBmcm9tIGFuIGF0dHJpYnV0ZSBjb250YWluaW5nIHNwYWNlLWRlbGltaXRlZCB2YWx1ZXMuXG4gKiBJZiB0aGUgdmFsdWUgaXMgdGhlIGxhc3Qgb25lLCB0aGUgd2hvbGUgYXR0cmlidXRlIGlzIHJlbW92ZWQuXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtzdHJpbmd9IGF0dHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlVmFsdWVGcm9tQXR0cmlidXRlKGVsZW1lbnQsIGF0dHIsIHZhbHVlKSB7XG4gIGNvbnN0IHZhbHVlcyA9IGRlc2VyaWFsaXplQXR0cmlidXRlVmFsdWUoZWxlbWVudC5nZXRBdHRyaWJ1dGUoYXR0cikpO1xuICB2YWx1ZXMuZGVsZXRlKHZhbHVlKTtcbiAgaWYgKHZhbHVlcy5zaXplID09PSAwKSB7XG4gICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gICAgcmV0dXJuO1xuICB9XG4gIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHIsIHNlcmlhbGl6ZUF0dHJpYnV0ZVZhbHVlKHZhbHVlcykpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gbm9kZSBpcyBhbiBlbXB0eSB0ZXh0IG5vZGUsIGZhbHNlIG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0VtcHR5VGV4dE5vZGUobm9kZSkge1xuICByZXR1cm4gbm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5URVhUX05PREUgJiYgbm9kZS50ZXh0Q29udGVudC50cmltKCkgPT09ICcnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/dom-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/focus-trap-controller.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/focus-trap-controller.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusTrapController: () => (/* binding */ FocusTrapController)\n/* harmony export */ });\n/* harmony import */ var _focus_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focus-utils.js */ \"./node_modules/@vaadin/component-base/src/focus-utils.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst instances = [];\n\n/**\n * A controller for trapping focus within a DOM node.\n */\nclass FocusTrapController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * A node for trapping focus in.\n     *\n     * @type {HTMLElement | null}\n     * @private\n     */\n    this.__trapNode = null;\n    this.__onKeyDown = this.__onKeyDown.bind(this);\n  }\n\n  /**\n   * An array of tab-ordered focusable elements inside the trap node.\n   *\n   * @return {HTMLElement[]}\n   * @private\n   */\n  get __focusableElements() {\n    return (0,_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.getFocusableElements)(this.__trapNode);\n  }\n\n  /**\n   * The index of the element inside the trap node that currently has focus.\n   *\n   * @return {HTMLElement | undefined}\n   * @private\n   */\n  get __focusedElementIndex() {\n    const focusableElements = this.__focusableElements;\n    return focusableElements.indexOf(focusableElements.filter(_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.isElementFocused).pop());\n  }\n  hostConnected() {\n    document.addEventListener('keydown', this.__onKeyDown);\n  }\n  hostDisconnected() {\n    document.removeEventListener('keydown', this.__onKeyDown);\n  }\n\n  /**\n   * Activates a focus trap for a DOM node that will prevent focus from escaping the node.\n   * The trap can be deactivated with the `.releaseFocus()` method.\n   *\n   * If focus is initially outside the trap, the method will move focus inside,\n   * on the first focusable element of the trap in the tab order.\n   * The first focusable element can be the trap node itself if it is focusable\n   * and comes first in the tab order.\n   *\n   * If there are no focusable elements, the method will throw an exception\n   * and the trap will not be set.\n   *\n   * @param {HTMLElement} trapNode\n   */\n  trapFocus(trapNode) {\n    this.__trapNode = trapNode;\n    if (this.__focusableElements.length === 0) {\n      this.__trapNode = null;\n      throw new Error('The trap node should have at least one focusable descendant or be focusable itself.');\n    }\n    instances.push(this);\n    if (this.__focusedElementIndex === -1) {\n      this.__focusableElements[0].focus();\n    }\n  }\n\n  /**\n   * Deactivates the focus trap set with the `.trapFocus()` method\n   * so that it becomes possible to tab outside the trap node.\n   */\n  releaseFocus() {\n    this.__trapNode = null;\n    instances.pop();\n  }\n\n  /**\n   * A `keydown` event handler that manages tabbing navigation when the trap is enabled.\n   *\n   * - Moves focus to the next focusable element of the trap on `Tab` press.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element of the trap on `Shift+Tab` press.\n   * When no prev element to focus, the method moves focus to the last focusable element.\n   *\n   * @param {KeyboardEvent} event\n   * @private\n   */\n  __onKeyDown(event) {\n    if (!this.__trapNode) {\n      return;\n    }\n\n    // Only handle events for the last instance\n    if (this !== Array.from(instances).pop()) {\n      return;\n    }\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      const backward = event.shiftKey;\n      this.__focusNextElement(backward);\n    }\n  }\n\n  /**\n   * - Moves focus to the next focusable element if `backward === false`.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element if `backward === true`.\n   * When no prev element to focus the method moves focus to the last focusable element.\n   *\n   * If no focusable elements, the method returns immediately.\n   *\n   * @param {boolean} backward\n   * @private\n   */\n  __focusNextElement(backward = false) {\n    const focusableElements = this.__focusableElements;\n    const step = backward ? -1 : 1;\n    const currentIndex = this.__focusedElementIndex;\n    const nextIndex = (focusableElements.length + currentIndex + step) % focusableElements.length;\n    const element = focusableElements[nextIndex];\n    element.focus();\n    if (element.localName === 'input') {\n      element.select();\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZm9jdXMtdHJhcC1jb250cm9sbGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9mb2N1cy10cmFwLWNvbnRyb2xsZXIuanM/YmYwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGdldEZvY3VzYWJsZUVsZW1lbnRzLCBpc0VsZW1lbnRGb2N1c2VkIH0gZnJvbSAnLi9mb2N1cy11dGlscy5qcyc7XG5cbmNvbnN0IGluc3RhbmNlcyA9IFtdO1xuXG4vKipcbiAqIEEgY29udHJvbGxlciBmb3IgdHJhcHBpbmcgZm9jdXMgd2l0aGluIGEgRE9NIG5vZGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBGb2N1c1RyYXBDb250cm9sbGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGhvc3RcbiAgICovXG4gIGNvbnN0cnVjdG9yKGhvc3QpIHtcbiAgICAvKipcbiAgICAgKiBUaGUgY29udHJvbGxlciBob3N0IGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gICAgICovXG4gICAgdGhpcy5ob3N0ID0gaG9zdDtcblxuICAgIC8qKlxuICAgICAqIEEgbm9kZSBmb3IgdHJhcHBpbmcgZm9jdXMgaW4uXG4gICAgICpcbiAgICAgKiBAdHlwZSB7SFRNTEVsZW1lbnQgfCBudWxsfVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgdGhpcy5fX3RyYXBOb2RlID0gbnVsbDtcblxuICAgIHRoaXMuX19vbktleURvd24gPSB0aGlzLl9fb25LZXlEb3duLmJpbmQodGhpcyk7XG4gIH1cblxuICAvKipcbiAgICogQW4gYXJyYXkgb2YgdGFiLW9yZGVyZWQgZm9jdXNhYmxlIGVsZW1lbnRzIGluc2lkZSB0aGUgdHJhcCBub2RlLlxuICAgKlxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudFtdfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZ2V0IF9fZm9jdXNhYmxlRWxlbWVudHMoKSB7XG4gICAgcmV0dXJuIGdldEZvY3VzYWJsZUVsZW1lbnRzKHRoaXMuX190cmFwTm9kZSk7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGluZGV4IG9mIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgdHJhcCBub2RlIHRoYXQgY3VycmVudGx5IGhhcyBmb2N1cy5cbiAgICpcbiAgICogQHJldHVybiB7SFRNTEVsZW1lbnQgfCB1bmRlZmluZWR9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXQgX19mb2N1c2VkRWxlbWVudEluZGV4KCkge1xuICAgIGNvbnN0IGZvY3VzYWJsZUVsZW1lbnRzID0gdGhpcy5fX2ZvY3VzYWJsZUVsZW1lbnRzO1xuICAgIHJldHVybiBmb2N1c2FibGVFbGVtZW50cy5pbmRleE9mKGZvY3VzYWJsZUVsZW1lbnRzLmZpbHRlcihpc0VsZW1lbnRGb2N1c2VkKS5wb3AoKSk7XG4gIH1cblxuICBob3N0Q29ubmVjdGVkKCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9fb25LZXlEb3duKTtcbiAgfVxuXG4gIGhvc3REaXNjb25uZWN0ZWQoKSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX19vbktleURvd24pO1xuICB9XG5cbiAgLyoqXG4gICAqIEFjdGl2YXRlcyBhIGZvY3VzIHRyYXAgZm9yIGEgRE9NIG5vZGUgdGhhdCB3aWxsIHByZXZlbnQgZm9jdXMgZnJvbSBlc2NhcGluZyB0aGUgbm9kZS5cbiAgICogVGhlIHRyYXAgY2FuIGJlIGRlYWN0aXZhdGVkIHdpdGggdGhlIGAucmVsZWFzZUZvY3VzKClgIG1ldGhvZC5cbiAgICpcbiAgICogSWYgZm9jdXMgaXMgaW5pdGlhbGx5IG91dHNpZGUgdGhlIHRyYXAsIHRoZSBtZXRob2Qgd2lsbCBtb3ZlIGZvY3VzIGluc2lkZSxcbiAgICogb24gdGhlIGZpcnN0IGZvY3VzYWJsZSBlbGVtZW50IG9mIHRoZSB0cmFwIGluIHRoZSB0YWIgb3JkZXIuXG4gICAqIFRoZSBmaXJzdCBmb2N1c2FibGUgZWxlbWVudCBjYW4gYmUgdGhlIHRyYXAgbm9kZSBpdHNlbGYgaWYgaXQgaXMgZm9jdXNhYmxlXG4gICAqIGFuZCBjb21lcyBmaXJzdCBpbiB0aGUgdGFiIG9yZGVyLlxuICAgKlxuICAgKiBJZiB0aGVyZSBhcmUgbm8gZm9jdXNhYmxlIGVsZW1lbnRzLCB0aGUgbWV0aG9kIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uXG4gICAqIGFuZCB0aGUgdHJhcCB3aWxsIG5vdCBiZSBzZXQuXG4gICAqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHRyYXBOb2RlXG4gICAqL1xuICB0cmFwRm9jdXModHJhcE5vZGUpIHtcbiAgICB0aGlzLl9fdHJhcE5vZGUgPSB0cmFwTm9kZTtcblxuICAgIGlmICh0aGlzLl9fZm9jdXNhYmxlRWxlbWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLl9fdHJhcE5vZGUgPSBudWxsO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgdHJhcCBub2RlIHNob3VsZCBoYXZlIGF0IGxlYXN0IG9uZSBmb2N1c2FibGUgZGVzY2VuZGFudCBvciBiZSBmb2N1c2FibGUgaXRzZWxmLicpO1xuICAgIH1cblxuICAgIGluc3RhbmNlcy5wdXNoKHRoaXMpO1xuXG4gICAgaWYgKHRoaXMuX19mb2N1c2VkRWxlbWVudEluZGV4ID09PSAtMSkge1xuICAgICAgdGhpcy5fX2ZvY3VzYWJsZUVsZW1lbnRzWzBdLmZvY3VzKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIERlYWN0aXZhdGVzIHRoZSBmb2N1cyB0cmFwIHNldCB3aXRoIHRoZSBgLnRyYXBGb2N1cygpYCBtZXRob2RcbiAgICogc28gdGhhdCBpdCBiZWNvbWVzIHBvc3NpYmxlIHRvIHRhYiBvdXRzaWRlIHRoZSB0cmFwIG5vZGUuXG4gICAqL1xuICByZWxlYXNlRm9jdXMoKSB7XG4gICAgdGhpcy5fX3RyYXBOb2RlID0gbnVsbDtcblxuICAgIGluc3RhbmNlcy5wb3AoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIGBrZXlkb3duYCBldmVudCBoYW5kbGVyIHRoYXQgbWFuYWdlcyB0YWJiaW5nIG5hdmlnYXRpb24gd2hlbiB0aGUgdHJhcCBpcyBlbmFibGVkLlxuICAgKlxuICAgKiAtIE1vdmVzIGZvY3VzIHRvIHRoZSBuZXh0IGZvY3VzYWJsZSBlbGVtZW50IG9mIHRoZSB0cmFwIG9uIGBUYWJgIHByZXNzLlxuICAgKiBXaGVuIG5vIG5leHQgZWxlbWVudCB0byBmb2N1cywgdGhlIG1ldGhvZCBtb3ZlcyBmb2N1cyB0byB0aGUgZmlyc3QgZm9jdXNhYmxlIGVsZW1lbnQuXG4gICAqIC0gTW92ZXMgZm9jdXMgdG8gdGhlIHByZXYgZm9jdXNhYmxlIGVsZW1lbnQgb2YgdGhlIHRyYXAgb24gYFNoaWZ0K1RhYmAgcHJlc3MuXG4gICAqIFdoZW4gbm8gcHJldiBlbGVtZW50IHRvIGZvY3VzLCB0aGUgbWV0aG9kIG1vdmVzIGZvY3VzIHRvIHRoZSBsYXN0IGZvY3VzYWJsZSBlbGVtZW50LlxuICAgKlxuICAgKiBAcGFyYW0ge0tleWJvYXJkRXZlbnR9IGV2ZW50XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfX29uS2V5RG93bihldmVudCkge1xuICAgIGlmICghdGhpcy5fX3RyYXBOb2RlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gT25seSBoYW5kbGUgZXZlbnRzIGZvciB0aGUgbGFzdCBpbnN0YW5jZVxuICAgIGlmICh0aGlzICE9PSBBcnJheS5mcm9tKGluc3RhbmNlcykucG9wKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZXZlbnQua2V5ID09PSAnVGFiJykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgY29uc3QgYmFja3dhcmQgPSBldmVudC5zaGlmdEtleTtcbiAgICAgIHRoaXMuX19mb2N1c05leHRFbGVtZW50KGJhY2t3YXJkKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogLSBNb3ZlcyBmb2N1cyB0byB0aGUgbmV4dCBmb2N1c2FibGUgZWxlbWVudCBpZiBgYmFja3dhcmQgPT09IGZhbHNlYC5cbiAgICogV2hlbiBubyBuZXh0IGVsZW1lbnQgdG8gZm9jdXMsIHRoZSBtZXRob2QgbW92ZXMgZm9jdXMgdG8gdGhlIGZpcnN0IGZvY3VzYWJsZSBlbGVtZW50LlxuICAgKiAtIE1vdmVzIGZvY3VzIHRvIHRoZSBwcmV2IGZvY3VzYWJsZSBlbGVtZW50IGlmIGBiYWNrd2FyZCA9PT0gdHJ1ZWAuXG4gICAqIFdoZW4gbm8gcHJldiBlbGVtZW50IHRvIGZvY3VzIHRoZSBtZXRob2QgbW92ZXMgZm9jdXMgdG8gdGhlIGxhc3QgZm9jdXNhYmxlIGVsZW1lbnQuXG4gICAqXG4gICAqIElmIG5vIGZvY3VzYWJsZSBlbGVtZW50cywgdGhlIG1ldGhvZCByZXR1cm5zIGltbWVkaWF0ZWx5LlxuICAgKlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGJhY2t3YXJkXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfX2ZvY3VzTmV4dEVsZW1lbnQoYmFja3dhcmQgPSBmYWxzZSkge1xuICAgIGNvbnN0IGZvY3VzYWJsZUVsZW1lbnRzID0gdGhpcy5fX2ZvY3VzYWJsZUVsZW1lbnRzO1xuICAgIGNvbnN0IHN0ZXAgPSBiYWNrd2FyZCA/IC0xIDogMTtcbiAgICBjb25zdCBjdXJyZW50SW5kZXggPSB0aGlzLl9fZm9jdXNlZEVsZW1lbnRJbmRleDtcbiAgICBjb25zdCBuZXh0SW5kZXggPSAoZm9jdXNhYmxlRWxlbWVudHMubGVuZ3RoICsgY3VycmVudEluZGV4ICsgc3RlcCkgJSBmb2N1c2FibGVFbGVtZW50cy5sZW5ndGg7XG4gICAgY29uc3QgZWxlbWVudCA9IGZvY3VzYWJsZUVsZW1lbnRzW25leHRJbmRleF07XG4gICAgZWxlbWVudC5mb2N1cygpO1xuICAgIGlmIChlbGVtZW50LmxvY2FsTmFtZSA9PT0gJ2lucHV0Jykge1xuICAgICAgZWxlbWVudC5zZWxlY3QoKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/focus-trap-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/focus-utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/focus-utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFocusableElements: () => (/* binding */ getFocusableElements),\n/* harmony export */   isElementFocusable: () => (/* binding */ isElementFocusable),\n/* harmony export */   isElementFocused: () => (/* binding */ isElementFocused),\n/* harmony export */   isElementHidden: () => (/* binding */ isElementHidden),\n/* harmony export */   isKeyboardActive: () => (/* binding */ isKeyboardActive)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener('keydown', () => {\n  keyboardActive = true;\n}, {\n  capture: true\n});\nwindow.addEventListener('mousedown', () => {\n  keyboardActive = false;\n}, {\n  capture: true\n});\n\n/**\n * Returns true if the window has received a keydown\n * event since the last mousedown event.\n *\n * @return {boolean}\n */\nfunction isKeyboardActive() {\n  return keyboardActive;\n}\n\n/**\n * Returns true if the element is hidden directly with `display: none` or `visibility: hidden`,\n * false otherwise.\n *\n * The method doesn't traverse the element's ancestors, it only checks for the CSS properties\n * set directly to or inherited by the element.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementHiddenDirectly(element) {\n  // Check inline style first to save a re-flow.\n  const style = element.style;\n  if (style.visibility === 'hidden' || style.display === 'none') {\n    return true;\n  }\n  const computedStyle = window.getComputedStyle(element);\n  if (computedStyle.visibility === 'hidden' || computedStyle.display === 'none') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns if element `a` has lower tab order compared to element `b`\n * (both elements are assumed to be focusable and tabbable).\n * Elements with tabindex = 0 have lower tab order compared to elements\n * with tabindex > 0.\n * If both have same tabindex, it returns false.\n *\n * @param {HTMLElement} a\n * @param {HTMLElement} b\n * @return {boolean}\n */\nfunction hasLowerTabOrder(a, b) {\n  // Normalize tabIndexes\n  // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n  const ati = Math.max(a.tabIndex, 0);\n  const bti = Math.max(b.tabIndex, 0);\n  return ati === 0 || bti === 0 ? bti > ati : ati > bti;\n}\n\n/**\n * Merge sort iterator, merges the two arrays into one, sorted by tabindex.\n *\n * @param {HTMLElement[]} left\n * @param {HTMLElement[]} right\n * @return {HTMLElement[]}\n */\nfunction mergeSortByTabIndex(left, right) {\n  const result = [];\n  while (left.length > 0 && right.length > 0) {\n    if (hasLowerTabOrder(left[0], right[0])) {\n      result.push(right.shift());\n    } else {\n      result.push(left.shift());\n    }\n  }\n  return result.concat(left, right);\n}\n\n/**\n * Sorts an array of elements by tabindex. Returns a new array.\n *\n * @param {HTMLElement[]} elements\n * @return {HTMLElement[]}\n */\nfunction sortElementsByTabIndex(elements) {\n  // Implement a merge sort as Array.prototype.sort does a non-stable sort\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n  const len = elements.length;\n  if (len < 2) {\n    return elements;\n  }\n  const pivot = Math.ceil(len / 2);\n  const left = sortElementsByTabIndex(elements.slice(0, pivot));\n  const right = sortElementsByTabIndex(elements.slice(pivot));\n  return mergeSortByTabIndex(left, right);\n}\n\n/**\n * Returns true if the element is hidden, false otherwise.\n *\n * An element is treated as hidden when any of the following conditions are met:\n * - the element itself or one of its ancestors has `display: none`.\n * - the element has or inherits `visibility: hidden`.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementHidden(element) {\n  // `offsetParent` is `null` when the element itself\n  // or one of its ancestors is hidden with `display: none`.\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n  // However `offsetParent` is also null when the element is using fixed\n  // positioning, so additionally check if the element takes up layout space.\n  if (element.offsetParent === null && element.clientWidth === 0 && element.clientHeight === 0) {\n    return true;\n  }\n  return isElementHiddenDirectly(element);\n}\n\n/**\n * Returns true if the element is focusable, otherwise false.\n *\n * The list of focusable elements is taken from http://stackoverflow.com/a/1600194/4228703.\n * However, there isn't a definite list, it's up to the browser.\n * The only standard we have is DOM Level 2 HTML https://www.w3.org/TR/DOM-Level-2-HTML/html.html,\n * according to which the only elements that have a `focus()` method are:\n * - HTMLInputElement\n * - HTMLSelectElement\n * - HTMLTextAreaElement\n * - HTMLAnchorElement\n *\n * This notably omits HTMLButtonElement and HTMLAreaElement.\n * Referring to these tests with tabbables in different browsers\n * http://allyjs.io/data-tables/focusable.html\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementFocusable(element) {\n  // The element cannot be focused if its `tabindex` attribute is set to `-1`.\n  if (element.matches('[tabindex=\"-1\"]')) {\n    return false;\n  }\n\n  // Elements that cannot be focused if they have a `disabled` attribute.\n  if (element.matches('input, select, textarea, button, object')) {\n    return element.matches(':not([disabled])');\n  }\n\n  // Elements that can be focused even if they have a `disabled` attribute.\n  return element.matches('a[href], area[href], iframe, [tabindex], [contentEditable]');\n}\n\n/**\n * Returns true if the element is focused, false otherwise.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementFocused(element) {\n  return element.getRootNode().activeElement === element;\n}\n\n/**\n * Returns the normalized element tabindex. If not focusable, returns -1.\n * It checks for the attribute \"tabindex\" instead of the element property\n * `tabIndex` since browsers assign different values to it.\n * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n *\n * @param {HTMLElement} element\n * @return {number}\n */\nfunction normalizeTabIndex(element) {\n  if (!isElementFocusable(element)) {\n    return -1;\n  }\n  const tabIndex = element.getAttribute('tabindex') || 0;\n  return Number(tabIndex);\n}\n\n/**\n * Searches for nodes that are tabbable and adds them to the `result` array.\n * Returns if the `result` array needs to be sorted by tabindex.\n *\n * @param {Node} node The starting point for the search; added to `result` if tabbable.\n * @param {HTMLElement[]} result\n * @return {boolean}\n * @private\n */\nfunction collectFocusableNodes(node, result) {\n  if (node.nodeType !== Node.ELEMENT_NODE || isElementHiddenDirectly(node)) {\n    // Don't traverse children if the node is not an HTML element or not visible.\n    return false;\n  }\n  const element = /** @type {HTMLElement} */node;\n  const tabIndex = normalizeTabIndex(element);\n  let needsSort = tabIndex > 0;\n  if (tabIndex >= 0) {\n    result.push(element);\n  }\n  let children = [];\n  if (element.localName === 'slot') {\n    children = element.assignedNodes({\n      flatten: true\n    });\n  } else {\n    // Use shadow root if possible, will check for distributed nodes.\n    children = (element.shadowRoot || element).children;\n  }\n  [...children].forEach(child => {\n    // Ensure method is always invoked to collect focusable children.\n    needsSort = collectFocusableNodes(child, result) || needsSort;\n  });\n  return needsSort;\n}\n\n/**\n * Returns a tab-ordered array of focusable elements for a root element.\n * The resulting array will include the root element if it is focusable.\n *\n * The method traverses nodes in shadow DOM trees too if any.\n *\n * @param {HTMLElement} element\n * @return {HTMLElement[]}\n */\nfunction getFocusableElements(element) {\n  const focusableElements = [];\n  const needsSortByTabIndex = collectFocusableNodes(element, focusableElements);\n  // If there is at least one element with tabindex > 0,\n  // we need to sort the final array by tabindex.\n  if (needsSortByTabIndex) {\n    return sortElementsByTabIndex(focusableElements);\n  }\n  return focusableElements;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/focus-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/iron-list-core.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/iron-list-core.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ironList: () => (/* binding */ ironList)\n/* harmony export */ });\n/* harmony import */ var _async_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async.js */ \"./node_modules/@vaadin/component-base/src/async.js\");\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debounce.js */ \"./node_modules/@vaadin/component-base/src/debounce.js\");\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n\nconst IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/u);\nconst IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nconst DEFAULT_PHYSICAL_COUNT = 3;\n\n/**\n * DO NOT EDIT THIS FILE!\n *\n * This file includes the iron-list scrolling engine copied from\n * https://github.com/PolymerElements/iron-list/blob/master/iron-list.js\n *\n * If something in the scrolling engine needs to be changed\n * for the virtualizer's purposes, override a function\n * in virtualizer-iron-list-adapter.js instead of changing it here.\n * If a function on this file is no longer needed, the code can be safely deleted.\n *\n * This will allow us to keep the iron-list code here as close to\n * the original as possible.\n */\nconst ironList = {\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both\n   * directions.\n   */\n  _ratio: 0.5,\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n  /**\n   * This value is a cached value of `scrollTop` from the last `scroll` event.\n   */\n  _scrollPosition: 0,\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n  /**\n   * The height of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportHeight: 0,\n  /**\n   * The width of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportWidth: 0,\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!HTMLElement>}\n   */\n  _physicalItems: null,\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n  /**\n   * The max number of pages to render. One page is equivalent to the height of\n   * the list.\n   */\n  _maxPages: 2,\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    return this._physicalSize - this._viewportHeight;\n  },\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n  /**\n   * The largest n-th value for an item such that it can be rendered in\n   * `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    const virtualCount = this._virtualCount;\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    this._virtualStartVal = val;\n  },\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val %= this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    this._physicalStartVal = val;\n  },\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    let idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      idx = this._iterateItems((pidx, vidx) => {\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        if (physicalOffset > this._scrollPosition) {\n          return vidx;\n        }\n      }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    let idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      this._iterateItems((pidx, vidx) => {\n        if (physicalOffset < this._scrollBottom) {\n          idx = vidx;\n        }\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n      });\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n  get _scrollOffset() {\n    return this._scrollerPaddingTop + this.scrollOffset;\n  },\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler() {\n    const scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    let delta = scrollTop - this._scrollPosition;\n    const isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta -= this._scrollOffset;\n      const idxAdjustment = Math.round(delta / this._physicalAverage);\n      this._virtualStart += idxAdjustment;\n      this._physicalStart += idxAdjustment;\n      // Estimate new physical offset based on the virtual start index.\n      // adjusts the physical start position to stay in sync with the clamped\n      // virtual start index. It's critical not to let this value be\n      // more than the scroll position however, since that would result in\n      // the physical items not covering the viewport, and leading to\n      // _increasePoolIfNeeded to run away creating items to try to fill it.\n      this._physicalTop = Math.min(Math.floor(this._virtualStart) * this._physicalAverage, this._scrollPosition);\n      this._update();\n    } else if (this._physicalCount > 0) {\n      const reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart += reusables.indexes.length;\n        this._physicalStart += reusables.indexes.length;\n      } else {\n        this._virtualStart -= reusables.indexes.length;\n        this._physicalStart -= reusables.indexes.length;\n      }\n      this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), _async_js__WEBPACK_IMPORTED_MODULE_0__.microTask);\n    }\n  },\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables(fromTop) {\n    let ith, offsetContent, physicalItemHeight;\n    const idxs = [];\n    const protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    const virtualStart = this._virtualStart;\n    const virtualEnd = this._virtualEnd;\n    const physicalCount = this._physicalCount;\n    let top = this._physicalTop + this._scrollOffset;\n    const bottom = this._physicalBottom + this._scrollOffset;\n    // This may be called outside of a scrollHandler, so use last cached position\n    const scrollTop = this._scrollPosition;\n    const scrollBottom = this._scrollBottom;\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent -= physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top += physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top -= physicalItemHeight;\n        ith = ith === 0 ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return {\n      indexes: idxs,\n      physicalTop: top - this._scrollOffset\n    };\n  },\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update(itemSet, movingUp) {\n    if (itemSet && itemSet.length === 0 || this._physicalCount === 0) {\n      return;\n    }\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        const idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n  _isClientFull() {\n    return this._scrollBottom !== 0 && this._physicalBottom - 1 >= this._scrollBottom && this._physicalTop <= this._scrollPosition;\n  },\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded(count) {\n    const nextPhysicalCount = this._clamp(this._physicalCount + count, DEFAULT_PHYSICAL_COUNT, this._virtualCount - this._virtualStart);\n    const delta = nextPhysicalCount - this._physicalCount;\n    let nextIncrease = Math.round(this._physicalCount * 0.5);\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      const ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't\n      // support it.\n      for (let i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount += delta;\n      // Update the physical start if it needs to preserve the model of the\n      // focused item. In this situation, the focused item is currently rendered\n      // and its model would have changed after increasing the pool if the\n      // physical start remained unchanged.\n      if (this._physicalStart > this._physicalEnd && this._isIndexRendered(this._focusedVirtualIndex) && this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd) {\n        this._physicalStart += delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, nextIncrease), _async_js__WEBPACK_IMPORTED_MODULE_0__.microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is\n      // optimal.\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)), _async_js__WEBPACK_IMPORTED_MODULE_0__.idlePeriod);\n    }\n  },\n  /**\n   * Renders the a new list.\n   */\n  _render() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      const reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart += reusables.indexes.length;\n      this._physicalStart += reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      if (!this._physicalItems) {\n        this._physicalItems = [];\n      }\n      if (!this._physicalSizes) {\n        this._physicalSizes = [];\n      }\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._debounce('_render', this._render, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame);\n    }\n  },\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical\n   * indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems(fn, itemSet) {\n    let pidx, vidx, rtn, i;\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems() {\n    this._adjustScrollPosition();\n    let y = this._physicalTop;\n    this._iterateItems(pidx => {\n      this.translate3d(0, `${y}px`, 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n  _getPhysicalSizeIncrement(pidx) {\n    return this._physicalSizes[pidx];\n  },\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition() {\n    const deltaHeight = this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop -= deltaHeight;\n      // This may be called outside of a scrollHandler, so use last cached position\n      const scrollTop = this._scrollPosition;\n      // Juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize(forceUpdate) {\n    const estScrollHeight = this._physicalBottom + Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;\n    this._estScrollHeight = estScrollHeight;\n\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || this._scrollHeight === 0 || this._scrollPosition >= estScrollHeight - this._physicalSize || Math.abs(estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = `${estScrollHeight}px`;\n      this._scrollHeight = estScrollHeight;\n    }\n  },\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_1__.flush)();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = idx - 1;\n    }\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = this._virtualStart * this._physicalAverage;\n    let currentTopItem = this._physicalStart;\n    let currentVirtualItem = this._virtualStart;\n    let targetOffsetTop = 0;\n    const hiddenContentSize = this._hiddenContentSize;\n    // Scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop += this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem += 1;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // Clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler() {\n    this._debounce('_render', () => {\n      // Clear cached visible index.\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      if (this._isVisible) {\n        this.updateViewportBoundaries();\n        // Reinstall the scroll event listener.\n        this.toggleScrollListener(true);\n        this._resetAverage();\n        this._render();\n      } else {\n        // Uninstall the scroll event listener.\n        this.toggleScrollListener(false);\n      }\n    }, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame);\n  },\n  _isIndexRendered(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n  _getPhysicalIndex(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n  _clamp(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n  _debounce(name, cb, asyncModule) {\n    if (!this._debouncers) {\n      this._debouncers = {};\n    }\n    this._debouncers[name] = _debounce_js__WEBPACK_IMPORTED_MODULE_1__.Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_1__.enqueueDebouncer)(this._debouncers[name]);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/iron-list-core.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/keyboard-mixin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/keyboard-mixin.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyboardMixin: () => (/* binding */ KeyboardMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin that manages keyboard handling.\n * The mixin subscribes to the keyboard events while an actual implementation\n * for the event handlers is left to the client (a component or another mixin).\n *\n * @polymerMixin\n */\nconst KeyboardMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class KeyboardMixinClass extends superclass {\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('keydown', event => {\n      this._onKeyDown(event);\n    });\n    this.addEventListener('keyup', event => {\n      this._onKeyUp(event);\n    });\n  }\n\n  /**\n   * A handler for the `keydown` event. By default, it calls\n   * separate methods for handling \"Enter\" and \"Escape\" keys.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} event\n   * @protected\n   */\n  _onKeyDown(event) {\n    switch (event.key) {\n      case 'Enter':\n        this._onEnter(event);\n        break;\n      case 'Escape':\n        this._onEscape(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * A handler for the `keyup` event. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onKeyUp(_event) {\n    // To be implemented.\n  }\n\n  /**\n   * A handler for the \"Enter\" key. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onEnter(_event) {\n    // To be implemented.\n  }\n\n  /**\n   * A handler for the \"Escape\" key. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onEscape(_event) {\n    // To be implemented.\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMva2V5Ym9hcmQtbWl4aW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2tleWJvYXJkLW1peGluLmpzPzc4YzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBkZWR1cGluZ01peGluIH0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9saWIvdXRpbHMvbWl4aW4uanMnO1xuXG4vKipcbiAqIEEgbWl4aW4gdGhhdCBtYW5hZ2VzIGtleWJvYXJkIGhhbmRsaW5nLlxuICogVGhlIG1peGluIHN1YnNjcmliZXMgdG8gdGhlIGtleWJvYXJkIGV2ZW50cyB3aGlsZSBhbiBhY3R1YWwgaW1wbGVtZW50YXRpb25cbiAqIGZvciB0aGUgZXZlbnQgaGFuZGxlcnMgaXMgbGVmdCB0byB0aGUgY2xpZW50IChhIGNvbXBvbmVudCBvciBhbm90aGVyIG1peGluKS5cbiAqXG4gKiBAcG9seW1lck1peGluXG4gKi9cbmV4cG9ydCBjb25zdCBLZXlib2FyZE1peGluID0gZGVkdXBpbmdNaXhpbihcbiAgKHN1cGVyY2xhc3MpID0+XG4gICAgY2xhc3MgS2V5Ym9hcmRNaXhpbkNsYXNzIGV4dGVuZHMgc3VwZXJjbGFzcyB7XG4gICAgICAvKiogQHByb3RlY3RlZCAqL1xuICAgICAgcmVhZHkoKSB7XG4gICAgICAgIHN1cGVyLnJlYWR5KCk7XG5cbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgdGhpcy5fb25LZXlEb3duKGV2ZW50KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChldmVudCkgPT4ge1xuICAgICAgICAgIHRoaXMuX29uS2V5VXAoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBBIGhhbmRsZXIgZm9yIHRoZSBga2V5ZG93bmAgZXZlbnQuIEJ5IGRlZmF1bHQsIGl0IGNhbGxzXG4gICAgICAgKiBzZXBhcmF0ZSBtZXRob2RzIGZvciBoYW5kbGluZyBcIkVudGVyXCIgYW5kIFwiRXNjYXBlXCIga2V5cy5cbiAgICAgICAqIE92ZXJyaWRlIHRoZSBtZXRob2QgdG8gaW1wbGVtZW50IHlvdXIgb3duIGJlaGF2aW9yLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gZXZlbnRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX29uS2V5RG93bihldmVudCkge1xuICAgICAgICBzd2l0Y2ggKGV2ZW50LmtleSkge1xuICAgICAgICAgIGNhc2UgJ0VudGVyJzpcbiAgICAgICAgICAgIHRoaXMuX29uRW50ZXIoZXZlbnQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAnRXNjYXBlJzpcbiAgICAgICAgICAgIHRoaXMuX29uRXNjYXBlKGV2ZW50KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEEgaGFuZGxlciBmb3IgdGhlIGBrZXl1cGAgZXZlbnQuIEJ5IGRlZmF1bHQsIGl0IGRvZXMgbm90aGluZy5cbiAgICAgICAqIE92ZXJyaWRlIHRoZSBtZXRob2QgdG8gaW1wbGVtZW50IHlvdXIgb3duIGJlaGF2aW9yLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gX2V2ZW50XG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIF9vbktleVVwKF9ldmVudCkge1xuICAgICAgICAvLyBUbyBiZSBpbXBsZW1lbnRlZC5cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBBIGhhbmRsZXIgZm9yIHRoZSBcIkVudGVyXCIga2V5LiBCeSBkZWZhdWx0LCBpdCBkb2VzIG5vdGhpbmcuXG4gICAgICAgKiBPdmVycmlkZSB0aGUgbWV0aG9kIHRvIGltcGxlbWVudCB5b3VyIG93biBiZWhhdmlvci5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge0tleWJvYXJkRXZlbnR9IF9ldmVudFxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBfb25FbnRlcihfZXZlbnQpIHtcbiAgICAgICAgLy8gVG8gYmUgaW1wbGVtZW50ZWQuXG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogQSBoYW5kbGVyIGZvciB0aGUgXCJFc2NhcGVcIiBrZXkuIEJ5IGRlZmF1bHQsIGl0IGRvZXMgbm90aGluZy5cbiAgICAgICAqIE92ZXJyaWRlIHRoZSBtZXRob2QgdG8gaW1wbGVtZW50IHlvdXIgb3duIGJlaGF2aW9yLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gX2V2ZW50XG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIF9vbkVzY2FwZShfZXZlbnQpIHtcbiAgICAgICAgLy8gVG8gYmUgaW1wbGVtZW50ZWQuXG4gICAgICB9XG4gICAgfSxcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/keyboard-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/overlay-class-mixin.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/overlay-class-mixin.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlayClassMixin: () => (/* binding */ OverlayClassMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A mixin that forwards CSS class names to the internal overlay element\n * by setting the `overlayClass` property or `overlay-class` attribute.\n *\n * @polymerMixin\n */\nconst OverlayClassMixin = superclass => class OverlayClassMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * A space-delimited list of CSS class names to set on the overlay element.\n       * This property does not affect other CSS class names set manually via JS.\n       *\n       * Note, if the CSS class name was set with this property, clearing it will\n       * remove it from the overlay, even if the same class name was also added\n       * manually, e.g. by using `classList.add()` in the `renderer` function.\n       *\n       * @attr {string} overlay-class\n       */\n      overlayClass: {\n        type: String\n      },\n      /**\n       * An overlay element on which CSS class names are set.\n       *\n       * @protected\n       */\n      _overlayElement: {\n        type: Object\n      }\n    };\n  }\n  static get observers() {\n    return ['__updateOverlayClassNames(overlayClass, _overlayElement)'];\n  }\n\n  /** @private */\n  __updateOverlayClassNames(overlayClass, overlayElement) {\n    if (!overlayElement) {\n      return;\n    }\n\n    // Overlay is set but overlayClass is not set\n    if (overlayClass === undefined) {\n      return;\n    }\n    const {\n      classList\n    } = overlayElement;\n    if (!this.__initialClasses) {\n      this.__initialClasses = new Set(classList);\n    }\n    if (Array.isArray(this.__previousClasses)) {\n      // Remove old classes that no longer apply\n      const classesToRemove = this.__previousClasses.filter(name => !this.__initialClasses.has(name));\n      if (classesToRemove.length > 0) {\n        classList.remove(...classesToRemove);\n      }\n    }\n\n    // Add new classes based on the overlayClass\n    const classesToAdd = typeof overlayClass === 'string' ? overlayClass.split(' ') : [];\n    if (classesToAdd.length > 0) {\n      classList.add(...classesToAdd);\n    }\n    this.__previousClasses = classesToAdd;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvb3ZlcmxheS1jbGFzcy1taXhpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvb3ZlcmxheS1jbGFzcy1taXhpbi5qcz83OWU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogQSBtaXhpbiB0aGF0IGZvcndhcmRzIENTUyBjbGFzcyBuYW1lcyB0byB0aGUgaW50ZXJuYWwgb3ZlcmxheSBlbGVtZW50XG4gKiBieSBzZXR0aW5nIHRoZSBgb3ZlcmxheUNsYXNzYCBwcm9wZXJ0eSBvciBgb3ZlcmxheS1jbGFzc2AgYXR0cmlidXRlLlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IE92ZXJsYXlDbGFzc01peGluID0gKHN1cGVyY2xhc3MpID0+XG4gIGNsYXNzIE92ZXJsYXlDbGFzc01peGluQ2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogQSBzcGFjZS1kZWxpbWl0ZWQgbGlzdCBvZiBDU1MgY2xhc3MgbmFtZXMgdG8gc2V0IG9uIHRoZSBvdmVybGF5IGVsZW1lbnQuXG4gICAgICAgICAqIFRoaXMgcHJvcGVydHkgZG9lcyBub3QgYWZmZWN0IG90aGVyIENTUyBjbGFzcyBuYW1lcyBzZXQgbWFudWFsbHkgdmlhIEpTLlxuICAgICAgICAgKlxuICAgICAgICAgKiBOb3RlLCBpZiB0aGUgQ1NTIGNsYXNzIG5hbWUgd2FzIHNldCB3aXRoIHRoaXMgcHJvcGVydHksIGNsZWFyaW5nIGl0IHdpbGxcbiAgICAgICAgICogcmVtb3ZlIGl0IGZyb20gdGhlIG92ZXJsYXksIGV2ZW4gaWYgdGhlIHNhbWUgY2xhc3MgbmFtZSB3YXMgYWxzbyBhZGRlZFxuICAgICAgICAgKiBtYW51YWxseSwgZS5nLiBieSB1c2luZyBgY2xhc3NMaXN0LmFkZCgpYCBpbiB0aGUgYHJlbmRlcmVyYCBmdW5jdGlvbi5cbiAgICAgICAgICpcbiAgICAgICAgICogQGF0dHIge3N0cmluZ30gb3ZlcmxheS1jbGFzc1xuICAgICAgICAgKi9cbiAgICAgICAgb3ZlcmxheUNsYXNzOiB7XG4gICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbiBvdmVybGF5IGVsZW1lbnQgb24gd2hpY2ggQ1NTIGNsYXNzIG5hbWVzIGFyZSBzZXQuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIF9vdmVybGF5RWxlbWVudDoge1xuICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICByZXR1cm4gWydfX3VwZGF0ZU92ZXJsYXlDbGFzc05hbWVzKG92ZXJsYXlDbGFzcywgX292ZXJsYXlFbGVtZW50KSddO1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIF9fdXBkYXRlT3ZlcmxheUNsYXNzTmFtZXMob3ZlcmxheUNsYXNzLCBvdmVybGF5RWxlbWVudCkge1xuICAgICAgaWYgKCFvdmVybGF5RWxlbWVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIE92ZXJsYXkgaXMgc2V0IGJ1dCBvdmVybGF5Q2xhc3MgaXMgbm90IHNldFxuICAgICAgaWYgKG92ZXJsYXlDbGFzcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgeyBjbGFzc0xpc3QgfSA9IG92ZXJsYXlFbGVtZW50O1xuXG4gICAgICBpZiAoIXRoaXMuX19pbml0aWFsQ2xhc3Nlcykge1xuICAgICAgICB0aGlzLl9faW5pdGlhbENsYXNzZXMgPSBuZXcgU2V0KGNsYXNzTGlzdCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuX19wcmV2aW91c0NsYXNzZXMpKSB7XG4gICAgICAgIC8vIFJlbW92ZSBvbGQgY2xhc3NlcyB0aGF0IG5vIGxvbmdlciBhcHBseVxuICAgICAgICBjb25zdCBjbGFzc2VzVG9SZW1vdmUgPSB0aGlzLl9fcHJldmlvdXNDbGFzc2VzLmZpbHRlcigobmFtZSkgPT4gIXRoaXMuX19pbml0aWFsQ2xhc3Nlcy5oYXMobmFtZSkpO1xuICAgICAgICBpZiAoY2xhc3Nlc1RvUmVtb3ZlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBjbGFzc0xpc3QucmVtb3ZlKC4uLmNsYXNzZXNUb1JlbW92ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gQWRkIG5ldyBjbGFzc2VzIGJhc2VkIG9uIHRoZSBvdmVybGF5Q2xhc3NcbiAgICAgIGNvbnN0IGNsYXNzZXNUb0FkZCA9IHR5cGVvZiBvdmVybGF5Q2xhc3MgPT09ICdzdHJpbmcnID8gb3ZlcmxheUNsYXNzLnNwbGl0KCcgJykgOiBbXTtcbiAgICAgIGlmIChjbGFzc2VzVG9BZGQubGVuZ3RoID4gMCkge1xuICAgICAgICBjbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXNUb0FkZCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX19wcmV2aW91c0NsYXNzZXMgPSBjbGFzc2VzVG9BZGQ7XG4gICAgfVxuICB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/overlay-class-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/templates.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/templates.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processTemplates: () => (/* binding */ processTemplates)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Passes the component to the template renderer callback if the template renderer is imported.\n * Otherwise, if there is a template, it warns that the template renderer needs to be imported.\n *\n * @param {HTMLElement} component\n */\nfunction processTemplates(component) {\n  if (window.Vaadin && window.Vaadin.templateRendererCallback) {\n    window.Vaadin.templateRendererCallback(component);\n    return;\n  }\n  if (component.querySelector('template')) {\n    console.warn(`WARNING: <template> inside <${component.localName}> is no longer supported. Import @vaadin/polymer-legacy-adapter/template-renderer.js to enable compatibility.`);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdGVtcGxhdGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL3RlbXBsYXRlcy5qcz8yMmZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIFBhc3NlcyB0aGUgY29tcG9uZW50IHRvIHRoZSB0ZW1wbGF0ZSByZW5kZXJlciBjYWxsYmFjayBpZiB0aGUgdGVtcGxhdGUgcmVuZGVyZXIgaXMgaW1wb3J0ZWQuXG4gKiBPdGhlcndpc2UsIGlmIHRoZXJlIGlzIGEgdGVtcGxhdGUsIGl0IHdhcm5zIHRoYXQgdGhlIHRlbXBsYXRlIHJlbmRlcmVyIG5lZWRzIHRvIGJlIGltcG9ydGVkLlxuICpcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGNvbXBvbmVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc1RlbXBsYXRlcyhjb21wb25lbnQpIHtcbiAgaWYgKHdpbmRvdy5WYWFkaW4gJiYgd2luZG93LlZhYWRpbi50ZW1wbGF0ZVJlbmRlcmVyQ2FsbGJhY2spIHtcbiAgICB3aW5kb3cuVmFhZGluLnRlbXBsYXRlUmVuZGVyZXJDYWxsYmFjayhjb21wb25lbnQpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChjb21wb25lbnQucXVlcnlTZWxlY3RvcigndGVtcGxhdGUnKSkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIGBXQVJOSU5HOiA8dGVtcGxhdGU+IGluc2lkZSA8JHtjb21wb25lbnQubG9jYWxOYW1lfT4gaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZC4gSW1wb3J0IEB2YWFkaW4vcG9seW1lci1sZWdhY3ktYWRhcHRlci90ZW1wbGF0ZS1yZW5kZXJlci5qcyB0byBlbmFibGUgY29tcGF0aWJpbGl0eS5gLFxuICAgICk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/templates.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/unique-id-utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/unique-id-utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUniqueId: () => (/* binding */ generateUniqueId),\n/* harmony export */   resetUniqueId: () => (/* binding */ resetUniqueId)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nlet uniqueId = 0;\n\n/**\n * Resets the unique id counter.\n *\n * @return {void}\n */\nfunction resetUniqueId() {\n  uniqueId = 0;\n}\n\n/**\n * Returns a unique integer id.\n *\n * @return {number}\n */\nfunction generateUniqueId() {\n  // eslint-disable-next-line no-plusplus\n  return uniqueId++;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdW5pcXVlLWlkLXV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL3VuaXF1ZS1pZC11dGlscy5qcz9lMjcwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG5sZXQgdW5pcXVlSWQgPSAwO1xuXG4vKipcbiAqIFJlc2V0cyB0aGUgdW5pcXVlIGlkIGNvdW50ZXIuXG4gKlxuICogQHJldHVybiB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0VW5pcXVlSWQoKSB7XG4gIHVuaXF1ZUlkID0gMDtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgdW5pcXVlIGludGVnZXIgaWQuXG4gKlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVVbmlxdWVJZCgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBsdXNwbHVzXG4gIHJldHVybiB1bmlxdWVJZCsrO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/unique-id-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IronListAdapter: () => (/* binding */ IronListAdapter)\n/* harmony export */ });\n/* harmony import */ var _async_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async.js */ \"./node_modules/@vaadin/component-base/src/async.js\");\n/* harmony import */ var _browser_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debounce.js */ \"./node_modules/@vaadin/component-base/src/debounce.js\");\n/* harmony import */ var _iron_list_core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iron-list-core.js */ \"./node_modules/@vaadin/component-base/src/iron-list-core.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n/* eslint-disable @typescript-eslint/member-ordering */\n// https://github.com/vaadin/eslint-config-vaadin/issues/33\n\n\n\n\n\n// Iron-list can by default handle sizes up to around 100000.\n// When the size is larger than MAX_VIRTUAL_COUNT _vidxOffset is used\nconst MAX_VIRTUAL_COUNT = 100000;\nconst OFFSET_ADJUST_MIN_THRESHOLD = 1000;\nclass IronListAdapter {\n  constructor({\n    createElements,\n    updateElement,\n    scrollTarget,\n    scrollContainer,\n    elementsContainer,\n    reorderElements\n  }) {\n    this.isAttached = true;\n    this._vidxOffset = 0;\n    this.createElements = createElements;\n    this.updateElement = updateElement;\n    this.scrollTarget = scrollTarget;\n    this.scrollContainer = scrollContainer;\n    this.elementsContainer = elementsContainer || scrollContainer;\n    this.reorderElements = reorderElements;\n    // Iron-list uses this value to determine how many pages of elements to render\n    this._maxPages = 1.3;\n\n    // Placeholder height (used for sizing elements that have intrinsic 0 height after update)\n    this.__placeholderHeight = 200;\n    // A queue of 10 previous element heights\n    this.__elementHeightQueue = Array(10);\n    this.timeouts = {\n      SCROLL_REORDER: 500,\n      IGNORE_WHEEL: 500,\n      FIX_INVALID_ITEM_POSITIONING: 100\n    };\n    this.__resizeObserver = new ResizeObserver(() => this._resizeHandler());\n    if (getComputedStyle(this.scrollTarget).overflow === 'visible') {\n      this.scrollTarget.style.overflow = 'auto';\n    }\n    if (getComputedStyle(this.scrollContainer).position === 'static') {\n      this.scrollContainer.style.position = 'relative';\n    }\n    this.__resizeObserver.observe(this.scrollTarget);\n    this.scrollTarget.addEventListener('scroll', () => this._scrollHandler());\n    this._scrollLineHeight = this._getScrollLineHeight();\n    this.scrollTarget.addEventListener('wheel', e => this.__onWheel(e));\n    if (this.reorderElements) {\n      // Reordering the physical elements cancels the user's grab of the scroll bar handle on Safari.\n      // Need to defer reordering until the user lets go of the scroll bar handle.\n      this.scrollTarget.addEventListener('mousedown', () => {\n        this.__mouseDown = true;\n      });\n      this.scrollTarget.addEventListener('mouseup', () => {\n        this.__mouseDown = false;\n        if (this.__pendingReorder) {\n          this.__reorderElements();\n        }\n      });\n    }\n  }\n  get scrollOffset() {\n    return 0;\n  }\n  get adjustedFirstVisibleIndex() {\n    return this.firstVisibleIndex + this._vidxOffset;\n  }\n  get adjustedLastVisibleIndex() {\n    return this.lastVisibleIndex + this._vidxOffset;\n  }\n  scrollToIndex(index) {\n    if (typeof index !== 'number' || isNaN(index) || this.size === 0 || !this.scrollTarget.offsetHeight) {\n      return;\n    }\n    index = this._clamp(index, 0, this.size - 1);\n    const visibleElementCount = this.__getVisibleElements().length;\n    let targetVirtualIndex = Math.floor(index / this.size * this._virtualCount);\n    if (this._virtualCount - targetVirtualIndex < visibleElementCount) {\n      targetVirtualIndex = this._virtualCount - (this.size - index);\n      this._vidxOffset = this.size - this._virtualCount;\n    } else if (targetVirtualIndex < visibleElementCount) {\n      if (index < OFFSET_ADJUST_MIN_THRESHOLD) {\n        targetVirtualIndex = index;\n        this._vidxOffset = 0;\n      } else {\n        targetVirtualIndex = OFFSET_ADJUST_MIN_THRESHOLD;\n        this._vidxOffset = index - targetVirtualIndex;\n      }\n    } else {\n      this._vidxOffset = index - targetVirtualIndex;\n    }\n    this.__skipNextVirtualIndexAdjust = true;\n    super.scrollToIndex(targetVirtualIndex);\n    if (this.adjustedFirstVisibleIndex !== index && this._scrollTop < this._maxScrollTop && !this.grid) {\n      // Workaround an iron-list issue by manually adjusting the scroll position\n      this._scrollTop -= this.__getIndexScrollOffset(index) || 0;\n    }\n    this._scrollHandler();\n  }\n  flush() {\n    // The scroll target is hidden.\n    if (this.scrollTarget.offsetHeight === 0) {\n      return;\n    }\n    this._resizeHandler();\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n    this._scrollHandler();\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.flush();\n    }\n    if (this.__scrollReorderDebouncer) {\n      this.__scrollReorderDebouncer.flush();\n    }\n    if (this.__debouncerWheelAnimationFrame) {\n      this.__debouncerWheelAnimationFrame.flush();\n    }\n  }\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__getVisibleElements().forEach(el => {\n      if (el.__virtualIndex >= startIndex && el.__virtualIndex <= endIndex) {\n        this.__updateElement(el, el.__virtualIndex, true);\n      }\n    });\n  }\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n    let newPhysicalSize = 0;\n    let oldPhysicalSize = 0;\n    const prevAvgCount = this._physicalAverageCount;\n    const prevPhysicalAvg = this._physicalAverage;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    this._iterateItems((pidx, vidx) => {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = Math.ceil(this.__getBorderBoxHeight(this._physicalItems[pidx]));\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n    this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round((prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount);\n    }\n  }\n  __getBorderBoxHeight(el) {\n    const style = getComputedStyle(el);\n    const itemHeight = parseFloat(style.height) || 0;\n    if (style.boxSizing === 'border-box') {\n      return itemHeight;\n    }\n    const paddingBottom = parseFloat(style.paddingBottom) || 0;\n    const paddingTop = parseFloat(style.paddingTop) || 0;\n    const borderBottomWidth = parseFloat(style.borderBottomWidth) || 0;\n    const borderTopWidth = parseFloat(style.borderTopWidth) || 0;\n    return itemHeight + paddingBottom + paddingTop + borderBottomWidth + borderTopWidth;\n  }\n  __updateElement(el, index, forceSameIndexUpdates) {\n    // Clean up temporary placeholder sizing\n    if (el.style.paddingTop) {\n      el.style.paddingTop = '';\n    }\n    if (!this.__preventElementUpdates && (el.__lastUpdatedIndex !== index || forceSameIndexUpdates)) {\n      this.updateElement(el, index);\n      el.__lastUpdatedIndex = index;\n    }\n    const elementHeight = el.offsetHeight;\n    if (elementHeight === 0) {\n      // If the elements have 0 height after update (for example due to lazy rendering),\n      // it results in iron-list requesting to create an unlimited count of elements.\n      // Assign a temporary placeholder sizing to elements that would otherwise end up having\n      // no height.\n      el.style.paddingTop = `${this.__placeholderHeight}px`;\n\n      // Manually schedule the resize handler to make sure the placeholder padding is\n      // cleared in case the resize observer never triggers.\n      requestAnimationFrame(() => this._resizeHandler());\n    } else {\n      // Add element height to the queue\n      this.__elementHeightQueue.push(elementHeight);\n      this.__elementHeightQueue.shift();\n\n      // Calcualte new placeholder height based on the average of the defined values in the\n      // element height queue\n      const filteredHeights = this.__elementHeightQueue.filter(h => h !== undefined);\n      this.__placeholderHeight = Math.round(filteredHeights.reduce((a, b) => a + b, 0) / filteredHeights.length);\n    }\n  }\n  __getIndexScrollOffset(index) {\n    const element = this.__getVisibleElements().find(el => el.__virtualIndex === index);\n    return element ? this.scrollTarget.getBoundingClientRect().top - element.getBoundingClientRect().top : undefined;\n  }\n  get size() {\n    return this.__size;\n  }\n  set size(size) {\n    if (size === this.size) {\n      return;\n    }\n    // Cancel active debouncers\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.cancel();\n    }\n    if (this._debouncers && this._debouncers._increasePoolIfNeeded) {\n      // Avoid creating unnecessary elements on the following flush()\n      this._debouncers._increasePoolIfNeeded.cancel();\n    }\n\n    // Prevent element update while the scroll position is being restored\n    this.__preventElementUpdates = true;\n\n    // Record the scroll position before changing the size\n    let fvi; // First visible index\n    let fviOffsetBefore; // Scroll offset of the first visible index\n    if (size > 0) {\n      fvi = this.adjustedFirstVisibleIndex;\n      fviOffsetBefore = this.__getIndexScrollOffset(fvi);\n    }\n\n    // Change the size\n    this.__size = size;\n    this._itemsChanged({\n      path: 'items'\n    });\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n\n    // Try to restore the scroll position if the new size is larger than 0\n    if (size > 0) {\n      fvi = Math.min(fvi, size - 1);\n      this.scrollToIndex(fvi);\n      const fviOffsetAfter = this.__getIndexScrollOffset(fvi);\n      if (fviOffsetBefore !== undefined && fviOffsetAfter !== undefined) {\n        this._scrollTop += fviOffsetBefore - fviOffsetAfter;\n      }\n    }\n\n    // When reducing size while invisible, iron-list does not update items, so\n    // their hidden state is not updated and their __lastUpdatedIndex is not\n    // reset. In that case force an update here.\n    if (!this._isVisible) {\n      this._assignModels();\n    }\n    if (!this.elementsContainer.children.length) {\n      requestAnimationFrame(() => this._resizeHandler());\n    }\n    this.__preventElementUpdates = false;\n    // Schedule and flush a resize handler\n    this._resizeHandler();\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n  }\n\n  /** @private */\n  get _scrollTop() {\n    return this.scrollTarget.scrollTop;\n  }\n\n  /** @private */\n  set _scrollTop(top) {\n    this.scrollTarget.scrollTop = top;\n  }\n\n  /** @private */\n  get items() {\n    return {\n      length: Math.min(this.size, MAX_VIRTUAL_COUNT)\n    };\n  }\n\n  /** @private */\n  get offsetHeight() {\n    return this.scrollTarget.offsetHeight;\n  }\n\n  /** @private */\n  get $() {\n    return {\n      items: this.scrollContainer\n    };\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    const styles = window.getComputedStyle(this.scrollTarget);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.elementsContainer.offsetWidth;\n    this._viewportHeight = this.scrollTarget.offsetHeight;\n    this._scrollPageHeight = this._viewportHeight - this._scrollLineHeight;\n    if (this.grid) {\n      this._updateGridMetrics();\n    }\n  }\n\n  /** @private */\n  setAttribute() {}\n\n  /** @private */\n  _createPool(size) {\n    const physicalItems = this.createElements(size);\n    const fragment = document.createDocumentFragment();\n    physicalItems.forEach(el => {\n      el.style.position = 'absolute';\n      fragment.appendChild(el);\n      this.__resizeObserver.observe(el);\n    });\n    this.elementsContainer.appendChild(fragment);\n    return physicalItems;\n  }\n\n  /** @private */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      el.hidden = vidx >= this.size;\n      if (!el.hidden) {\n        el.__virtualIndex = vidx + (this._vidxOffset || 0);\n        this.__updateElement(el, el.__virtualIndex);\n      } else {\n        delete el.__lastUpdatedIndex;\n      }\n    }, itemSet);\n  }\n\n  /** @private */\n  _isClientFull() {\n    // Workaround an issue in iron-list that can cause it to freeze on fast scroll\n    setTimeout(() => {\n      this.__clientFull = true;\n    });\n    return this.__clientFull || super._isClientFull();\n  }\n\n  /** @private */\n  translate3d(_x, y, _z, el) {\n    el.style.transform = `translateY(${y})`;\n  }\n\n  /** @private */\n  toggleScrollListener() {}\n  _scrollHandler() {\n    // The scroll target is hidden.\n    if (this.scrollTarget.offsetHeight === 0) {\n      return;\n    }\n    this._adjustVirtualIndexOffset(this._scrollTop - (this.__previousScrollTop || 0));\n    const delta = this.scrollTarget.scrollTop - this._scrollPosition;\n    super._scrollHandler();\n    if (this._physicalCount !== 0) {\n      const isScrollingDown = delta >= 0;\n      const reusables = this._getReusables(!isScrollingDown);\n      if (reusables.indexes.length) {\n        // After running super._scrollHandler, fix internal properties to workaround an iron-list issue.\n        // See https://github.com/vaadin/web-components/issues/1691\n        this._physicalTop = reusables.physicalTop;\n        if (isScrollingDown) {\n          this._virtualStart -= reusables.indexes.length;\n          this._physicalStart -= reusables.indexes.length;\n        } else {\n          this._virtualStart += reusables.indexes.length;\n          this._physicalStart += reusables.indexes.length;\n        }\n        this._resizeHandler();\n      }\n    }\n    if (delta) {\n      // There was a change in scroll top. Schedule a check for invalid item positioning.\n      this.__fixInvalidItemPositioningDebouncer = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__fixInvalidItemPositioningDebouncer, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.FIX_INVALID_ITEM_POSITIONING), () => this.__fixInvalidItemPositioning());\n    }\n    if (this.reorderElements) {\n      this.__scrollReorderDebouncer = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__scrollReorderDebouncer, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.SCROLL_REORDER), () => this.__reorderElements());\n    }\n    this.__previousScrollTop = this._scrollTop;\n\n    // If the first visible index is not 0 when scrolled to the top,\n    // scroll to index 0 to fix the issue.\n    if (this._scrollTop === 0 && this.firstVisibleIndex !== 0 && Math.abs(delta) > 0) {\n      this.scrollToIndex(0);\n    }\n  }\n\n  /**\n   * Work around an iron-list issue with invalid item positioning.\n   * See https://github.com/vaadin/flow-components/issues/4306\n   * @private\n   */\n  __fixInvalidItemPositioning() {\n    if (!this.scrollTarget.isConnected) {\n      return;\n    }\n\n    // Check if the first physical item element is below the top of the viewport\n    const physicalTopBelowTop = this._physicalTop > this._scrollTop;\n    // Check if the last physical item element is above the bottom of the viewport\n    const physicalBottomAboveBottom = this._physicalBottom < this._scrollBottom;\n\n    // Check if the first index is visible\n    const firstIndexVisible = this.adjustedFirstVisibleIndex === 0;\n    // Check if the last index is visible\n    const lastIndexVisible = this.adjustedLastVisibleIndex === this.size - 1;\n    if (physicalTopBelowTop && !firstIndexVisible || physicalBottomAboveBottom && !lastIndexVisible) {\n      // Invalid state! Try to recover.\n\n      const isScrollingDown = physicalBottomAboveBottom;\n      // Set the \"_ratio\" property temporarily to 0 to make iron-list's _getReusables\n      // place all the free physical items on one side of the viewport.\n      const originalRatio = this._ratio;\n      this._ratio = 0;\n      // Fake a scroll change to make _scrollHandler place the physical items\n      // on the desired side.\n      this._scrollPosition = this._scrollTop + (isScrollingDown ? -1 : 1);\n      this._scrollHandler();\n      // Restore the original \"_ratio\" value.\n      this._ratio = originalRatio;\n    }\n  }\n\n  /** @private */\n  __onWheel(e) {\n    if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n      return;\n    }\n    let deltaY = e.deltaY;\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      // Scrolling by \"lines of text\" instead of pixels\n      deltaY *= this._scrollLineHeight;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      // Scrolling by \"pages\" instead of pixels\n      deltaY *= this._scrollPageHeight;\n    }\n    if (!this._deltaYAcc) {\n      this._deltaYAcc = 0;\n    }\n    if (this._wheelAnimationFrame) {\n      // Accumulate wheel delta while a frame is being processed\n      this._deltaYAcc += deltaY;\n      e.preventDefault();\n      return;\n    }\n    deltaY += this._deltaYAcc;\n    this._deltaYAcc = 0;\n    this._wheelAnimationFrame = true;\n    this.__debouncerWheelAnimationFrame = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__debouncerWheelAnimationFrame, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame, () => {\n      this._wheelAnimationFrame = false;\n    });\n    const momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n    if (this._canScroll(this.scrollTarget, e.deltaX, deltaY)) {\n      e.preventDefault();\n      this.scrollTarget.scrollTop += deltaY;\n      this.scrollTarget.scrollLeft += e.deltaX;\n      this._hasResidualMomentum = true;\n      this._ignoreNewWheel = true;\n      this._debouncerIgnoreNewWheel = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this._debouncerIgnoreNewWheel, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.IGNORE_WHEEL), () => {\n        this._ignoreNewWheel = false;\n      });\n    } else if (this._hasResidualMomentum && momentum <= this._previousMomentum || this._ignoreNewWheel) {\n      e.preventDefault();\n    } else if (momentum > this._previousMomentum) {\n      this._hasResidualMomentum = false;\n    }\n    this._previousMomentum = momentum;\n  }\n\n  /**\n   * Determines if the element has an ancestor that handles the scroll delta prior to this\n   *\n   * @private\n   */\n  _hasScrolledAncestor(el, deltaX, deltaY) {\n    if (el === this.scrollTarget || el === this.scrollTarget.getRootNode().host) {\n      return false;\n    } else if (this._canScroll(el, deltaX, deltaY) && ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1) {\n      return true;\n    } else if (el !== this && el.parentElement) {\n      return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n    }\n  }\n  _canScroll(el, deltaX, deltaY) {\n    return deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight || deltaY < 0 && el.scrollTop > 0 || deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth || deltaX < 0 && el.scrollLeft > 0;\n  }\n\n  /**\n   * @returns {Number|undefined} - The browser's default font-size in pixels\n   * @private\n   */\n  _getScrollLineHeight() {\n    const el = document.createElement('div');\n    el.style.fontSize = 'initial';\n    el.style.display = 'none';\n    document.body.appendChild(el);\n    const fontSize = window.getComputedStyle(el).fontSize;\n    document.body.removeChild(el);\n    return fontSize ? window.parseInt(fontSize) : undefined;\n  }\n  __getVisibleElements() {\n    return Array.from(this.elementsContainer.children).filter(element => !element.hidden);\n  }\n\n  /** @private */\n  __reorderElements() {\n    if (this.__mouseDown) {\n      this.__pendingReorder = true;\n      return;\n    }\n    this.__pendingReorder = false;\n    const adjustedVirtualStart = this._virtualStart + (this._vidxOffset || 0);\n\n    // Which row to use as a target?\n    const visibleElements = this.__getVisibleElements();\n    const elementWithFocus = visibleElements.find(element => element.contains(this.elementsContainer.getRootNode().activeElement) || element.contains(this.scrollTarget.getRootNode().activeElement));\n    const targetElement = elementWithFocus || visibleElements[0];\n    if (!targetElement) {\n      // All elements are hidden, don't reorder\n      return;\n    }\n\n    // Where the target row should be?\n    const targetPhysicalIndex = targetElement.__virtualIndex - adjustedVirtualStart;\n\n    // Reodrer the DOM elements to keep the target row at the target physical index\n    const delta = visibleElements.indexOf(targetElement) - targetPhysicalIndex;\n    if (delta > 0) {\n      for (let i = 0; i < delta; i++) {\n        this.elementsContainer.appendChild(visibleElements[i]);\n      }\n    } else if (delta < 0) {\n      for (let i = visibleElements.length + delta; i < visibleElements.length; i++) {\n        this.elementsContainer.insertBefore(visibleElements[i], visibleElements[0]);\n      }\n    }\n\n    // Due to a rendering bug, reordering the rows can make parts of the scroll target disappear\n    // on Safari when using sticky positioning in case the scroll target is inside a flexbox.\n    // This issue manifests with grid (the header can disappear if grid is used inside a flexbox)\n    if (_browser_utils_js__WEBPACK_IMPORTED_MODULE_1__.isSafari) {\n      const {\n        transform\n      } = this.scrollTarget.style;\n      this.scrollTarget.style.transform = 'translateZ(0)';\n      setTimeout(() => {\n        this.scrollTarget.style.transform = transform;\n      });\n    }\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (this._virtualCount >= this.size) {\n      this._vidxOffset = 0;\n    } else if (this.__skipNextVirtualIndexAdjust) {\n      this.__skipNextVirtualIndexAdjust = false;\n    } else if (Math.abs(delta) > 10000) {\n      // Process a large scroll position change\n      const scale = this._scrollTop / (this.scrollTarget.scrollHeight - this.scrollTarget.offsetHeight);\n      const offset = scale * this.size;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset;\n      const threshold = OFFSET_ADJUST_MIN_THRESHOLD;\n      const maxShift = 100;\n\n      // Near start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n      }\n\n      // Near end\n      const maxOffset = this.size - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount - 1);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n      }\n    }\n  }\n}\nObject.setPrototypeOf(IronListAdapter.prototype, _iron_list_core_js__WEBPACK_IMPORTED_MODULE_3__.ironList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdmlydHVhbGl6ZXItaXJvbi1saXN0LWFkYXB0ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFLQTtBQUVBO0FBQ0E7QUFLQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFJQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQU1BOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUVBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdmlydHVhbGl6ZXItaXJvbi1saXN0LWFkYXB0ZXIuanM/YzY3OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9tZW1iZXItb3JkZXJpbmcgKi9cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS92YWFkaW4vZXNsaW50LWNvbmZpZy12YWFkaW4vaXNzdWVzLzMzXG5pbXBvcnQgeyBhbmltYXRpb25GcmFtZSwgdGltZU91dCB9IGZyb20gJy4vYXN5bmMuanMnO1xuaW1wb3J0IHsgaXNTYWZhcmkgfSBmcm9tICcuL2Jyb3dzZXItdXRpbHMuanMnO1xuaW1wb3J0IHsgRGVib3VuY2VyLCBmbHVzaCB9IGZyb20gJy4vZGVib3VuY2UuanMnO1xuaW1wb3J0IHsgaXJvbkxpc3QgfSBmcm9tICcuL2lyb24tbGlzdC1jb3JlLmpzJztcblxuLy8gSXJvbi1saXN0IGNhbiBieSBkZWZhdWx0IGhhbmRsZSBzaXplcyB1cCB0byBhcm91bmQgMTAwMDAwLlxuLy8gV2hlbiB0aGUgc2l6ZSBpcyBsYXJnZXIgdGhhbiBNQVhfVklSVFVBTF9DT1VOVCBfdmlkeE9mZnNldCBpcyB1c2VkXG5jb25zdCBNQVhfVklSVFVBTF9DT1VOVCA9IDEwMDAwMDtcbmNvbnN0IE9GRlNFVF9BREpVU1RfTUlOX1RIUkVTSE9MRCA9IDEwMDA7XG5cbmV4cG9ydCBjbGFzcyBJcm9uTGlzdEFkYXB0ZXIge1xuICBjb25zdHJ1Y3Rvcih7IGNyZWF0ZUVsZW1lbnRzLCB1cGRhdGVFbGVtZW50LCBzY3JvbGxUYXJnZXQsIHNjcm9sbENvbnRhaW5lciwgZWxlbWVudHNDb250YWluZXIsIHJlb3JkZXJFbGVtZW50cyB9KSB7XG4gICAgdGhpcy5pc0F0dGFjaGVkID0gdHJ1ZTtcbiAgICB0aGlzLl92aWR4T2Zmc2V0ID0gMDtcbiAgICB0aGlzLmNyZWF0ZUVsZW1lbnRzID0gY3JlYXRlRWxlbWVudHM7XG4gICAgdGhpcy51cGRhdGVFbGVtZW50ID0gdXBkYXRlRWxlbWVudDtcbiAgICB0aGlzLnNjcm9sbFRhcmdldCA9IHNjcm9sbFRhcmdldDtcbiAgICB0aGlzLnNjcm9sbENvbnRhaW5lciA9IHNjcm9sbENvbnRhaW5lcjtcbiAgICB0aGlzLmVsZW1lbnRzQ29udGFpbmVyID0gZWxlbWVudHNDb250YWluZXIgfHwgc2Nyb2xsQ29udGFpbmVyO1xuICAgIHRoaXMucmVvcmRlckVsZW1lbnRzID0gcmVvcmRlckVsZW1lbnRzO1xuICAgIC8vIElyb24tbGlzdCB1c2VzIHRoaXMgdmFsdWUgdG8gZGV0ZXJtaW5lIGhvdyBtYW55IHBhZ2VzIG9mIGVsZW1lbnRzIHRvIHJlbmRlclxuICAgIHRoaXMuX21heFBhZ2VzID0gMS4zO1xuXG4gICAgLy8gUGxhY2Vob2xkZXIgaGVpZ2h0ICh1c2VkIGZvciBzaXppbmcgZWxlbWVudHMgdGhhdCBoYXZlIGludHJpbnNpYyAwIGhlaWdodCBhZnRlciB1cGRhdGUpXG4gICAgdGhpcy5fX3BsYWNlaG9sZGVySGVpZ2h0ID0gMjAwO1xuICAgIC8vIEEgcXVldWUgb2YgMTAgcHJldmlvdXMgZWxlbWVudCBoZWlnaHRzXG4gICAgdGhpcy5fX2VsZW1lbnRIZWlnaHRRdWV1ZSA9IEFycmF5KDEwKTtcblxuICAgIHRoaXMudGltZW91dHMgPSB7XG4gICAgICBTQ1JPTExfUkVPUkRFUjogNTAwLFxuICAgICAgSUdOT1JFX1dIRUVMOiA1MDAsXG4gICAgICBGSVhfSU5WQUxJRF9JVEVNX1BPU0lUSU9OSU5HOiAxMDAsXG4gICAgfTtcblxuICAgIHRoaXMuX19yZXNpemVPYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoKSA9PiB0aGlzLl9yZXNpemVIYW5kbGVyKCkpO1xuXG4gICAgaWYgKGdldENvbXB1dGVkU3R5bGUodGhpcy5zY3JvbGxUYXJnZXQpLm92ZXJmbG93ID09PSAndmlzaWJsZScpIHtcbiAgICAgIHRoaXMuc2Nyb2xsVGFyZ2V0LnN0eWxlLm92ZXJmbG93ID0gJ2F1dG8nO1xuICAgIH1cblxuICAgIGlmIChnZXRDb21wdXRlZFN0eWxlKHRoaXMuc2Nyb2xsQ29udGFpbmVyKS5wb3NpdGlvbiA9PT0gJ3N0YXRpYycpIHtcbiAgICAgIHRoaXMuc2Nyb2xsQ29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcbiAgICB9XG5cbiAgICB0aGlzLl9fcmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLnNjcm9sbFRhcmdldCk7XG4gICAgdGhpcy5zY3JvbGxUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgKCkgPT4gdGhpcy5fc2Nyb2xsSGFuZGxlcigpKTtcblxuICAgIHRoaXMuX3Njcm9sbExpbmVIZWlnaHQgPSB0aGlzLl9nZXRTY3JvbGxMaW5lSGVpZ2h0KCk7XG4gICAgdGhpcy5zY3JvbGxUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcignd2hlZWwnLCAoZSkgPT4gdGhpcy5fX29uV2hlZWwoZSkpO1xuXG4gICAgaWYgKHRoaXMucmVvcmRlckVsZW1lbnRzKSB7XG4gICAgICAvLyBSZW9yZGVyaW5nIHRoZSBwaHlzaWNhbCBlbGVtZW50cyBjYW5jZWxzIHRoZSB1c2VyJ3MgZ3JhYiBvZiB0aGUgc2Nyb2xsIGJhciBoYW5kbGUgb24gU2FmYXJpLlxuICAgICAgLy8gTmVlZCB0byBkZWZlciByZW9yZGVyaW5nIHVudGlsIHRoZSB1c2VyIGxldHMgZ28gb2YgdGhlIHNjcm9sbCBiYXIgaGFuZGxlLlxuICAgICAgdGhpcy5zY3JvbGxUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKCkgPT4ge1xuICAgICAgICB0aGlzLl9fbW91c2VEb3duID0gdHJ1ZTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5zY3JvbGxUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsICgpID0+IHtcbiAgICAgICAgdGhpcy5fX21vdXNlRG93biA9IGZhbHNlO1xuICAgICAgICBpZiAodGhpcy5fX3BlbmRpbmdSZW9yZGVyKSB7XG4gICAgICAgICAgdGhpcy5fX3Jlb3JkZXJFbGVtZW50cygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBnZXQgc2Nyb2xsT2Zmc2V0KCkge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgZ2V0IGFkanVzdGVkRmlyc3RWaXNpYmxlSW5kZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuZmlyc3RWaXNpYmxlSW5kZXggKyB0aGlzLl92aWR4T2Zmc2V0O1xuICB9XG5cbiAgZ2V0IGFkanVzdGVkTGFzdFZpc2libGVJbmRleCgpIHtcbiAgICByZXR1cm4gdGhpcy5sYXN0VmlzaWJsZUluZGV4ICsgdGhpcy5fdmlkeE9mZnNldDtcbiAgfVxuXG4gIHNjcm9sbFRvSW5kZXgoaW5kZXgpIHtcbiAgICBpZiAodHlwZW9mIGluZGV4ICE9PSAnbnVtYmVyJyB8fCBpc05hTihpbmRleCkgfHwgdGhpcy5zaXplID09PSAwIHx8ICF0aGlzLnNjcm9sbFRhcmdldC5vZmZzZXRIZWlnaHQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaW5kZXggPSB0aGlzLl9jbGFtcChpbmRleCwgMCwgdGhpcy5zaXplIC0gMSk7XG5cbiAgICBjb25zdCB2aXNpYmxlRWxlbWVudENvdW50ID0gdGhpcy5fX2dldFZpc2libGVFbGVtZW50cygpLmxlbmd0aDtcbiAgICBsZXQgdGFyZ2V0VmlydHVhbEluZGV4ID0gTWF0aC5mbG9vcigoaW5kZXggLyB0aGlzLnNpemUpICogdGhpcy5fdmlydHVhbENvdW50KTtcbiAgICBpZiAodGhpcy5fdmlydHVhbENvdW50IC0gdGFyZ2V0VmlydHVhbEluZGV4IDwgdmlzaWJsZUVsZW1lbnRDb3VudCkge1xuICAgICAgdGFyZ2V0VmlydHVhbEluZGV4ID0gdGhpcy5fdmlydHVhbENvdW50IC0gKHRoaXMuc2l6ZSAtIGluZGV4KTtcbiAgICAgIHRoaXMuX3ZpZHhPZmZzZXQgPSB0aGlzLnNpemUgLSB0aGlzLl92aXJ0dWFsQ291bnQ7XG4gICAgfSBlbHNlIGlmICh0YXJnZXRWaXJ0dWFsSW5kZXggPCB2aXNpYmxlRWxlbWVudENvdW50KSB7XG4gICAgICBpZiAoaW5kZXggPCBPRkZTRVRfQURKVVNUX01JTl9USFJFU0hPTEQpIHtcbiAgICAgICAgdGFyZ2V0VmlydHVhbEluZGV4ID0gaW5kZXg7XG4gICAgICAgIHRoaXMuX3ZpZHhPZmZzZXQgPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0VmlydHVhbEluZGV4ID0gT0ZGU0VUX0FESlVTVF9NSU5fVEhSRVNIT0xEO1xuICAgICAgICB0aGlzLl92aWR4T2Zmc2V0ID0gaW5kZXggLSB0YXJnZXRWaXJ0dWFsSW5kZXg7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3ZpZHhPZmZzZXQgPSBpbmRleCAtIHRhcmdldFZpcnR1YWxJbmRleDtcbiAgICB9XG5cbiAgICB0aGlzLl9fc2tpcE5leHRWaXJ0dWFsSW5kZXhBZGp1c3QgPSB0cnVlO1xuICAgIHN1cGVyLnNjcm9sbFRvSW5kZXgodGFyZ2V0VmlydHVhbEluZGV4KTtcblxuICAgIGlmICh0aGlzLmFkanVzdGVkRmlyc3RWaXNpYmxlSW5kZXggIT09IGluZGV4ICYmIHRoaXMuX3Njcm9sbFRvcCA8IHRoaXMuX21heFNjcm9sbFRvcCAmJiAhdGhpcy5ncmlkKSB7XG4gICAgICAvLyBXb3JrYXJvdW5kIGFuIGlyb24tbGlzdCBpc3N1ZSBieSBtYW51YWxseSBhZGp1c3RpbmcgdGhlIHNjcm9sbCBwb3NpdGlvblxuICAgICAgdGhpcy5fc2Nyb2xsVG9wIC09IHRoaXMuX19nZXRJbmRleFNjcm9sbE9mZnNldChpbmRleCkgfHwgMDtcbiAgICB9XG4gICAgdGhpcy5fc2Nyb2xsSGFuZGxlcigpO1xuICB9XG5cbiAgZmx1c2goKSB7XG4gICAgLy8gVGhlIHNjcm9sbCB0YXJnZXQgaXMgaGlkZGVuLlxuICAgIGlmICh0aGlzLnNjcm9sbFRhcmdldC5vZmZzZXRIZWlnaHQgPT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9yZXNpemVIYW5kbGVyKCk7XG4gICAgZmx1c2goKTtcbiAgICB0aGlzLl9zY3JvbGxIYW5kbGVyKCk7XG4gICAgaWYgKHRoaXMuX19maXhJbnZhbGlkSXRlbVBvc2l0aW9uaW5nRGVib3VuY2VyKSB7XG4gICAgICB0aGlzLl9fZml4SW52YWxpZEl0ZW1Qb3NpdGlvbmluZ0RlYm91bmNlci5mbHVzaCgpO1xuICAgIH1cbiAgICBpZiAodGhpcy5fX3Njcm9sbFJlb3JkZXJEZWJvdW5jZXIpIHtcbiAgICAgIHRoaXMuX19zY3JvbGxSZW9yZGVyRGVib3VuY2VyLmZsdXNoKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLl9fZGVib3VuY2VyV2hlZWxBbmltYXRpb25GcmFtZSkge1xuICAgICAgdGhpcy5fX2RlYm91bmNlcldoZWVsQW5pbWF0aW9uRnJhbWUuZmx1c2goKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGUoc3RhcnRJbmRleCA9IDAsIGVuZEluZGV4ID0gdGhpcy5zaXplIC0gMSkge1xuICAgIHRoaXMuX19nZXRWaXNpYmxlRWxlbWVudHMoKS5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgaWYgKGVsLl9fdmlydHVhbEluZGV4ID49IHN0YXJ0SW5kZXggJiYgZWwuX192aXJ0dWFsSW5kZXggPD0gZW5kSW5kZXgpIHtcbiAgICAgICAgdGhpcy5fX3VwZGF0ZUVsZW1lbnQoZWwsIGVsLl9fdmlydHVhbEluZGV4LCB0cnVlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSBoZWlnaHQgZm9yIGEgZ2l2ZW4gc2V0IG9mIGl0ZW1zLlxuICAgKlxuICAgKiBAcGFyYW0geyFBcnJheTxudW1iZXI+PX0gaXRlbVNldFxuICAgKi9cbiAgX3VwZGF0ZU1ldHJpY3MoaXRlbVNldCkge1xuICAgIC8vIE1ha2Ugc3VyZSB3ZSBkaXN0cmlidXRlZCBhbGwgdGhlIHBoeXNpY2FsIGl0ZW1zXG4gICAgLy8gc28gd2UgY2FuIG1lYXN1cmUgdGhlbS5cbiAgICBmbHVzaCgpO1xuXG4gICAgbGV0IG5ld1BoeXNpY2FsU2l6ZSA9IDA7XG4gICAgbGV0IG9sZFBoeXNpY2FsU2l6ZSA9IDA7XG4gICAgY29uc3QgcHJldkF2Z0NvdW50ID0gdGhpcy5fcGh5c2ljYWxBdmVyYWdlQ291bnQ7XG4gICAgY29uc3QgcHJldlBoeXNpY2FsQXZnID0gdGhpcy5fcGh5c2ljYWxBdmVyYWdlO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgIHRoaXMuX2l0ZXJhdGVJdGVtcygocGlkeCwgdmlkeCkgPT4ge1xuICAgICAgb2xkUGh5c2ljYWxTaXplICs9IHRoaXMuX3BoeXNpY2FsU2l6ZXNbcGlkeF07XG4gICAgICB0aGlzLl9waHlzaWNhbFNpemVzW3BpZHhdID0gTWF0aC5jZWlsKHRoaXMuX19nZXRCb3JkZXJCb3hIZWlnaHQodGhpcy5fcGh5c2ljYWxJdGVtc1twaWR4XSkpO1xuICAgICAgbmV3UGh5c2ljYWxTaXplICs9IHRoaXMuX3BoeXNpY2FsU2l6ZXNbcGlkeF07XG4gICAgICB0aGlzLl9waHlzaWNhbEF2ZXJhZ2VDb3VudCArPSB0aGlzLl9waHlzaWNhbFNpemVzW3BpZHhdID8gMSA6IDA7XG4gICAgfSwgaXRlbVNldCk7XG5cbiAgICB0aGlzLl9waHlzaWNhbFNpemUgPSB0aGlzLl9waHlzaWNhbFNpemUgKyBuZXdQaHlzaWNhbFNpemUgLSBvbGRQaHlzaWNhbFNpemU7XG5cbiAgICAvLyBVcGRhdGUgdGhlIGF2ZXJhZ2UgaWYgaXQgbWVhc3VyZWQgc29tZXRoaW5nLlxuICAgIGlmICh0aGlzLl9waHlzaWNhbEF2ZXJhZ2VDb3VudCAhPT0gcHJldkF2Z0NvdW50KSB7XG4gICAgICB0aGlzLl9waHlzaWNhbEF2ZXJhZ2UgPSBNYXRoLnJvdW5kKFxuICAgICAgICAocHJldlBoeXNpY2FsQXZnICogcHJldkF2Z0NvdW50ICsgbmV3UGh5c2ljYWxTaXplKSAvIHRoaXMuX3BoeXNpY2FsQXZlcmFnZUNvdW50LFxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBfX2dldEJvcmRlckJveEhlaWdodChlbCkge1xuICAgIGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShlbCk7XG5cbiAgICBjb25zdCBpdGVtSGVpZ2h0ID0gcGFyc2VGbG9hdChzdHlsZS5oZWlnaHQpIHx8IDA7XG5cbiAgICBpZiAoc3R5bGUuYm94U2l6aW5nID09PSAnYm9yZGVyLWJveCcpIHtcbiAgICAgIHJldHVybiBpdGVtSGVpZ2h0O1xuICAgIH1cblxuICAgIGNvbnN0IHBhZGRpbmdCb3R0b20gPSBwYXJzZUZsb2F0KHN0eWxlLnBhZGRpbmdCb3R0b20pIHx8IDA7XG4gICAgY29uc3QgcGFkZGluZ1RvcCA9IHBhcnNlRmxvYXQoc3R5bGUucGFkZGluZ1RvcCkgfHwgMDtcbiAgICBjb25zdCBib3JkZXJCb3R0b21XaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGUuYm9yZGVyQm90dG9tV2lkdGgpIHx8IDA7XG4gICAgY29uc3QgYm9yZGVyVG9wV2lkdGggPSBwYXJzZUZsb2F0KHN0eWxlLmJvcmRlclRvcFdpZHRoKSB8fCAwO1xuXG4gICAgcmV0dXJuIGl0ZW1IZWlnaHQgKyBwYWRkaW5nQm90dG9tICsgcGFkZGluZ1RvcCArIGJvcmRlckJvdHRvbVdpZHRoICsgYm9yZGVyVG9wV2lkdGg7XG4gIH1cblxuICBfX3VwZGF0ZUVsZW1lbnQoZWwsIGluZGV4LCBmb3JjZVNhbWVJbmRleFVwZGF0ZXMpIHtcbiAgICAvLyBDbGVhbiB1cCB0ZW1wb3JhcnkgcGxhY2Vob2xkZXIgc2l6aW5nXG4gICAgaWYgKGVsLnN0eWxlLnBhZGRpbmdUb3ApIHtcbiAgICAgIGVsLnN0eWxlLnBhZGRpbmdUb3AgPSAnJztcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuX19wcmV2ZW50RWxlbWVudFVwZGF0ZXMgJiYgKGVsLl9fbGFzdFVwZGF0ZWRJbmRleCAhPT0gaW5kZXggfHwgZm9yY2VTYW1lSW5kZXhVcGRhdGVzKSkge1xuICAgICAgdGhpcy51cGRhdGVFbGVtZW50KGVsLCBpbmRleCk7XG4gICAgICBlbC5fX2xhc3RVcGRhdGVkSW5kZXggPSBpbmRleDtcbiAgICB9XG5cbiAgICBjb25zdCBlbGVtZW50SGVpZ2h0ID0gZWwub2Zmc2V0SGVpZ2h0O1xuICAgIGlmIChlbGVtZW50SGVpZ2h0ID09PSAwKSB7XG4gICAgICAvLyBJZiB0aGUgZWxlbWVudHMgaGF2ZSAwIGhlaWdodCBhZnRlciB1cGRhdGUgKGZvciBleGFtcGxlIGR1ZSB0byBsYXp5IHJlbmRlcmluZyksXG4gICAgICAvLyBpdCByZXN1bHRzIGluIGlyb24tbGlzdCByZXF1ZXN0aW5nIHRvIGNyZWF0ZSBhbiB1bmxpbWl0ZWQgY291bnQgb2YgZWxlbWVudHMuXG4gICAgICAvLyBBc3NpZ24gYSB0ZW1wb3JhcnkgcGxhY2Vob2xkZXIgc2l6aW5nIHRvIGVsZW1lbnRzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGVuZCB1cCBoYXZpbmdcbiAgICAgIC8vIG5vIGhlaWdodC5cbiAgICAgIGVsLnN0eWxlLnBhZGRpbmdUb3AgPSBgJHt0aGlzLl9fcGxhY2Vob2xkZXJIZWlnaHR9cHhgO1xuXG4gICAgICAvLyBNYW51YWxseSBzY2hlZHVsZSB0aGUgcmVzaXplIGhhbmRsZXIgdG8gbWFrZSBzdXJlIHRoZSBwbGFjZWhvbGRlciBwYWRkaW5nIGlzXG4gICAgICAvLyBjbGVhcmVkIGluIGNhc2UgdGhlIHJlc2l6ZSBvYnNlcnZlciBuZXZlciB0cmlnZ2Vycy5cbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLl9yZXNpemVIYW5kbGVyKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBBZGQgZWxlbWVudCBoZWlnaHQgdG8gdGhlIHF1ZXVlXG4gICAgICB0aGlzLl9fZWxlbWVudEhlaWdodFF1ZXVlLnB1c2goZWxlbWVudEhlaWdodCk7XG4gICAgICB0aGlzLl9fZWxlbWVudEhlaWdodFF1ZXVlLnNoaWZ0KCk7XG5cbiAgICAgIC8vIENhbGN1YWx0ZSBuZXcgcGxhY2Vob2xkZXIgaGVpZ2h0IGJhc2VkIG9uIHRoZSBhdmVyYWdlIG9mIHRoZSBkZWZpbmVkIHZhbHVlcyBpbiB0aGVcbiAgICAgIC8vIGVsZW1lbnQgaGVpZ2h0IHF1ZXVlXG4gICAgICBjb25zdCBmaWx0ZXJlZEhlaWdodHMgPSB0aGlzLl9fZWxlbWVudEhlaWdodFF1ZXVlLmZpbHRlcigoaCkgPT4gaCAhPT0gdW5kZWZpbmVkKTtcbiAgICAgIHRoaXMuX19wbGFjZWhvbGRlckhlaWdodCA9IE1hdGgucm91bmQoZmlsdGVyZWRIZWlnaHRzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApIC8gZmlsdGVyZWRIZWlnaHRzLmxlbmd0aCk7XG4gICAgfVxuICB9XG5cbiAgX19nZXRJbmRleFNjcm9sbE9mZnNldChpbmRleCkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl9fZ2V0VmlzaWJsZUVsZW1lbnRzKCkuZmluZCgoZWwpID0+IGVsLl9fdmlydHVhbEluZGV4ID09PSBpbmRleCk7XG4gICAgcmV0dXJuIGVsZW1lbnQgPyB0aGlzLnNjcm9sbFRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgLSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLl9fc2l6ZTtcbiAgfVxuXG4gIHNldCBzaXplKHNpemUpIHtcbiAgICBpZiAoc2l6ZSA9PT0gdGhpcy5zaXplKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIENhbmNlbCBhY3RpdmUgZGVib3VuY2Vyc1xuICAgIGlmICh0aGlzLl9fZml4SW52YWxpZEl0ZW1Qb3NpdGlvbmluZ0RlYm91bmNlcikge1xuICAgICAgdGhpcy5fX2ZpeEludmFsaWRJdGVtUG9zaXRpb25pbmdEZWJvdW5jZXIuY2FuY2VsKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLl9kZWJvdW5jZXJzICYmIHRoaXMuX2RlYm91bmNlcnMuX2luY3JlYXNlUG9vbElmTmVlZGVkKSB7XG4gICAgICAvLyBBdm9pZCBjcmVhdGluZyB1bm5lY2Vzc2FyeSBlbGVtZW50cyBvbiB0aGUgZm9sbG93aW5nIGZsdXNoKClcbiAgICAgIHRoaXMuX2RlYm91bmNlcnMuX2luY3JlYXNlUG9vbElmTmVlZGVkLmNhbmNlbCgpO1xuICAgIH1cblxuICAgIC8vIFByZXZlbnQgZWxlbWVudCB1cGRhdGUgd2hpbGUgdGhlIHNjcm9sbCBwb3NpdGlvbiBpcyBiZWluZyByZXN0b3JlZFxuICAgIHRoaXMuX19wcmV2ZW50RWxlbWVudFVwZGF0ZXMgPSB0cnVlO1xuXG4gICAgLy8gUmVjb3JkIHRoZSBzY3JvbGwgcG9zaXRpb24gYmVmb3JlIGNoYW5naW5nIHRoZSBzaXplXG4gICAgbGV0IGZ2aTsgLy8gRmlyc3QgdmlzaWJsZSBpbmRleFxuICAgIGxldCBmdmlPZmZzZXRCZWZvcmU7IC8vIFNjcm9sbCBvZmZzZXQgb2YgdGhlIGZpcnN0IHZpc2libGUgaW5kZXhcbiAgICBpZiAoc2l6ZSA+IDApIHtcbiAgICAgIGZ2aSA9IHRoaXMuYWRqdXN0ZWRGaXJzdFZpc2libGVJbmRleDtcbiAgICAgIGZ2aU9mZnNldEJlZm9yZSA9IHRoaXMuX19nZXRJbmRleFNjcm9sbE9mZnNldChmdmkpO1xuICAgIH1cblxuICAgIC8vIENoYW5nZSB0aGUgc2l6ZVxuICAgIHRoaXMuX19zaXplID0gc2l6ZTtcblxuICAgIHRoaXMuX2l0ZW1zQ2hhbmdlZCh7XG4gICAgICBwYXRoOiAnaXRlbXMnLFxuICAgIH0pO1xuICAgIGZsdXNoKCk7XG5cbiAgICAvLyBUcnkgdG8gcmVzdG9yZSB0aGUgc2Nyb2xsIHBvc2l0aW9uIGlmIHRoZSBuZXcgc2l6ZSBpcyBsYXJnZXIgdGhhbiAwXG4gICAgaWYgKHNpemUgPiAwKSB7XG4gICAgICBmdmkgPSBNYXRoLm1pbihmdmksIHNpemUgLSAxKTtcbiAgICAgIHRoaXMuc2Nyb2xsVG9JbmRleChmdmkpO1xuXG4gICAgICBjb25zdCBmdmlPZmZzZXRBZnRlciA9IHRoaXMuX19nZXRJbmRleFNjcm9sbE9mZnNldChmdmkpO1xuICAgICAgaWYgKGZ2aU9mZnNldEJlZm9yZSAhPT0gdW5kZWZpbmVkICYmIGZ2aU9mZnNldEFmdGVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5fc2Nyb2xsVG9wICs9IGZ2aU9mZnNldEJlZm9yZSAtIGZ2aU9mZnNldEFmdGVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFdoZW4gcmVkdWNpbmcgc2l6ZSB3aGlsZSBpbnZpc2libGUsIGlyb24tbGlzdCBkb2VzIG5vdCB1cGRhdGUgaXRlbXMsIHNvXG4gICAgLy8gdGhlaXIgaGlkZGVuIHN0YXRlIGlzIG5vdCB1cGRhdGVkIGFuZCB0aGVpciBfX2xhc3RVcGRhdGVkSW5kZXggaXMgbm90XG4gICAgLy8gcmVzZXQuIEluIHRoYXQgY2FzZSBmb3JjZSBhbiB1cGRhdGUgaGVyZS5cbiAgICBpZiAoIXRoaXMuX2lzVmlzaWJsZSkge1xuICAgICAgdGhpcy5fYXNzaWduTW9kZWxzKCk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmVsZW1lbnRzQ29udGFpbmVyLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHRoaXMuX3Jlc2l6ZUhhbmRsZXIoKSk7XG4gICAgfVxuXG4gICAgdGhpcy5fX3ByZXZlbnRFbGVtZW50VXBkYXRlcyA9IGZhbHNlO1xuICAgIC8vIFNjaGVkdWxlIGFuZCBmbHVzaCBhIHJlc2l6ZSBoYW5kbGVyXG4gICAgdGhpcy5fcmVzaXplSGFuZGxlcigpO1xuICAgIGZsdXNoKCk7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgZ2V0IF9zY3JvbGxUb3AoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2Nyb2xsVGFyZ2V0LnNjcm9sbFRvcDtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBzZXQgX3Njcm9sbFRvcCh0b3ApIHtcbiAgICB0aGlzLnNjcm9sbFRhcmdldC5zY3JvbGxUb3AgPSB0b3A7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgZ2V0IGl0ZW1zKCkge1xuICAgIHJldHVybiB7XG4gICAgICBsZW5ndGg6IE1hdGgubWluKHRoaXMuc2l6ZSwgTUFYX1ZJUlRVQUxfQ09VTlQpLFxuICAgIH07XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgZ2V0IG9mZnNldEhlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5zY3JvbGxUYXJnZXQub2Zmc2V0SGVpZ2h0O1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIGdldCAkKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpdGVtczogdGhpcy5zY3JvbGxDb250YWluZXIsXG4gICAgfTtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICB1cGRhdGVWaWV3cG9ydEJvdW5kYXJpZXMoKSB7XG4gICAgY29uc3Qgc3R5bGVzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5zY3JvbGxUYXJnZXQpO1xuICAgIHRoaXMuX3Njcm9sbGVyUGFkZGluZ1RvcCA9IHRoaXMuc2Nyb2xsVGFyZ2V0ID09PSB0aGlzID8gMCA6IHBhcnNlSW50KHN0eWxlc1sncGFkZGluZy10b3AnXSwgMTApO1xuICAgIHRoaXMuX2lzUlRMID0gQm9vbGVhbihzdHlsZXMuZGlyZWN0aW9uID09PSAncnRsJyk7XG4gICAgdGhpcy5fdmlld3BvcnRXaWR0aCA9IHRoaXMuZWxlbWVudHNDb250YWluZXIub2Zmc2V0V2lkdGg7XG4gICAgdGhpcy5fdmlld3BvcnRIZWlnaHQgPSB0aGlzLnNjcm9sbFRhcmdldC5vZmZzZXRIZWlnaHQ7XG4gICAgdGhpcy5fc2Nyb2xsUGFnZUhlaWdodCA9IHRoaXMuX3ZpZXdwb3J0SGVpZ2h0IC0gdGhpcy5fc2Nyb2xsTGluZUhlaWdodDtcbiAgICBpZiAodGhpcy5ncmlkKSB7XG4gICAgICB0aGlzLl91cGRhdGVHcmlkTWV0cmljcygpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBzZXRBdHRyaWJ1dGUoKSB7fVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBfY3JlYXRlUG9vbChzaXplKSB7XG4gICAgY29uc3QgcGh5c2ljYWxJdGVtcyA9IHRoaXMuY3JlYXRlRWxlbWVudHMoc2l6ZSk7XG4gICAgY29uc3QgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgcGh5c2ljYWxJdGVtcy5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgZWwuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoZWwpO1xuICAgICAgdGhpcy5fX3Jlc2l6ZU9ic2VydmVyLm9ic2VydmUoZWwpO1xuICAgIH0pO1xuICAgIHRoaXMuZWxlbWVudHNDb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuICAgIHJldHVybiBwaHlzaWNhbEl0ZW1zO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIF9hc3NpZ25Nb2RlbHMoaXRlbVNldCkge1xuICAgIHRoaXMuX2l0ZXJhdGVJdGVtcygocGlkeCwgdmlkeCkgPT4ge1xuICAgICAgY29uc3QgZWwgPSB0aGlzLl9waHlzaWNhbEl0ZW1zW3BpZHhdO1xuICAgICAgZWwuaGlkZGVuID0gdmlkeCA+PSB0aGlzLnNpemU7XG4gICAgICBpZiAoIWVsLmhpZGRlbikge1xuICAgICAgICBlbC5fX3ZpcnR1YWxJbmRleCA9IHZpZHggKyAodGhpcy5fdmlkeE9mZnNldCB8fCAwKTtcbiAgICAgICAgdGhpcy5fX3VwZGF0ZUVsZW1lbnQoZWwsIGVsLl9fdmlydHVhbEluZGV4KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlbGV0ZSBlbC5fX2xhc3RVcGRhdGVkSW5kZXg7XG4gICAgICB9XG4gICAgfSwgaXRlbVNldCk7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgX2lzQ2xpZW50RnVsbCgpIHtcbiAgICAvLyBXb3JrYXJvdW5kIGFuIGlzc3VlIGluIGlyb24tbGlzdCB0aGF0IGNhbiBjYXVzZSBpdCB0byBmcmVlemUgb24gZmFzdCBzY3JvbGxcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuX19jbGllbnRGdWxsID0gdHJ1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5fX2NsaWVudEZ1bGwgfHwgc3VwZXIuX2lzQ2xpZW50RnVsbCgpO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIHRyYW5zbGF0ZTNkKF94LCB5LCBfeiwgZWwpIHtcbiAgICBlbC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWSgke3l9KWA7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgdG9nZ2xlU2Nyb2xsTGlzdGVuZXIoKSB7fVxuXG4gIF9zY3JvbGxIYW5kbGVyKCkge1xuICAgIC8vIFRoZSBzY3JvbGwgdGFyZ2V0IGlzIGhpZGRlbi5cbiAgICBpZiAodGhpcy5zY3JvbGxUYXJnZXQub2Zmc2V0SGVpZ2h0ID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fYWRqdXN0VmlydHVhbEluZGV4T2Zmc2V0KHRoaXMuX3Njcm9sbFRvcCAtICh0aGlzLl9fcHJldmlvdXNTY3JvbGxUb3AgfHwgMCkpO1xuICAgIGNvbnN0IGRlbHRhID0gdGhpcy5zY3JvbGxUYXJnZXQuc2Nyb2xsVG9wIC0gdGhpcy5fc2Nyb2xsUG9zaXRpb247XG5cbiAgICBzdXBlci5fc2Nyb2xsSGFuZGxlcigpO1xuXG4gICAgaWYgKHRoaXMuX3BoeXNpY2FsQ291bnQgIT09IDApIHtcbiAgICAgIGNvbnN0IGlzU2Nyb2xsaW5nRG93biA9IGRlbHRhID49IDA7XG4gICAgICBjb25zdCByZXVzYWJsZXMgPSB0aGlzLl9nZXRSZXVzYWJsZXMoIWlzU2Nyb2xsaW5nRG93bik7XG5cbiAgICAgIGlmIChyZXVzYWJsZXMuaW5kZXhlcy5sZW5ndGgpIHtcbiAgICAgICAgLy8gQWZ0ZXIgcnVubmluZyBzdXBlci5fc2Nyb2xsSGFuZGxlciwgZml4IGludGVybmFsIHByb3BlcnRpZXMgdG8gd29ya2Fyb3VuZCBhbiBpcm9uLWxpc3QgaXNzdWUuXG4gICAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdmFhZGluL3dlYi1jb21wb25lbnRzL2lzc3Vlcy8xNjkxXG4gICAgICAgIHRoaXMuX3BoeXNpY2FsVG9wID0gcmV1c2FibGVzLnBoeXNpY2FsVG9wO1xuXG4gICAgICAgIGlmIChpc1Njcm9sbGluZ0Rvd24pIHtcbiAgICAgICAgICB0aGlzLl92aXJ0dWFsU3RhcnQgLT0gcmV1c2FibGVzLmluZGV4ZXMubGVuZ3RoO1xuICAgICAgICAgIHRoaXMuX3BoeXNpY2FsU3RhcnQgLT0gcmV1c2FibGVzLmluZGV4ZXMubGVuZ3RoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuX3ZpcnR1YWxTdGFydCArPSByZXVzYWJsZXMuaW5kZXhlcy5sZW5ndGg7XG4gICAgICAgICAgdGhpcy5fcGh5c2ljYWxTdGFydCArPSByZXVzYWJsZXMuaW5kZXhlcy5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcmVzaXplSGFuZGxlcigpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgLy8gVGhlcmUgd2FzIGEgY2hhbmdlIGluIHNjcm9sbCB0b3AuIFNjaGVkdWxlIGEgY2hlY2sgZm9yIGludmFsaWQgaXRlbSBwb3NpdGlvbmluZy5cbiAgICAgIHRoaXMuX19maXhJbnZhbGlkSXRlbVBvc2l0aW9uaW5nRGVib3VuY2VyID0gRGVib3VuY2VyLmRlYm91bmNlKFxuICAgICAgICB0aGlzLl9fZml4SW52YWxpZEl0ZW1Qb3NpdGlvbmluZ0RlYm91bmNlcixcbiAgICAgICAgdGltZU91dC5hZnRlcih0aGlzLnRpbWVvdXRzLkZJWF9JTlZBTElEX0lURU1fUE9TSVRJT05JTkcpLFxuICAgICAgICAoKSA9PiB0aGlzLl9fZml4SW52YWxpZEl0ZW1Qb3NpdGlvbmluZygpLFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yZW9yZGVyRWxlbWVudHMpIHtcbiAgICAgIHRoaXMuX19zY3JvbGxSZW9yZGVyRGVib3VuY2VyID0gRGVib3VuY2VyLmRlYm91bmNlKFxuICAgICAgICB0aGlzLl9fc2Nyb2xsUmVvcmRlckRlYm91bmNlcixcbiAgICAgICAgdGltZU91dC5hZnRlcih0aGlzLnRpbWVvdXRzLlNDUk9MTF9SRU9SREVSKSxcbiAgICAgICAgKCkgPT4gdGhpcy5fX3Jlb3JkZXJFbGVtZW50cygpLFxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLl9fcHJldmlvdXNTY3JvbGxUb3AgPSB0aGlzLl9zY3JvbGxUb3A7XG5cbiAgICAvLyBJZiB0aGUgZmlyc3QgdmlzaWJsZSBpbmRleCBpcyBub3QgMCB3aGVuIHNjcm9sbGVkIHRvIHRoZSB0b3AsXG4gICAgLy8gc2Nyb2xsIHRvIGluZGV4IDAgdG8gZml4IHRoZSBpc3N1ZS5cbiAgICBpZiAodGhpcy5fc2Nyb2xsVG9wID09PSAwICYmIHRoaXMuZmlyc3RWaXNpYmxlSW5kZXggIT09IDAgJiYgTWF0aC5hYnMoZGVsdGEpID4gMCkge1xuICAgICAgdGhpcy5zY3JvbGxUb0luZGV4KDApO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBXb3JrIGFyb3VuZCBhbiBpcm9uLWxpc3QgaXNzdWUgd2l0aCBpbnZhbGlkIGl0ZW0gcG9zaXRpb25pbmcuXG4gICAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdmFhZGluL2Zsb3ctY29tcG9uZW50cy9pc3N1ZXMvNDMwNlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgX19maXhJbnZhbGlkSXRlbVBvc2l0aW9uaW5nKCkge1xuICAgIGlmICghdGhpcy5zY3JvbGxUYXJnZXQuaXNDb25uZWN0ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiB0aGUgZmlyc3QgcGh5c2ljYWwgaXRlbSBlbGVtZW50IGlzIGJlbG93IHRoZSB0b3Agb2YgdGhlIHZpZXdwb3J0XG4gICAgY29uc3QgcGh5c2ljYWxUb3BCZWxvd1RvcCA9IHRoaXMuX3BoeXNpY2FsVG9wID4gdGhpcy5fc2Nyb2xsVG9wO1xuICAgIC8vIENoZWNrIGlmIHRoZSBsYXN0IHBoeXNpY2FsIGl0ZW0gZWxlbWVudCBpcyBhYm92ZSB0aGUgYm90dG9tIG9mIHRoZSB2aWV3cG9ydFxuICAgIGNvbnN0IHBoeXNpY2FsQm90dG9tQWJvdmVCb3R0b20gPSB0aGlzLl9waHlzaWNhbEJvdHRvbSA8IHRoaXMuX3Njcm9sbEJvdHRvbTtcblxuICAgIC8vIENoZWNrIGlmIHRoZSBmaXJzdCBpbmRleCBpcyB2aXNpYmxlXG4gICAgY29uc3QgZmlyc3RJbmRleFZpc2libGUgPSB0aGlzLmFkanVzdGVkRmlyc3RWaXNpYmxlSW5kZXggPT09IDA7XG4gICAgLy8gQ2hlY2sgaWYgdGhlIGxhc3QgaW5kZXggaXMgdmlzaWJsZVxuICAgIGNvbnN0IGxhc3RJbmRleFZpc2libGUgPSB0aGlzLmFkanVzdGVkTGFzdFZpc2libGVJbmRleCA9PT0gdGhpcy5zaXplIC0gMTtcblxuICAgIGlmICgocGh5c2ljYWxUb3BCZWxvd1RvcCAmJiAhZmlyc3RJbmRleFZpc2libGUpIHx8IChwaHlzaWNhbEJvdHRvbUFib3ZlQm90dG9tICYmICFsYXN0SW5kZXhWaXNpYmxlKSkge1xuICAgICAgLy8gSW52YWxpZCBzdGF0ZSEgVHJ5IHRvIHJlY292ZXIuXG5cbiAgICAgIGNvbnN0IGlzU2Nyb2xsaW5nRG93biA9IHBoeXNpY2FsQm90dG9tQWJvdmVCb3R0b207XG4gICAgICAvLyBTZXQgdGhlIFwiX3JhdGlvXCIgcHJvcGVydHkgdGVtcG9yYXJpbHkgdG8gMCB0byBtYWtlIGlyb24tbGlzdCdzIF9nZXRSZXVzYWJsZXNcbiAgICAgIC8vIHBsYWNlIGFsbCB0aGUgZnJlZSBwaHlzaWNhbCBpdGVtcyBvbiBvbmUgc2lkZSBvZiB0aGUgdmlld3BvcnQuXG4gICAgICBjb25zdCBvcmlnaW5hbFJhdGlvID0gdGhpcy5fcmF0aW87XG4gICAgICB0aGlzLl9yYXRpbyA9IDA7XG4gICAgICAvLyBGYWtlIGEgc2Nyb2xsIGNoYW5nZSB0byBtYWtlIF9zY3JvbGxIYW5kbGVyIHBsYWNlIHRoZSBwaHlzaWNhbCBpdGVtc1xuICAgICAgLy8gb24gdGhlIGRlc2lyZWQgc2lkZS5cbiAgICAgIHRoaXMuX3Njcm9sbFBvc2l0aW9uID0gdGhpcy5fc2Nyb2xsVG9wICsgKGlzU2Nyb2xsaW5nRG93biA/IC0xIDogMSk7XG4gICAgICB0aGlzLl9zY3JvbGxIYW5kbGVyKCk7XG4gICAgICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBcIl9yYXRpb1wiIHZhbHVlLlxuICAgICAgdGhpcy5fcmF0aW8gPSBvcmlnaW5hbFJhdGlvO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBfX29uV2hlZWwoZSkge1xuICAgIGlmIChlLmN0cmxLZXkgfHwgdGhpcy5faGFzU2Nyb2xsZWRBbmNlc3RvcihlLnRhcmdldCwgZS5kZWx0YVgsIGUuZGVsdGFZKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCBkZWx0YVkgPSBlLmRlbHRhWTtcbiAgICBpZiAoZS5kZWx0YU1vZGUgPT09IFdoZWVsRXZlbnQuRE9NX0RFTFRBX0xJTkUpIHtcbiAgICAgIC8vIFNjcm9sbGluZyBieSBcImxpbmVzIG9mIHRleHRcIiBpbnN0ZWFkIG9mIHBpeGVsc1xuICAgICAgZGVsdGFZICo9IHRoaXMuX3Njcm9sbExpbmVIZWlnaHQ7XG4gICAgfSBlbHNlIGlmIChlLmRlbHRhTW9kZSA9PT0gV2hlZWxFdmVudC5ET01fREVMVEFfUEFHRSkge1xuICAgICAgLy8gU2Nyb2xsaW5nIGJ5IFwicGFnZXNcIiBpbnN0ZWFkIG9mIHBpeGVsc1xuICAgICAgZGVsdGFZICo9IHRoaXMuX3Njcm9sbFBhZ2VIZWlnaHQ7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLl9kZWx0YVlBY2MpIHtcbiAgICAgIHRoaXMuX2RlbHRhWUFjYyA9IDA7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3doZWVsQW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgIC8vIEFjY3VtdWxhdGUgd2hlZWwgZGVsdGEgd2hpbGUgYSBmcmFtZSBpcyBiZWluZyBwcm9jZXNzZWRcbiAgICAgIHRoaXMuX2RlbHRhWUFjYyArPSBkZWx0YVk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZGVsdGFZICs9IHRoaXMuX2RlbHRhWUFjYztcbiAgICB0aGlzLl9kZWx0YVlBY2MgPSAwO1xuXG4gICAgdGhpcy5fd2hlZWxBbmltYXRpb25GcmFtZSA9IHRydWU7XG4gICAgdGhpcy5fX2RlYm91bmNlcldoZWVsQW5pbWF0aW9uRnJhbWUgPSBEZWJvdW5jZXIuZGVib3VuY2UoXG4gICAgICB0aGlzLl9fZGVib3VuY2VyV2hlZWxBbmltYXRpb25GcmFtZSxcbiAgICAgIGFuaW1hdGlvbkZyYW1lLFxuICAgICAgKCkgPT4ge1xuICAgICAgICB0aGlzLl93aGVlbEFuaW1hdGlvbkZyYW1lID0gZmFsc2U7XG4gICAgICB9LFxuICAgICk7XG5cbiAgICBjb25zdCBtb21lbnR1bSA9IE1hdGguYWJzKGUuZGVsdGFYKSArIE1hdGguYWJzKGRlbHRhWSk7XG5cbiAgICBpZiAodGhpcy5fY2FuU2Nyb2xsKHRoaXMuc2Nyb2xsVGFyZ2V0LCBlLmRlbHRhWCwgZGVsdGFZKSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5zY3JvbGxUYXJnZXQuc2Nyb2xsVG9wICs9IGRlbHRhWTtcbiAgICAgIHRoaXMuc2Nyb2xsVGFyZ2V0LnNjcm9sbExlZnQgKz0gZS5kZWx0YVg7XG5cbiAgICAgIHRoaXMuX2hhc1Jlc2lkdWFsTW9tZW50dW0gPSB0cnVlO1xuXG4gICAgICB0aGlzLl9pZ25vcmVOZXdXaGVlbCA9IHRydWU7XG4gICAgICB0aGlzLl9kZWJvdW5jZXJJZ25vcmVOZXdXaGVlbCA9IERlYm91bmNlci5kZWJvdW5jZShcbiAgICAgICAgdGhpcy5fZGVib3VuY2VySWdub3JlTmV3V2hlZWwsXG4gICAgICAgIHRpbWVPdXQuYWZ0ZXIodGhpcy50aW1lb3V0cy5JR05PUkVfV0hFRUwpLFxuICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5faWdub3JlTmV3V2hlZWwgPSBmYWxzZTtcbiAgICAgICAgfSxcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICgodGhpcy5faGFzUmVzaWR1YWxNb21lbnR1bSAmJiBtb21lbnR1bSA8PSB0aGlzLl9wcmV2aW91c01vbWVudHVtKSB8fCB0aGlzLl9pZ25vcmVOZXdXaGVlbCkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0gZWxzZSBpZiAobW9tZW50dW0gPiB0aGlzLl9wcmV2aW91c01vbWVudHVtKSB7XG4gICAgICB0aGlzLl9oYXNSZXNpZHVhbE1vbWVudHVtID0gZmFsc2U7XG4gICAgfVxuICAgIHRoaXMuX3ByZXZpb3VzTW9tZW50dW0gPSBtb21lbnR1bTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBlbGVtZW50IGhhcyBhbiBhbmNlc3RvciB0aGF0IGhhbmRsZXMgdGhlIHNjcm9sbCBkZWx0YSBwcmlvciB0byB0aGlzXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfaGFzU2Nyb2xsZWRBbmNlc3RvcihlbCwgZGVsdGFYLCBkZWx0YVkpIHtcbiAgICBpZiAoZWwgPT09IHRoaXMuc2Nyb2xsVGFyZ2V0IHx8IGVsID09PSB0aGlzLnNjcm9sbFRhcmdldC5nZXRSb290Tm9kZSgpLmhvc3QpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgdGhpcy5fY2FuU2Nyb2xsKGVsLCBkZWx0YVgsIGRlbHRhWSkgJiZcbiAgICAgIFsnYXV0bycsICdzY3JvbGwnXS5pbmRleE9mKGdldENvbXB1dGVkU3R5bGUoZWwpLm92ZXJmbG93KSAhPT0gLTFcbiAgICApIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSBpZiAoZWwgIT09IHRoaXMgJiYgZWwucGFyZW50RWxlbWVudCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2hhc1Njcm9sbGVkQW5jZXN0b3IoZWwucGFyZW50RWxlbWVudCwgZGVsdGFYLCBkZWx0YVkpO1xuICAgIH1cbiAgfVxuXG4gIF9jYW5TY3JvbGwoZWwsIGRlbHRhWCwgZGVsdGFZKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIChkZWx0YVkgPiAwICYmIGVsLnNjcm9sbFRvcCA8IGVsLnNjcm9sbEhlaWdodCAtIGVsLm9mZnNldEhlaWdodCkgfHxcbiAgICAgIChkZWx0YVkgPCAwICYmIGVsLnNjcm9sbFRvcCA+IDApIHx8XG4gICAgICAoZGVsdGFYID4gMCAmJiBlbC5zY3JvbGxMZWZ0IDwgZWwuc2Nyb2xsV2lkdGggLSBlbC5vZmZzZXRXaWR0aCkgfHxcbiAgICAgIChkZWx0YVggPCAwICYmIGVsLnNjcm9sbExlZnQgPiAwKVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge051bWJlcnx1bmRlZmluZWR9IC0gVGhlIGJyb3dzZXIncyBkZWZhdWx0IGZvbnQtc2l6ZSBpbiBwaXhlbHNcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9nZXRTY3JvbGxMaW5lSGVpZ2h0KCkge1xuICAgIGNvbnN0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZWwuc3R5bGUuZm9udFNpemUgPSAnaW5pdGlhbCc7XG4gICAgZWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsKTtcbiAgICBjb25zdCBmb250U2l6ZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKS5mb250U2l6ZTtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGVsKTtcbiAgICByZXR1cm4gZm9udFNpemUgPyB3aW5kb3cucGFyc2VJbnQoZm9udFNpemUpIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgX19nZXRWaXNpYmxlRWxlbWVudHMoKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5lbGVtZW50c0NvbnRhaW5lci5jaGlsZHJlbikuZmlsdGVyKChlbGVtZW50KSA9PiAhZWxlbWVudC5oaWRkZW4pO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIF9fcmVvcmRlckVsZW1lbnRzKCkge1xuICAgIGlmICh0aGlzLl9fbW91c2VEb3duKSB7XG4gICAgICB0aGlzLl9fcGVuZGluZ1Jlb3JkZXIgPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLl9fcGVuZGluZ1Jlb3JkZXIgPSBmYWxzZTtcblxuICAgIGNvbnN0IGFkanVzdGVkVmlydHVhbFN0YXJ0ID0gdGhpcy5fdmlydHVhbFN0YXJ0ICsgKHRoaXMuX3ZpZHhPZmZzZXQgfHwgMCk7XG5cbiAgICAvLyBXaGljaCByb3cgdG8gdXNlIGFzIGEgdGFyZ2V0P1xuICAgIGNvbnN0IHZpc2libGVFbGVtZW50cyA9IHRoaXMuX19nZXRWaXNpYmxlRWxlbWVudHMoKTtcblxuICAgIGNvbnN0IGVsZW1lbnRXaXRoRm9jdXMgPSB2aXNpYmxlRWxlbWVudHMuZmluZChcbiAgICAgIChlbGVtZW50KSA9PlxuICAgICAgICBlbGVtZW50LmNvbnRhaW5zKHRoaXMuZWxlbWVudHNDb250YWluZXIuZ2V0Um9vdE5vZGUoKS5hY3RpdmVFbGVtZW50KSB8fFxuICAgICAgICBlbGVtZW50LmNvbnRhaW5zKHRoaXMuc2Nyb2xsVGFyZ2V0LmdldFJvb3ROb2RlKCkuYWN0aXZlRWxlbWVudCksXG4gICAgKTtcbiAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gZWxlbWVudFdpdGhGb2N1cyB8fCB2aXNpYmxlRWxlbWVudHNbMF07XG4gICAgaWYgKCF0YXJnZXRFbGVtZW50KSB7XG4gICAgICAvLyBBbGwgZWxlbWVudHMgYXJlIGhpZGRlbiwgZG9uJ3QgcmVvcmRlclxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFdoZXJlIHRoZSB0YXJnZXQgcm93IHNob3VsZCBiZT9cbiAgICBjb25zdCB0YXJnZXRQaHlzaWNhbEluZGV4ID0gdGFyZ2V0RWxlbWVudC5fX3ZpcnR1YWxJbmRleCAtIGFkanVzdGVkVmlydHVhbFN0YXJ0O1xuXG4gICAgLy8gUmVvZHJlciB0aGUgRE9NIGVsZW1lbnRzIHRvIGtlZXAgdGhlIHRhcmdldCByb3cgYXQgdGhlIHRhcmdldCBwaHlzaWNhbCBpbmRleFxuICAgIGNvbnN0IGRlbHRhID0gdmlzaWJsZUVsZW1lbnRzLmluZGV4T2YodGFyZ2V0RWxlbWVudCkgLSB0YXJnZXRQaHlzaWNhbEluZGV4O1xuICAgIGlmIChkZWx0YSA+IDApIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGVsdGE7IGkrKykge1xuICAgICAgICB0aGlzLmVsZW1lbnRzQ29udGFpbmVyLmFwcGVuZENoaWxkKHZpc2libGVFbGVtZW50c1tpXSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChkZWx0YSA8IDApIHtcbiAgICAgIGZvciAobGV0IGkgPSB2aXNpYmxlRWxlbWVudHMubGVuZ3RoICsgZGVsdGE7IGkgPCB2aXNpYmxlRWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGhpcy5lbGVtZW50c0NvbnRhaW5lci5pbnNlcnRCZWZvcmUodmlzaWJsZUVsZW1lbnRzW2ldLCB2aXNpYmxlRWxlbWVudHNbMF0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIER1ZSB0byBhIHJlbmRlcmluZyBidWcsIHJlb3JkZXJpbmcgdGhlIHJvd3MgY2FuIG1ha2UgcGFydHMgb2YgdGhlIHNjcm9sbCB0YXJnZXQgZGlzYXBwZWFyXG4gICAgLy8gb24gU2FmYXJpIHdoZW4gdXNpbmcgc3RpY2t5IHBvc2l0aW9uaW5nIGluIGNhc2UgdGhlIHNjcm9sbCB0YXJnZXQgaXMgaW5zaWRlIGEgZmxleGJveC5cbiAgICAvLyBUaGlzIGlzc3VlIG1hbmlmZXN0cyB3aXRoIGdyaWQgKHRoZSBoZWFkZXIgY2FuIGRpc2FwcGVhciBpZiBncmlkIGlzIHVzZWQgaW5zaWRlIGEgZmxleGJveClcbiAgICBpZiAoaXNTYWZhcmkpIHtcbiAgICAgIGNvbnN0IHsgdHJhbnNmb3JtIH0gPSB0aGlzLnNjcm9sbFRhcmdldC5zdHlsZTtcbiAgICAgIHRoaXMuc2Nyb2xsVGFyZ2V0LnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVaKDApJztcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnNjcm9sbFRhcmdldC5zdHlsZS50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgX2FkanVzdFZpcnR1YWxJbmRleE9mZnNldChkZWx0YSkge1xuICAgIGlmICh0aGlzLl92aXJ0dWFsQ291bnQgPj0gdGhpcy5zaXplKSB7XG4gICAgICB0aGlzLl92aWR4T2Zmc2V0ID0gMDtcbiAgICB9IGVsc2UgaWYgKHRoaXMuX19za2lwTmV4dFZpcnR1YWxJbmRleEFkanVzdCkge1xuICAgICAgdGhpcy5fX3NraXBOZXh0VmlydHVhbEluZGV4QWRqdXN0ID0gZmFsc2U7XG4gICAgfSBlbHNlIGlmIChNYXRoLmFicyhkZWx0YSkgPiAxMDAwMCkge1xuICAgICAgLy8gUHJvY2VzcyBhIGxhcmdlIHNjcm9sbCBwb3NpdGlvbiBjaGFuZ2VcbiAgICAgIGNvbnN0IHNjYWxlID0gdGhpcy5fc2Nyb2xsVG9wIC8gKHRoaXMuc2Nyb2xsVGFyZ2V0LnNjcm9sbEhlaWdodCAtIHRoaXMuc2Nyb2xsVGFyZ2V0Lm9mZnNldEhlaWdodCk7XG4gICAgICBjb25zdCBvZmZzZXQgPSBzY2FsZSAqIHRoaXMuc2l6ZTtcbiAgICAgIHRoaXMuX3ZpZHhPZmZzZXQgPSBNYXRoLnJvdW5kKG9mZnNldCAtIHNjYWxlICogdGhpcy5fdmlydHVhbENvdW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTWFrZSBzdXJlIHVzZXIgY2FuIGFsd2F5cyBzd2lwZS93aGVlbCBzY3JvbGwgdG8gdGhlIHN0YXJ0IGFuZCBlbmRcbiAgICAgIGNvbnN0IG9sZE9mZnNldCA9IHRoaXMuX3ZpZHhPZmZzZXQ7XG4gICAgICBjb25zdCB0aHJlc2hvbGQgPSBPRkZTRVRfQURKVVNUX01JTl9USFJFU0hPTEQ7XG4gICAgICBjb25zdCBtYXhTaGlmdCA9IDEwMDtcblxuICAgICAgLy8gTmVhciBzdGFydFxuICAgICAgaWYgKHRoaXMuX3Njcm9sbFRvcCA9PT0gMCkge1xuICAgICAgICB0aGlzLl92aWR4T2Zmc2V0ID0gMDtcbiAgICAgICAgaWYgKG9sZE9mZnNldCAhPT0gdGhpcy5fdmlkeE9mZnNldCkge1xuICAgICAgICAgIHN1cGVyLnNjcm9sbFRvSW5kZXgoMCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5maXJzdFZpc2libGVJbmRleCA8IHRocmVzaG9sZCAmJiB0aGlzLl92aWR4T2Zmc2V0ID4gMCkge1xuICAgICAgICB0aGlzLl92aWR4T2Zmc2V0IC09IE1hdGgubWluKHRoaXMuX3ZpZHhPZmZzZXQsIG1heFNoaWZ0KTtcbiAgICAgICAgc3VwZXIuc2Nyb2xsVG9JbmRleCh0aGlzLmZpcnN0VmlzaWJsZUluZGV4ICsgKG9sZE9mZnNldCAtIHRoaXMuX3ZpZHhPZmZzZXQpKTtcbiAgICAgIH1cblxuICAgICAgLy8gTmVhciBlbmRcbiAgICAgIGNvbnN0IG1heE9mZnNldCA9IHRoaXMuc2l6ZSAtIHRoaXMuX3ZpcnR1YWxDb3VudDtcbiAgICAgIGlmICh0aGlzLl9zY3JvbGxUb3AgPj0gdGhpcy5fbWF4U2Nyb2xsVG9wICYmIHRoaXMuX21heFNjcm9sbFRvcCA+IDApIHtcbiAgICAgICAgdGhpcy5fdmlkeE9mZnNldCA9IG1heE9mZnNldDtcbiAgICAgICAgaWYgKG9sZE9mZnNldCAhPT0gdGhpcy5fdmlkeE9mZnNldCkge1xuICAgICAgICAgIHN1cGVyLnNjcm9sbFRvSW5kZXgodGhpcy5fdmlydHVhbENvdW50IC0gMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5maXJzdFZpc2libGVJbmRleCA+IHRoaXMuX3ZpcnR1YWxDb3VudCAtIHRocmVzaG9sZCAmJiB0aGlzLl92aWR4T2Zmc2V0IDwgbWF4T2Zmc2V0KSB7XG4gICAgICAgIHRoaXMuX3ZpZHhPZmZzZXQgKz0gTWF0aC5taW4obWF4T2Zmc2V0IC0gdGhpcy5fdmlkeE9mZnNldCwgbWF4U2hpZnQpO1xuICAgICAgICBzdXBlci5zY3JvbGxUb0luZGV4KHRoaXMuZmlyc3RWaXNpYmxlSW5kZXggLSAodGhpcy5fdmlkeE9mZnNldCAtIG9sZE9mZnNldCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5PYmplY3Quc2V0UHJvdG90eXBlT2YoSXJvbkxpc3RBZGFwdGVyLnByb3RvdHlwZSwgaXJvbkxpc3QpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/virtualizer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/virtualizer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Virtualizer: () => (/* binding */ Virtualizer)\n/* harmony export */ });\n/* harmony import */ var _virtualizer_iron_list_adapter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./virtualizer-iron-list-adapter.js */ \"./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js\");\n\nclass Virtualizer {\n  /**\n   * @typedef {Object} VirtualizerConfig\n   * @property {Function} createElements Function that returns the given number of new elements\n   * @property {Function} updateElement Function that updates the element at a specific index\n   * @property {HTMLElement} scrollTarget Reference to the scrolling element\n   * @property {HTMLElement} scrollContainer Reference to a wrapper for the item elements (or a slot) inside the scrollTarget\n   * @property {HTMLElement | undefined} elementsContainer Reference to the container in which the item elements are placed, defaults to scrollContainer\n   * @property {boolean | undefined} reorderElements Determines whether the physical item elements should be kept in order in the DOM\n   * @param {VirtualizerConfig} config Configuration for the virtualizer\n   */\n  constructor(config) {\n    this.__adapter = new _virtualizer_iron_list_adapter_js__WEBPACK_IMPORTED_MODULE_0__.IronListAdapter(config);\n  }\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get firstVisibleIndex() {\n    return this.__adapter.adjustedFirstVisibleIndex;\n  }\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get lastVisibleIndex() {\n    return this.__adapter.adjustedLastVisibleIndex;\n  }\n\n  /**\n   * The size of the virtualizer\n   * @return {number | undefined} The size of the virtualizer\n   */\n  get size() {\n    return this.__adapter.size;\n  }\n\n  /**\n   * The size of the virtualizer\n   * @param {number} size The size of the virtualizer\n   */\n  set size(size) {\n    this.__adapter.size = size;\n  }\n\n  /**\n   * Scroll to a specific index in the virtual list\n   *\n   * @method scrollToIndex\n   * @param {number} index The index of the item\n   */\n  scrollToIndex(index) {\n    this.__adapter.scrollToIndex(index);\n  }\n\n  /**\n   * Requests the virtualizer to re-render the item elements on an index range, if currently in the DOM\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__adapter.update(startIndex, endIndex);\n  }\n\n  /**\n   * Flushes active asynchronous tasks so that the component and the DOM end up in a stable state\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  flush() {\n    this.__adapter.flush();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdmlydHVhbGl6ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdmlydHVhbGl6ZXIuanM/YzdhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJcm9uTGlzdEFkYXB0ZXIgfSBmcm9tICcuL3ZpcnR1YWxpemVyLWlyb24tbGlzdC1hZGFwdGVyLmpzJztcblxuZXhwb3J0IGNsYXNzIFZpcnR1YWxpemVyIHtcbiAgLyoqXG4gICAqIEB0eXBlZGVmIHtPYmplY3R9IFZpcnR1YWxpemVyQ29uZmlnXG4gICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IGNyZWF0ZUVsZW1lbnRzIEZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgZ2l2ZW4gbnVtYmVyIG9mIG5ldyBlbGVtZW50c1xuICAgKiBAcHJvcGVydHkge0Z1bmN0aW9ufSB1cGRhdGVFbGVtZW50IEZ1bmN0aW9uIHRoYXQgdXBkYXRlcyB0aGUgZWxlbWVudCBhdCBhIHNwZWNpZmljIGluZGV4XG4gICAqIEBwcm9wZXJ0eSB7SFRNTEVsZW1lbnR9IHNjcm9sbFRhcmdldCBSZWZlcmVuY2UgdG8gdGhlIHNjcm9sbGluZyBlbGVtZW50XG4gICAqIEBwcm9wZXJ0eSB7SFRNTEVsZW1lbnR9IHNjcm9sbENvbnRhaW5lciBSZWZlcmVuY2UgdG8gYSB3cmFwcGVyIGZvciB0aGUgaXRlbSBlbGVtZW50cyAob3IgYSBzbG90KSBpbnNpZGUgdGhlIHNjcm9sbFRhcmdldFxuICAgKiBAcHJvcGVydHkge0hUTUxFbGVtZW50IHwgdW5kZWZpbmVkfSBlbGVtZW50c0NvbnRhaW5lciBSZWZlcmVuY2UgdG8gdGhlIGNvbnRhaW5lciBpbiB3aGljaCB0aGUgaXRlbSBlbGVtZW50cyBhcmUgcGxhY2VkLCBkZWZhdWx0cyB0byBzY3JvbGxDb250YWluZXJcbiAgICogQHByb3BlcnR5IHtib29sZWFuIHwgdW5kZWZpbmVkfSByZW9yZGVyRWxlbWVudHMgRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwaHlzaWNhbCBpdGVtIGVsZW1lbnRzIHNob3VsZCBiZSBrZXB0IGluIG9yZGVyIGluIHRoZSBET01cbiAgICogQHBhcmFtIHtWaXJ0dWFsaXplckNvbmZpZ30gY29uZmlnIENvbmZpZ3VyYXRpb24gZm9yIHRoZSB2aXJ0dWFsaXplclxuICAgKi9cbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgdGhpcy5fX2FkYXB0ZXIgPSBuZXcgSXJvbkxpc3RBZGFwdGVyKGNvbmZpZyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB0aGUgaW5kZXggb2YgdGhlIGZpcnN0IHZpc2libGUgaXRlbSBpbiB0aGUgdmlld3BvcnQuXG4gICAqXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGdldCBmaXJzdFZpc2libGVJbmRleCgpIHtcbiAgICByZXR1cm4gdGhpcy5fX2FkYXB0ZXIuYWRqdXN0ZWRGaXJzdFZpc2libGVJbmRleDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBpbmRleCBvZiB0aGUgbGFzdCB2aXNpYmxlIGl0ZW0gaW4gdGhlIHZpZXdwb3J0LlxuICAgKlxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqL1xuICBnZXQgbGFzdFZpc2libGVJbmRleCgpIHtcbiAgICByZXR1cm4gdGhpcy5fX2FkYXB0ZXIuYWRqdXN0ZWRMYXN0VmlzaWJsZUluZGV4O1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSB2aXJ0dWFsaXplclxuICAgKiBAcmV0dXJuIHtudW1iZXIgfCB1bmRlZmluZWR9IFRoZSBzaXplIG9mIHRoZSB2aXJ0dWFsaXplclxuICAgKi9cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX19hZGFwdGVyLnNpemU7XG4gIH1cblxuICAvKipcbiAgICogVGhlIHNpemUgb2YgdGhlIHZpcnR1YWxpemVyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzaXplIFRoZSBzaXplIG9mIHRoZSB2aXJ0dWFsaXplclxuICAgKi9cbiAgc2V0IHNpemUoc2l6ZSkge1xuICAgIHRoaXMuX19hZGFwdGVyLnNpemUgPSBzaXplO1xuICB9XG5cbiAgLyoqXG4gICAqIFNjcm9sbCB0byBhIHNwZWNpZmljIGluZGV4IGluIHRoZSB2aXJ0dWFsIGxpc3RcbiAgICpcbiAgICogQG1ldGhvZCBzY3JvbGxUb0luZGV4XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleCBUaGUgaW5kZXggb2YgdGhlIGl0ZW1cbiAgICovXG4gIHNjcm9sbFRvSW5kZXgoaW5kZXgpIHtcbiAgICB0aGlzLl9fYWRhcHRlci5zY3JvbGxUb0luZGV4KGluZGV4KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0cyB0aGUgdmlydHVhbGl6ZXIgdG8gcmUtcmVuZGVyIHRoZSBpdGVtIGVsZW1lbnRzIG9uIGFuIGluZGV4IHJhbmdlLCBpZiBjdXJyZW50bHkgaW4gdGhlIERPTVxuICAgKlxuICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZH0gc3RhcnRJbmRleCBUaGUgc3RhcnQgaW5kZXggb2YgdGhlIHJhbmdlXG4gICAqIEBwYXJhbSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBlbmRJbmRleCBUaGUgZW5kIGluZGV4IG9mIHRoZSByYW5nZVxuICAgKi9cbiAgdXBkYXRlKHN0YXJ0SW5kZXggPSAwLCBlbmRJbmRleCA9IHRoaXMuc2l6ZSAtIDEpIHtcbiAgICB0aGlzLl9fYWRhcHRlci51cGRhdGUoc3RhcnRJbmRleCwgZW5kSW5kZXgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEZsdXNoZXMgYWN0aXZlIGFzeW5jaHJvbm91cyB0YXNrcyBzbyB0aGF0IHRoZSBjb21wb25lbnQgYW5kIHRoZSBET00gZW5kIHVwIGluIGEgc3RhYmxlIHN0YXRlXG4gICAqXG4gICAqIEBtZXRob2QgdXBkYXRlXG4gICAqIEBwYXJhbSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBzdGFydEluZGV4IFRoZSBzdGFydCBpbmRleCBvZiB0aGUgcmFuZ2VcbiAgICogQHBhcmFtIHtudW1iZXIgfCB1bmRlZmluZWR9IGVuZEluZGV4IFRoZSBlbmQgaW5kZXggb2YgdGhlIHJhbmdlXG4gICAqL1xuICBmbHVzaCgpIHtcbiAgICB0aGlzLl9fYWRhcHRlci5mbHVzaCgpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/virtualizer.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/input-mixin.js":
/*!************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/input-mixin.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputMixin: () => (/* binding */ InputMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to store the reference to an input element\n * and add input and change event listeners to it.\n *\n * @polymerMixin\n */\nconst InputMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class InputMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * A reference to the input element controlled by the mixin.\n       * Any component implementing this mixin is expected to provide it\n       * by using `this._setInputElement(input)` Polymer API.\n       *\n       * A typical case is using `InputController` that does this automatically.\n       * However, the input element does not have to always be native <input>:\n       * as an example, <vaadin-combo-box-light> accepts other components.\n       *\n       * @protected\n       * @type {!HTMLElement}\n       */\n      inputElement: {\n        type: Object,\n        readOnly: true,\n        observer: '_inputElementChanged'\n      },\n      /**\n       * String used to define input type.\n       * @protected\n       */\n      type: {\n        type: String,\n        readOnly: true\n      },\n      /**\n       * The value of the field.\n       */\n      value: {\n        type: String,\n        value: '',\n        observer: '_valueChanged',\n        notify: true\n      },\n      /**\n       * Whether the input element has a non-empty value.\n       *\n       * @protected\n       */\n      _hasInputValue: {\n        type: Boolean,\n        value: false,\n        observer: '_hasInputValueChanged'\n      }\n    };\n  }\n  constructor() {\n    super();\n    this._boundOnInput = this.__onInput.bind(this);\n    this._boundOnChange = this._onChange.bind(this);\n  }\n\n  /**\n   * Indicates whether the value is different from the default one.\n   * Override if the `value` property has a type other than `string`.\n   *\n   * @protected\n   */\n  get _hasValue() {\n    return this.value != null && this.value !== '';\n  }\n\n  /**\n   * A property for accessing the input element's value.\n   *\n   * Override this getter if the property is different from the default `value` one.\n   *\n   * @protected\n   * @return {string}\n   */\n  get _inputElementValueProperty() {\n    return 'value';\n  }\n\n  /**\n   * The input element's value.\n   *\n   * @protected\n   * @return {string}\n   */\n  get _inputElementValue() {\n    return this.inputElement ? this.inputElement[this._inputElementValueProperty] : undefined;\n  }\n\n  /**\n   * The input element's value.\n   *\n   * @protected\n   */\n  set _inputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement[this._inputElementValueProperty] = value;\n    }\n  }\n\n  /**\n   * Clear the value of the field.\n   */\n  clear() {\n    this._hasInputValue = false;\n    this.value = '';\n\n    // Clear the input immediately without waiting for the observer.\n    // Otherwise, when using Lit, the old value would be restored.\n    this._inputElementValue = '';\n  }\n\n  /**\n   * Add event listeners to the input element instance.\n   * Override this method to add custom listeners.\n   * @param {!HTMLElement} input\n   * @protected\n   */\n  _addInputListeners(input) {\n    input.addEventListener('input', this._boundOnInput);\n    input.addEventListener('change', this._boundOnChange);\n  }\n\n  /**\n   * Remove event listeners from the input element instance.\n   * @param {!HTMLElement} input\n   * @protected\n   */\n  _removeInputListeners(input) {\n    input.removeEventListener('input', this._boundOnInput);\n    input.removeEventListener('change', this._boundOnChange);\n  }\n\n  /**\n   * A method to forward the value property set on the field\n   * programmatically back to the input element value.\n   * Override this method to perform additional checks,\n   * for example to skip this in certain conditions.\n   * @param {string} value\n   * @protected\n   */\n  _forwardInputValue(value) {\n    // Value might be set before an input element is initialized.\n    // This case should be handled separately by a component that\n    // implements this mixin, for example in `connectedCallback`.\n    if (!this.inputElement) {\n      return;\n    }\n    this._inputElementValue = value != null ? value : '';\n  }\n\n  /**\n   * @param {HTMLElement | undefined} input\n   * @param {HTMLElement | undefined} oldInput\n   * @protected\n   */\n  _inputElementChanged(input, oldInput) {\n    if (input) {\n      this._addInputListeners(input);\n    } else if (oldInput) {\n      this._removeInputListeners(oldInput);\n    }\n  }\n\n  /**\n   * Observer to notify about the change of private property.\n   *\n   * @private\n   */\n  _hasInputValueChanged(hasValue, oldHasValue) {\n    if (hasValue || oldHasValue) {\n      this.dispatchEvent(new CustomEvent('has-input-value-changed'));\n    }\n  }\n\n  /**\n   * An input event listener used to update `_hasInputValue` property.\n   * Do not override this method.\n   *\n   * @param {Event} event\n   * @private\n   */\n  __onInput(event) {\n    this._setHasInputValue(event);\n    this._onInput(event);\n  }\n\n  /**\n   * An input event listener used to update the field value.\n   *\n   * @param {Event} event\n   * @protected\n   */\n  _onInput(event) {\n    // In the case a custom web component is passed as `inputElement`,\n    // the actual native input element, on which the event occurred,\n    // can be inside shadow trees.\n    const target = event.composedPath()[0];\n    // Ignore fake input events e.g. used by clear button.\n    this.__userInput = event.isTrusted;\n    this.value = target.value;\n    this.__userInput = false;\n  }\n\n  /**\n   * A change event listener.\n   * Override this method with an actual implementation.\n   * @param {Event} _event\n   * @protected\n   */\n  _onChange(_event) {}\n\n  /**\n   * Toggle the has-value attribute based on the value property.\n   *\n   * @param {boolean} hasValue\n   * @protected\n   */\n  _toggleHasValue(hasValue) {\n    this.toggleAttribute('has-value', hasValue);\n  }\n\n  /**\n   * Observer called when a value property changes.\n   * @param {string | undefined} newVal\n   * @param {string | undefined} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    this._toggleHasValue(this._hasValue);\n\n    // Setting initial value to empty string, do nothing.\n    if (newVal === '' && oldVal === undefined) {\n      return;\n    }\n\n    // Value is set by the user, no need to sync it back to input.\n    if (this.__userInput) {\n      return;\n    }\n\n    // Setting a value programmatically, sync it to input element.\n    this._forwardInputValue(newVal);\n  }\n\n  /**\n   * Sets the `_hasInputValue` property based on the `input` event.\n   *\n   * @param {InputEvent} event\n   * @protected\n   */\n  _setHasInputValue(event) {\n    // In the case a custom web component is passed as `inputElement`,\n    // the actual native input element, on which the event occurred,\n    // can be inside shadow trees.\n    const target = event.composedPath()[0];\n    this._hasInputValue = target.value.length > 0;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/input-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/validate-mixin.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/validate-mixin.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValidateMixin: () => (/* binding */ ValidateMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nconst ValidateMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class ValidateMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * Set to true when the field is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Validates the field and sets the `invalid` property based on the result.\n   *\n   * The method fires a `validated` event with the result of the validation.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    const isValid = this.checkValidity();\n    this._setInvalid(!isValid);\n    this.dispatchEvent(new CustomEvent('validated', {\n      detail: {\n        valid: isValid\n      }\n    }));\n    return isValid;\n  }\n\n  /**\n   * Returns true if the field value satisfies all constraints (if any).\n   *\n   * @return {boolean}\n   */\n  checkValidity() {\n    return !this.required || !!this.value;\n  }\n\n  /**\n   * @param {boolean} invalid\n   * @protected\n   */\n  _setInvalid(invalid) {\n    if (this._shouldSetInvalid(invalid)) {\n      this.invalid = invalid;\n    }\n  }\n\n  /**\n   * Override this method to define whether the given `invalid` state should be set.\n   *\n   * @param {boolean} _invalid\n   * @return {boolean}\n   * @protected\n   */\n  _shouldSetInvalid(_invalid) {\n    return true;\n  }\n\n  /**\n   * Fired whenever the field is validated.\n   *\n   * @event validated\n   * @param {Object} detail\n   * @param {boolean} detail.valid the result of the validation.\n   */\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9maWVsZC1iYXNlL3NyYy92YWxpZGF0ZS1taXhpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vZmllbGQtYmFzZS9zcmMvdmFsaWRhdGUtbWl4aW4uanM/Y2MwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRlZHVwaW5nTWl4aW4gfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9taXhpbi5qcyc7XG5cbi8qKlxuICogQSBtaXhpbiB0byBwcm92aWRlIHJlcXVpcmVkIHN0YXRlIGFuZCB2YWxpZGF0aW9uIGxvZ2ljLlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IFZhbGlkYXRlTWl4aW4gPSBkZWR1cGluZ01peGluKFxuICAoc3VwZXJjbGFzcykgPT5cbiAgICBjbGFzcyBWYWxpZGF0ZU1peGluQ2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgICAgIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiBTZXQgdG8gdHJ1ZSB3aGVuIHRoZSBmaWVsZCBpcyBpbnZhbGlkLlxuICAgICAgICAgICAqL1xuICAgICAgICAgIGludmFsaWQ6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICAgICAgICBub3RpZnk6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICAgICAgfSxcblxuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIFNwZWNpZmllcyB0aGF0IHRoZSB1c2VyIG11c3QgZmlsbCBpbiBhIHZhbHVlLlxuICAgICAgICAgICAqL1xuICAgICAgICAgIHJlcXVpcmVkOiB7XG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogVmFsaWRhdGVzIHRoZSBmaWVsZCBhbmQgc2V0cyB0aGUgYGludmFsaWRgIHByb3BlcnR5IGJhc2VkIG9uIHRoZSByZXN1bHQuXG4gICAgICAgKlxuICAgICAgICogVGhlIG1ldGhvZCBmaXJlcyBhIGB2YWxpZGF0ZWRgIGV2ZW50IHdpdGggdGhlIHJlc3VsdCBvZiB0aGUgdmFsaWRhdGlvbi5cbiAgICAgICAqXG4gICAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSB2YWx1ZSBpcyB2YWxpZC5cbiAgICAgICAqL1xuICAgICAgdmFsaWRhdGUoKSB7XG4gICAgICAgIGNvbnN0IGlzVmFsaWQgPSB0aGlzLmNoZWNrVmFsaWRpdHkoKTtcbiAgICAgICAgdGhpcy5fc2V0SW52YWxpZCghaXNWYWxpZCk7XG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ3ZhbGlkYXRlZCcsIHsgZGV0YWlsOiB7IHZhbGlkOiBpc1ZhbGlkIH0gfSkpO1xuICAgICAgICByZXR1cm4gaXNWYWxpZDtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIGZpZWxkIHZhbHVlIHNhdGlzZmllcyBhbGwgY29uc3RyYWludHMgKGlmIGFueSkuXG4gICAgICAgKlxuICAgICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgICAqL1xuICAgICAgY2hlY2tWYWxpZGl0eSgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnJlcXVpcmVkIHx8ICEhdGhpcy52YWx1ZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGludmFsaWRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3NldEludmFsaWQoaW52YWxpZCkge1xuICAgICAgICBpZiAodGhpcy5fc2hvdWxkU2V0SW52YWxpZChpbnZhbGlkKSkge1xuICAgICAgICAgIHRoaXMuaW52YWxpZCA9IGludmFsaWQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBPdmVycmlkZSB0aGlzIG1ldGhvZCB0byBkZWZpbmUgd2hldGhlciB0aGUgZ2l2ZW4gYGludmFsaWRgIHN0YXRlIHNob3VsZCBiZSBzZXQuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtib29sZWFufSBfaW52YWxpZFxuICAgICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3Nob3VsZFNldEludmFsaWQoX2ludmFsaWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogRmlyZWQgd2hlbmV2ZXIgdGhlIGZpZWxkIGlzIHZhbGlkYXRlZC5cbiAgICAgICAqXG4gICAgICAgKiBAZXZlbnQgdmFsaWRhdGVkXG4gICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGV0YWlsXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRldGFpbC52YWxpZCB0aGUgcmVzdWx0IG9mIHRoZSB2YWxpZGF0aW9uLlxuICAgICAgICovXG4gICAgfSxcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/validate-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VirtualKeyboardController: () => (/* binding */ VirtualKeyboardController)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller which prevents the virtual keyboard from showing up on mobile devices\n * when the field's overlay is closed.\n */\nclass VirtualKeyboardController {\n  /**\n   * @param {{ inputElement?: HTMLElement; opened: boolean } & HTMLElement} host\n   */\n  constructor(host) {\n    this.host = host;\n    host.addEventListener('opened-changed', () => {\n      if (!host.opened) {\n        // Prevent opening the virtual keyboard when the input gets re-focused on dropdown close\n        this.__setVirtualKeyboardEnabled(false);\n      }\n    });\n\n    // Re-enable virtual keyboard on blur, so it gets opened when the field is focused again\n    host.addEventListener('blur', () => this.__setVirtualKeyboardEnabled(true));\n\n    // Re-enable the virtual keyboard whenever the field is touched\n    host.addEventListener('touchstart', () => this.__setVirtualKeyboardEnabled(true));\n  }\n\n  /** @private */\n  __setVirtualKeyboardEnabled(value) {\n    if (this.host.inputElement) {\n      this.host.inputElement.inputMode = value ? '' : 'none';\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9maWVsZC1iYXNlL3NyYy92aXJ0dWFsLWtleWJvYXJkLWNvbnRyb2xsZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2ZpZWxkLWJhc2Uvc3JjL3ZpcnR1YWwta2V5Ym9hcmQtY29udHJvbGxlci5qcz81ZGZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIEEgY29udHJvbGxlciB3aGljaCBwcmV2ZW50cyB0aGUgdmlydHVhbCBrZXlib2FyZCBmcm9tIHNob3dpbmcgdXAgb24gbW9iaWxlIGRldmljZXNcbiAqIHdoZW4gdGhlIGZpZWxkJ3Mgb3ZlcmxheSBpcyBjbG9zZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBWaXJ0dWFsS2V5Ym9hcmRDb250cm9sbGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7eyBpbnB1dEVsZW1lbnQ/OiBIVE1MRWxlbWVudDsgb3BlbmVkOiBib29sZWFuIH0gJiBIVE1MRWxlbWVudH0gaG9zdFxuICAgKi9cbiAgY29uc3RydWN0b3IoaG9zdCkge1xuICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG5cbiAgICBob3N0LmFkZEV2ZW50TGlzdGVuZXIoJ29wZW5lZC1jaGFuZ2VkJywgKCkgPT4ge1xuICAgICAgaWYgKCFob3N0Lm9wZW5lZCkge1xuICAgICAgICAvLyBQcmV2ZW50IG9wZW5pbmcgdGhlIHZpcnR1YWwga2V5Ym9hcmQgd2hlbiB0aGUgaW5wdXQgZ2V0cyByZS1mb2N1c2VkIG9uIGRyb3Bkb3duIGNsb3NlXG4gICAgICAgIHRoaXMuX19zZXRWaXJ0dWFsS2V5Ym9hcmRFbmFibGVkKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFJlLWVuYWJsZSB2aXJ0dWFsIGtleWJvYXJkIG9uIGJsdXIsIHNvIGl0IGdldHMgb3BlbmVkIHdoZW4gdGhlIGZpZWxkIGlzIGZvY3VzZWQgYWdhaW5cbiAgICBob3N0LmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCAoKSA9PiB0aGlzLl9fc2V0VmlydHVhbEtleWJvYXJkRW5hYmxlZCh0cnVlKSk7XG5cbiAgICAvLyBSZS1lbmFibGUgdGhlIHZpcnR1YWwga2V5Ym9hcmQgd2hlbmV2ZXIgdGhlIGZpZWxkIGlzIHRvdWNoZWRcbiAgICBob3N0LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCAoKSA9PiB0aGlzLl9fc2V0VmlydHVhbEtleWJvYXJkRW5hYmxlZCh0cnVlKSk7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgX19zZXRWaXJ0dWFsS2V5Ym9hcmRFbmFibGVkKHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuaG9zdC5pbnB1dEVsZW1lbnQpIHtcbiAgICAgIHRoaXMuaG9zdC5pbnB1dEVsZW1lbnQuaW5wdXRNb2RlID0gdmFsdWUgPyAnJyA6ICdub25lJztcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   item: () => (/* binding */ item)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_material_styles_font_icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/font-icons.js */ \"./node_modules/@vaadin/vaadin-material-styles/font-icons.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_typography_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\nconst item = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css`\n  :host {\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    min-height: 36px;\n    padding: 8px 32px 8px 10px;\n    overflow: hidden;\n    font-family: var(--material-font-family);\n    font-size: var(--material-small-font-size);\n    line-height: 24px;\n  }\n\n  /* It's the list-box's responsibility to add the focus style */\n  :host([focused]) {\n    outline: none;\n  }\n\n  /* Checkmark */\n  [part='checkmark']::before {\n    display: var(--_material-item-selected-icon-display, none);\n    content: '';\n    font-family: material-icons;\n    font-size: 24px;\n    line-height: 1;\n    font-weight: 400;\n    width: 24px;\n    text-align: center;\n    margin-right: 10px;\n    color: var(--material-secondary-text-color);\n    flex: none;\n  }\n\n  :host([selected]) [part='checkmark']::before {\n    content: var(--material-icons-check);\n  }\n\n  @media (any-hover: hover) {\n    :host(:hover:not([disabled])) {\n      background-color: var(--material-secondary-background-color);\n    }\n\n    :host([focused]:not([disabled])) {\n      background-color: var(--material-divider-color);\n    }\n  }\n\n  /* Disabled */\n  :host([disabled]) {\n    color: var(--material-disabled-text-color);\n    cursor: default;\n    pointer-events: none;\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']) {\n    padding: 8px 10px 8px 32px;\n  }\n\n  :host([dir='rtl']) [part='checkmark']::before {\n    margin-right: 0;\n    margin-left: 10px;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.registerStyles)('vaadin-item', item, {\n  moduleId: 'material-item'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9pdGVtL3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1pdGVtLXN0eWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2l0ZW0vdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWl0ZW0tc3R5bGVzLmpzP2IyZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvZm9udC1pY29ucy5qcyc7XG5pbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9jb2xvci5qcyc7XG5pbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy90eXBvZ3JhcGh5LmpzJztcbmltcG9ydCB7IGNzcywgcmVnaXN0ZXJTdHlsZXMgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuXG5jb25zdCBpdGVtID0gY3NzYFxuICA6aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgbWluLWhlaWdodDogMzZweDtcbiAgICBwYWRkaW5nOiA4cHggMzJweCA4cHggMTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1tYXRlcmlhbC1mb250LWZhbWlseSk7XG4gICAgZm9udC1zaXplOiB2YXIoLS1tYXRlcmlhbC1zbWFsbC1mb250LXNpemUpO1xuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICB9XG5cbiAgLyogSXQncyB0aGUgbGlzdC1ib3gncyByZXNwb25zaWJpbGl0eSB0byBhZGQgdGhlIGZvY3VzIHN0eWxlICovXG4gIDpob3N0KFtmb2N1c2VkXSkge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICAvKiBDaGVja21hcmsgKi9cbiAgW3BhcnQ9J2NoZWNrbWFyayddOjpiZWZvcmUge1xuICAgIGRpc3BsYXk6IHZhcigtLV9tYXRlcmlhbC1pdGVtLXNlbGVjdGVkLWljb24tZGlzcGxheSwgbm9uZSk7XG4gICAgY29udGVudDogJyc7XG4gICAgZm9udC1mYW1pbHk6IG1hdGVyaWFsLWljb25zO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgY29sb3I6IHZhcigtLW1hdGVyaWFsLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcbiAgICBmbGV4OiBub25lO1xuICB9XG5cbiAgOmhvc3QoW3NlbGVjdGVkXSkgW3BhcnQ9J2NoZWNrbWFyayddOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IHZhcigtLW1hdGVyaWFsLWljb25zLWNoZWNrKTtcbiAgfVxuXG4gIEBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcikge1xuICAgIDpob3N0KDpob3Zlcjpub3QoW2Rpc2FibGVkXSkpIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1hdGVyaWFsLXNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yKTtcbiAgICB9XG5cbiAgICA6aG9zdChbZm9jdXNlZF06bm90KFtkaXNhYmxlZF0pKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYXRlcmlhbC1kaXZpZGVyLWNvbG9yKTtcbiAgICB9XG4gIH1cblxuICAvKiBEaXNhYmxlZCAqL1xuICA6aG9zdChbZGlzYWJsZWRdKSB7XG4gICAgY29sb3I6IHZhcigtLW1hdGVyaWFsLWRpc2FibGVkLXRleHQtY29sb3IpO1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgfVxuXG4gIC8qIFJUTCBzcGVjaWZpYyBzdHlsZXMgKi9cbiAgOmhvc3QoW2Rpcj0ncnRsJ10pIHtcbiAgICBwYWRkaW5nOiA4cHggMTBweCA4cHggMzJweDtcbiAgfVxuXG4gIDpob3N0KFtkaXI9J3J0bCddKSBbcGFydD0nY2hlY2ttYXJrJ106OmJlZm9yZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG5gO1xuXG5yZWdpc3RlclN0eWxlcygndmFhZGluLWl0ZW0nLCBpdGVtLCB7IG1vZHVsZUlkOiAnbWF0ZXJpYWwtaXRlbScgfSk7XG5cbmV4cG9ydCB7IGl0ZW0gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/lit-renderer/src/lit-renderer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/lit-renderer/src/lit-renderer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LitRendererDirective: () => (/* binding */ LitRendererDirective)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_async_directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/async-directive.js */ \"./node_modules/lit/async-directive.js\");\n/* harmony import */ var lit_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directive.js */ \"./node_modules/lit/directive.js\");\n/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n// A symbol indicating that the directive hasn't been initialized.\nconst VALUE_NOT_INITIALIZED = Symbol('valueNotInitialized');\nclass LitRendererDirective extends lit_async_directive_js__WEBPACK_IMPORTED_MODULE_1__.AsyncDirective {\n  constructor(part) {\n    super(part);\n    if (part.type !== lit_directive_js__WEBPACK_IMPORTED_MODULE_2__.PartType.ELEMENT) {\n      throw new Error(`\\`${this.constructor.name}\\` must be bound to an element.`);\n    }\n    this.previousValue = VALUE_NOT_INITIALIZED;\n  }\n\n  /** @override */\n  render(_renderer, _value) {\n    return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n  }\n\n  /** @override */\n  update(part, [renderer, value]) {\n    if (!this.hasChanged(value)) {\n      return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n    }\n    this.host = part.options && part.options.host;\n    this.element = part.element;\n    this.renderer = renderer;\n    const firstRender = this.previousValue === VALUE_NOT_INITIALIZED;\n    if (firstRender) {\n      this.addRenderer();\n    } else {\n      this.runRenderer();\n    }\n\n    // Copy the value if it is an array in order to keep it\n    // from possible outside mutations.\n    this.previousValue = Array.isArray(value) ? [...value] : value;\n    return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n  }\n\n  /** @override */\n  reconnected() {\n    this.addRenderer();\n  }\n\n  /** @override */\n  disconnected() {\n    this.removeRenderer();\n  }\n\n  /** @abstract */\n  addRenderer() {\n    throw new Error('The `addRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  runRenderer() {\n    throw new Error('The `runRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  removeRenderer() {\n    throw new Error('The `removeRenderer` method must be implemented.');\n  }\n\n  /** @protected */\n  renderRenderer(container, ...args) {\n    const templateResult = this.renderer.call(this.host, ...args);\n    (0,lit__WEBPACK_IMPORTED_MODULE_0__.render)(templateResult, container, {\n      host: this.host\n    });\n  }\n\n  /** @protected */\n  hasChanged(value) {\n    if (Array.isArray(value)) {\n      if (!Array.isArray(this.previousValue)) {\n        return true;\n      }\n      if (this.previousValue.length !== value.length) {\n        return true;\n      }\n\n      // For arrays, perform shallow dirty checking for each element.\n      return value.some((v, i) => v !== this.previousValue[i]);\n    }\n    return this.previousValue !== value;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9saXQtcmVuZGVyZXIvc3JjL2xpdC1yZW5kZXJlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vbGl0LXJlbmRlcmVyL3NyYy9saXQtcmVuZGVyZXIuanM/ZjQyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IG5vdGhpbmcsIHJlbmRlciB9IGZyb20gJ2xpdCc7XG5pbXBvcnQgeyBBc3luY0RpcmVjdGl2ZSB9IGZyb20gJ2xpdC9hc3luYy1kaXJlY3RpdmUuanMnO1xuaW1wb3J0IHsgUGFydFR5cGUgfSBmcm9tICdsaXQvZGlyZWN0aXZlLmpzJztcblxuLy8gQSBzeW1ib2wgaW5kaWNhdGluZyB0aGF0IHRoZSBkaXJlY3RpdmUgaGFzbid0IGJlZW4gaW5pdGlhbGl6ZWQuXG5jb25zdCBWQUxVRV9OT1RfSU5JVElBTElaRUQgPSBTeW1ib2woJ3ZhbHVlTm90SW5pdGlhbGl6ZWQnKTtcblxuZXhwb3J0IGNsYXNzIExpdFJlbmRlcmVyRGlyZWN0aXZlIGV4dGVuZHMgQXN5bmNEaXJlY3RpdmUge1xuICBjb25zdHJ1Y3RvcihwYXJ0KSB7XG4gICAgc3VwZXIocGFydCk7XG5cbiAgICBpZiAocGFydC50eXBlICE9PSBQYXJ0VHlwZS5FTEVNRU5UKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfVxcYCBtdXN0IGJlIGJvdW5kIHRvIGFuIGVsZW1lbnQuYCk7XG4gICAgfVxuXG4gICAgdGhpcy5wcmV2aW91c1ZhbHVlID0gVkFMVUVfTk9UX0lOSVRJQUxJWkVEO1xuICB9XG5cbiAgLyoqIEBvdmVycmlkZSAqL1xuICByZW5kZXIoX3JlbmRlcmVyLCBfdmFsdWUpIHtcbiAgICByZXR1cm4gbm90aGluZztcbiAgfVxuXG4gIC8qKiBAb3ZlcnJpZGUgKi9cbiAgdXBkYXRlKHBhcnQsIFtyZW5kZXJlciwgdmFsdWVdKSB7XG4gICAgaWYgKCF0aGlzLmhhc0NoYW5nZWQodmFsdWUpKSB7XG4gICAgICByZXR1cm4gbm90aGluZztcbiAgICB9XG5cbiAgICB0aGlzLmhvc3QgPSBwYXJ0Lm9wdGlvbnMgJiYgcGFydC5vcHRpb25zLmhvc3Q7XG4gICAgdGhpcy5lbGVtZW50ID0gcGFydC5lbGVtZW50O1xuICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcblxuICAgIGNvbnN0IGZpcnN0UmVuZGVyID0gdGhpcy5wcmV2aW91c1ZhbHVlID09PSBWQUxVRV9OT1RfSU5JVElBTElaRUQ7XG4gICAgaWYgKGZpcnN0UmVuZGVyKSB7XG4gICAgICB0aGlzLmFkZFJlbmRlcmVyKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucnVuUmVuZGVyZXIoKTtcbiAgICB9XG5cbiAgICAvLyBDb3B5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhbiBhcnJheSBpbiBvcmRlciB0byBrZWVwIGl0XG4gICAgLy8gZnJvbSBwb3NzaWJsZSBvdXRzaWRlIG11dGF0aW9ucy5cbiAgICB0aGlzLnByZXZpb3VzVmFsdWUgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IFsuLi52YWx1ZV0gOiB2YWx1ZTtcblxuICAgIHJldHVybiBub3RoaW5nO1xuICB9XG5cbiAgLyoqIEBvdmVycmlkZSAqL1xuICByZWNvbm5lY3RlZCgpIHtcbiAgICB0aGlzLmFkZFJlbmRlcmVyKCk7XG4gIH1cblxuICAvKiogQG92ZXJyaWRlICovXG4gIGRpc2Nvbm5lY3RlZCgpIHtcbiAgICB0aGlzLnJlbW92ZVJlbmRlcmVyKCk7XG4gIH1cblxuICAvKiogQGFic3RyYWN0ICovXG4gIGFkZFJlbmRlcmVyKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGhlIGBhZGRSZW5kZXJlcmAgbWV0aG9kIG11c3QgYmUgaW1wbGVtZW50ZWQuJyk7XG4gIH1cblxuICAvKiogQGFic3RyYWN0ICovXG4gIHJ1blJlbmRlcmVyKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGhlIGBydW5SZW5kZXJlcmAgbWV0aG9kIG11c3QgYmUgaW1wbGVtZW50ZWQuJyk7XG4gIH1cblxuICAvKiogQGFic3RyYWN0ICovXG4gIHJlbW92ZVJlbmRlcmVyKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGhlIGByZW1vdmVSZW5kZXJlcmAgbWV0aG9kIG11c3QgYmUgaW1wbGVtZW50ZWQuJyk7XG4gIH1cblxuICAvKiogQHByb3RlY3RlZCAqL1xuICByZW5kZXJSZW5kZXJlcihjb250YWluZXIsIC4uLmFyZ3MpIHtcbiAgICBjb25zdCB0ZW1wbGF0ZVJlc3VsdCA9IHRoaXMucmVuZGVyZXIuY2FsbCh0aGlzLmhvc3QsIC4uLmFyZ3MpO1xuICAgIHJlbmRlcih0ZW1wbGF0ZVJlc3VsdCwgY29udGFpbmVyLCB7IGhvc3Q6IHRoaXMuaG9zdCB9KTtcbiAgfVxuXG4gIC8qKiBAcHJvdGVjdGVkICovXG4gIGhhc0NoYW5nZWQodmFsdWUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheSh0aGlzLnByZXZpb3VzVmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wcmV2aW91c1ZhbHVlLmxlbmd0aCAhPT0gdmFsdWUubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvLyBGb3IgYXJyYXlzLCBwZXJmb3JtIHNoYWxsb3cgZGlydHkgY2hlY2tpbmcgZm9yIGVhY2ggZWxlbWVudC5cbiAgICAgIHJldHVybiB2YWx1ZS5zb21lKCh2LCBpKSA9PiB2ICE9PSB0aGlzLnByZXZpb3VzVmFsdWVbaV0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnByZXZpb3VzVmFsdWUgIT09IHZhbHVlO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/lit-renderer/src/lit-renderer.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PositionMixin: () => (/* binding */ PositionMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_dom_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/dom-utils.js */ \"./node_modules/@vaadin/component-base/src/dom-utils.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst PROP_NAMES_VERTICAL = {\n  start: 'top',\n  end: 'bottom'\n};\nconst PROP_NAMES_HORIZONTAL = {\n  start: 'left',\n  end: 'right'\n};\nconst targetResizeObserver = new ResizeObserver(entries => {\n  setTimeout(() => {\n    entries.forEach(entry => {\n      if (entry.target.__overlay) {\n        entry.target.__overlay._updatePosition();\n      }\n    });\n  });\n});\n\n/**\n * @polymerMixin\n */\nconst PositionMixin = superClass => class PositionMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * The element next to which this overlay should be aligned.\n       * The position of the overlay relative to the positionTarget can be adjusted\n       * with properties `horizontalAlign`, `verticalAlign`, `noHorizontalOverlap`\n       * and `noVerticalOverlap`.\n       */\n      positionTarget: {\n        type: Object,\n        value: null\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether to align the overlay's\n       * left or right side to the target element by default.\n       * Possible values are `start` and `end`.\n       * RTL is taken into account when interpreting the value.\n       * The overlay is automatically flipped to the opposite side when it doesn't fit into\n       * the default side defined by this property.\n       *\n       * @attr {start|end} horizontal-align\n       */\n      horizontalAlign: {\n        type: String,\n        value: 'start'\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether to align the overlay's\n       * top or bottom side to the target element by default.\n       * Possible values are `top` and `bottom`.\n       * The overlay is automatically flipped to the opposite side when it doesn't fit into\n       * the default side defined by this property.\n       *\n       * @attr {top|bottom} vertical-align\n       */\n      verticalAlign: {\n        type: String,\n        value: 'top'\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether the overlay should overlap\n       * the target element in the x-axis, or be positioned right next to it.\n       *\n       * @attr {boolean} no-horizontal-overlap\n       */\n      noHorizontalOverlap: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether the overlay should overlap\n       * the target element in the y-axis, or be positioned right above/below it.\n       *\n       * @attr {boolean} no-vertical-overlap\n       */\n      noVerticalOverlap: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * If the overlay content has no intrinsic height, this property can be used to set\n       * the minimum vertical space (in pixels) required by the overlay. Setting a value to\n       * the property effectively disables the content measurement in favor of using this\n       * fixed value for determining the open direction.\n       *\n       * @attr {number} required-vertical-space\n       */\n      requiredVerticalSpace: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n  static get observers() {\n    return ['__positionSettingsChanged(horizontalAlign, verticalAlign, noHorizontalOverlap, noVerticalOverlap, requiredVerticalSpace)', '__overlayOpenedChanged(opened, positionTarget)'];\n  }\n  constructor() {\n    super();\n    this.__onScroll = this.__onScroll.bind(this);\n    this._updatePosition = this._updatePosition.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.opened) {\n      this.__addUpdatePositionEventListeners();\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__removeUpdatePositionEventListeners();\n  }\n\n  /** @private */\n  __addUpdatePositionEventListeners() {\n    window.addEventListener('resize', this._updatePosition);\n    this.__positionTargetAncestorRootNodes = (0,_vaadin_component_base_src_dom_utils_js__WEBPACK_IMPORTED_MODULE_0__.getAncestorRootNodes)(this.positionTarget);\n    this.__positionTargetAncestorRootNodes.forEach(node => {\n      node.addEventListener('scroll', this.__onScroll, true);\n    });\n  }\n\n  /** @private */\n  __removeUpdatePositionEventListeners() {\n    window.removeEventListener('resize', this._updatePosition);\n    if (this.__positionTargetAncestorRootNodes) {\n      this.__positionTargetAncestorRootNodes.forEach(node => {\n        node.removeEventListener('scroll', this.__onScroll, true);\n      });\n      this.__positionTargetAncestorRootNodes = null;\n    }\n  }\n\n  /** @private */\n  __overlayOpenedChanged(opened, positionTarget) {\n    this.__removeUpdatePositionEventListeners();\n    if (positionTarget) {\n      positionTarget.__overlay = null;\n      targetResizeObserver.unobserve(positionTarget);\n      if (opened) {\n        this.__addUpdatePositionEventListeners();\n        positionTarget.__overlay = this;\n        targetResizeObserver.observe(positionTarget);\n      }\n    }\n    if (opened) {\n      const computedStyle = getComputedStyle(this);\n      if (!this.__margins) {\n        this.__margins = {};\n        ['top', 'bottom', 'left', 'right'].forEach(propName => {\n          this.__margins[propName] = parseInt(computedStyle[propName], 10);\n        });\n      }\n      this.setAttribute('dir', computedStyle.direction);\n      this._updatePosition();\n      // Schedule another position update (to cover virtual keyboard opening for example)\n      requestAnimationFrame(() => this._updatePosition());\n    }\n  }\n  __positionSettingsChanged() {\n    this._updatePosition();\n  }\n\n  /** @private */\n  __onScroll(e) {\n    // If the scroll event occurred inside the overlay, ignore it.\n    if (!this.contains(e.target)) {\n      this._updatePosition();\n    }\n  }\n  _updatePosition() {\n    if (!this.positionTarget || !this.opened) {\n      return;\n    }\n    const targetRect = this.positionTarget.getBoundingClientRect();\n\n    // Detect the desired alignment and update the layout accordingly\n    const shouldAlignStartVertically = this.__shouldAlignStartVertically(targetRect);\n    this.style.justifyContent = shouldAlignStartVertically ? 'flex-start' : 'flex-end';\n    const isRTL = this.__isRTL;\n    const shouldAlignStartHorizontally = this.__shouldAlignStartHorizontally(targetRect, isRTL);\n    const flexStart = !isRTL && shouldAlignStartHorizontally || isRTL && !shouldAlignStartHorizontally;\n    this.style.alignItems = flexStart ? 'flex-start' : 'flex-end';\n\n    // Get the overlay rect after possible overlay alignment changes\n    const overlayRect = this.getBoundingClientRect();\n\n    // Obtain vertical positioning properties\n    const verticalProps = this.__calculatePositionInOneDimension(targetRect, overlayRect, this.noVerticalOverlap, PROP_NAMES_VERTICAL, this, shouldAlignStartVertically);\n\n    // Obtain horizontal positioning properties\n    const horizontalProps = this.__calculatePositionInOneDimension(targetRect, overlayRect, this.noHorizontalOverlap, PROP_NAMES_HORIZONTAL, this, shouldAlignStartHorizontally);\n\n    // Apply the positioning properties to the overlay\n    Object.assign(this.style, verticalProps, horizontalProps);\n    this.toggleAttribute('bottom-aligned', !shouldAlignStartVertically);\n    this.toggleAttribute('top-aligned', shouldAlignStartVertically);\n    this.toggleAttribute('end-aligned', !flexStart);\n    this.toggleAttribute('start-aligned', flexStart);\n  }\n  __shouldAlignStartHorizontally(targetRect, rtl) {\n    // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n    // smaller than its current space before the fit-calculations.\n    const contentWidth = Math.max(this.__oldContentWidth || 0, this.$.overlay.offsetWidth);\n    this.__oldContentWidth = this.$.overlay.offsetWidth;\n    const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n    const defaultAlignLeft = !rtl && this.horizontalAlign === 'start' || rtl && this.horizontalAlign === 'end';\n    return this.__shouldAlignStart(targetRect, contentWidth, viewportWidth, this.__margins, defaultAlignLeft, this.noHorizontalOverlap, PROP_NAMES_HORIZONTAL);\n  }\n  __shouldAlignStartVertically(targetRect) {\n    // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n    // smaller than its current space before the fit-calculations.\n    const contentHeight = this.requiredVerticalSpace || Math.max(this.__oldContentHeight || 0, this.$.overlay.offsetHeight);\n    this.__oldContentHeight = this.$.overlay.offsetHeight;\n    const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n    const defaultAlignTop = this.verticalAlign === 'top';\n    return this.__shouldAlignStart(targetRect, contentHeight, viewportHeight, this.__margins, defaultAlignTop, this.noVerticalOverlap, PROP_NAMES_VERTICAL);\n  }\n\n  // eslint-disable-next-line max-params\n  __shouldAlignStart(targetRect, contentSize, viewportSize, margins, defaultAlignStart, noOverlap, propNames) {\n    const spaceForStartAlignment = viewportSize - targetRect[noOverlap ? propNames.end : propNames.start] - margins[propNames.end];\n    const spaceForEndAlignment = targetRect[noOverlap ? propNames.start : propNames.end] - margins[propNames.start];\n    const spaceForDefaultAlignment = defaultAlignStart ? spaceForStartAlignment : spaceForEndAlignment;\n    const spaceForOtherAlignment = defaultAlignStart ? spaceForEndAlignment : spaceForStartAlignment;\n    const shouldGoToDefaultSide = spaceForDefaultAlignment > spaceForOtherAlignment || spaceForDefaultAlignment > contentSize;\n    return defaultAlignStart === shouldGoToDefaultSide;\n  }\n\n  /**\n   * Returns an adjusted value after resizing the browser window,\n   * to avoid wrong calculations when e.g. previously set `bottom`\n   * CSS property value is larger than the updated viewport height.\n   * See https://github.com/vaadin/web-components/issues/4604\n   */\n  __adjustBottomProperty(cssPropNameToSet, propNames, currentValue) {\n    let adjustedProp;\n    if (cssPropNameToSet === propNames.end) {\n      // Adjust horizontally\n      if (propNames.end === PROP_NAMES_VERTICAL.end) {\n        const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n        if (currentValue > viewportHeight && this.__oldViewportHeight) {\n          const heightDiff = this.__oldViewportHeight - viewportHeight;\n          adjustedProp = currentValue - heightDiff;\n        }\n        this.__oldViewportHeight = viewportHeight;\n      }\n\n      // Adjust vertically\n      if (propNames.end === PROP_NAMES_HORIZONTAL.end) {\n        const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n        if (currentValue > viewportWidth && this.__oldViewportWidth) {\n          const widthDiff = this.__oldViewportWidth - viewportWidth;\n          adjustedProp = currentValue - widthDiff;\n        }\n        this.__oldViewportWidth = viewportWidth;\n      }\n    }\n    return adjustedProp;\n  }\n\n  /**\n   * Returns an object with CSS position properties to set,\n   * e.g. { top: \"100px\" }\n   */\n  // eslint-disable-next-line max-params\n  __calculatePositionInOneDimension(targetRect, overlayRect, noOverlap, propNames, overlay, shouldAlignStart) {\n    const cssPropNameToSet = shouldAlignStart ? propNames.start : propNames.end;\n    const cssPropNameToClear = shouldAlignStart ? propNames.end : propNames.start;\n    const currentValue = parseFloat(overlay.style[cssPropNameToSet] || getComputedStyle(overlay)[cssPropNameToSet]);\n    const adjustedValue = this.__adjustBottomProperty(cssPropNameToSet, propNames, currentValue);\n    const diff = overlayRect[shouldAlignStart ? propNames.start : propNames.end] - targetRect[noOverlap === shouldAlignStart ? propNames.end : propNames.start];\n    const valueToSet = adjustedValue ? `${adjustedValue}px` : `${currentValue + diff * (shouldAlignStart ? -1 : 1)}px`;\n    return {\n      [cssPropNameToSet]: valueToSet,\n      [cssPropNameToClear]: ''\n    };\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay.js":
/*!************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Overlay: () => (/* binding */ Overlay)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/render-status.js */ \"./node_modules/@polymer/polymer/lib/utils/render-status.js\");\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/component-base/src/browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/component-base/src/controller-mixin.js */ \"./node_modules/@vaadin/component-base/src/controller-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/component-base/src/dir-mixin.js */ \"./node_modules/@vaadin/component-base/src/dir-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_focus_trap_controller_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @vaadin/component-base/src/focus-trap-controller.js */ \"./node_modules/@vaadin/component-base/src/focus-trap-controller.js\");\n/* harmony import */ var _vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/component-base/src/templates.js */ \"./node_modules/@vaadin/component-base/src/templates.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n/**\n * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay\n * can be populated imperatively by using `renderer` callback function.\n *\n * ### Rendering\n *\n * The renderer function provides `root`, `owner`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `owner`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-overlay id=\"overlay\"></vaadin-overlay>\n * ```\n * ```js\n * const overlay = document.querySelector('#overlay');\n * overlay.renderer = function(root) {\n *  root.textContent = \"Overlay content\";\n * };\n * ```\n *\n * Renderer is called on the opening of the overlay and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Styling\n *\n * The following Shadow DOM parts are available for styling:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `backdrop` | Backdrop of the overlay\n * `overlay`  | Container for position/sizing/alignment of the content\n * `content`  | Content of the overlay\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part\n * ---|---|---\n * `opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n * `closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n *\n * The following custom CSS properties are available for styling:\n *\n * Custom CSS property | Description | Default value\n * ---|---|---\n * `--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} vaadin-overlay-open - Fired after the overlay is opened.\n * @fires {CustomEvent} vaadin-overlay-close - Fired when the opened overlay is about to be closed. Calling `preventDefault()` on the event cancels the closing.\n * @fires {CustomEvent} vaadin-overlay-closing - Fired when the overlay starts to close. Closing the overlay can be asynchronous depending on the animation.\n * @fires {CustomEvent} vaadin-overlay-closed - Fired after the overlay is closed.\n * @fires {CustomEvent} vaadin-overlay-outside-click - Fired before the overlay is closed on outside click. Calling `preventDefault()` on the event cancels the closing.\n * @fires {CustomEvent} vaadin-overlay-escape-press - Fired before the overlay is closed on Escape key press. Calling `preventDefault()` on the event cancels the closing.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @mixes ControllerMixin\n */\nclass Overlay extends (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_7__.ThemableMixin)((0,_vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_4__.DirMixin)((0,_vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_3__.ControllerMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_1__.PolymerElement))) {\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_1__.html`\n      <style>\n        :host {\n          z-index: 200;\n          position: fixed;\n\n          /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n          /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n          top: 0;\n          right: 0;\n          bottom: var(--vaadin-overlay-viewport-bottom);\n          left: 0;\n\n          /* Use flexbox alignment for the overlay part. */\n          display: flex;\n          flex-direction: column; /* makes dropdowns sizing easier */\n          /* Align to center by default. */\n          align-items: center;\n          justify-content: center;\n\n          /* Allow centering when max-width/max-height applies. */\n          margin: auto;\n\n          /* The host is not clickable, only the overlay part is. */\n          pointer-events: none;\n\n          /* Remove tap highlight on touch devices. */\n          -webkit-tap-highlight-color: transparent;\n\n          /* CSS API for host */\n          --vaadin-overlay-viewport-bottom: 0;\n        }\n\n        :host([hidden]),\n        :host(:not([opened]):not([closing])) {\n          display: none !important;\n        }\n\n        [part='overlay'] {\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          pointer-events: auto;\n\n          /* Prevent overflowing the host in MSIE 11 */\n          max-width: 100%;\n          box-sizing: border-box;\n\n          -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n        }\n\n        [part='backdrop'] {\n          z-index: -1;\n          content: '';\n          background: rgba(0, 0, 0, 0.5);\n          position: fixed;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          pointer-events: auto;\n        }\n      </style>\n\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n        <div part=\"content\" id=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n  static get is() {\n    return 'vaadin-overlay';\n  }\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true\n      },\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: Element,\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: Function,\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: Object,\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn't change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged'\n      },\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged'\n      },\n      /**\n       * When true move focus to the first focusable element in the overlay,\n       * or to the overlay if there are no focusable elements.\n       * @type {boolean}\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @type {boolean}\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Set to specify the element which should be focused on overlay close,\n       * if `restoreFocusOnClose` is set to true.\n       * @type {HTMLElement}\n       */\n      restoreFocusNode: {\n        type: HTMLElement\n      },\n      /** @private */\n      _mouseDownInside: {\n        type: Boolean\n      },\n      /** @private */\n      _mouseUpInside: {\n        type: Boolean\n      },\n      /** @private */\n      _oldOwner: Element,\n      /** @private */\n      _oldModel: Object,\n      /** @private */\n      _oldRenderer: Object,\n      /** @private */\n      _oldOpened: Boolean\n    };\n  }\n  static get observers() {\n    return ['_rendererOrDataChanged(renderer, owner, model, opened)'];\n  }\n\n  /**\n   * Returns all attached overlays in visual stacking order.\n   * @private\n   */\n  static get __attachedInstances() {\n    return Array.from(document.body.children).filter(el => el instanceof Overlay && !el.hasAttribute('closing')).sort((a, b) => a.__zIndex - b.__zIndex || 0);\n  }\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    /* c8 ignore next 3 */\n    if (_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_2__.isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n    this.__focusTrapController = new _vaadin_component_base_src_focus_trap_controller_js__WEBPACK_IMPORTED_MODULE_5__.FocusTrapController(this);\n  }\n\n  /**\n   * Returns true if this is the last one in the opened overlays stack\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return this === Overlay.__attachedInstances.pop();\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n    this.addController(this.__focusTrapController);\n    (0,_vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_6__.processTemplates)(this);\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    /* c8 ignore next 15 */\n    if (!this.opened) {\n      return;\n    }\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   */\n  close(sourceEvent) {\n    const evt = new CustomEvent('vaadin-overlay-close', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent\n      }\n    });\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      window.removeEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the overlay.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this, this.owner, this.model);\n    }\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * Whether to close the overlay on outside click or not.\n   * Override this method to customize the closing logic.\n   *\n   * @param {Event} _event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldCloseOnOutsideClick(_event) {\n    return this._last;\n  }\n\n  /**\n   * Outside click listener used in capture phase to close the overlay before\n   * propagating the event to the listener on the element that triggered it.\n   * Otherwise, calling `open()` would result in closing and re-opening.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._shouldCloseOnOutsideClick(event)) {\n      return;\n    }\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent: event\n      }\n    });\n    this.dispatchEvent(evt);\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * Listener used to close whe overlay on Escape press, if it is the last one.\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // Only close modeless overlay on Esc press when it contains focus\n    if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          sourceEvent: event\n        }\n      });\n      this.dispatchEvent(evt);\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    if (opened) {\n      // Store focused node.\n      this.__restoreFocusNode = this._getActiveElement();\n      this._animatedOpening();\n      (0,_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_0__.afterNextRender)(this, () => {\n        if (this.focusTrap) {\n          this.__focusTrapController.trapFocus(this.$.overlay);\n        }\n        const evt = new CustomEvent('vaadin-overlay-open', {\n          bubbles: true\n        });\n        this.dispatchEvent(evt);\n      });\n      document.addEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      if (this.focusTrap) {\n        this.__focusTrapController.releaseFocus();\n      }\n      this._animatedClosing();\n      document.removeEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  _shouldAnimate() {\n    const style = getComputedStyle(this);\n    const name = style.getPropertyValue('animation-name');\n    const hidden = style.getPropertyValue('display') === 'none';\n    return !hidden && name && name !== 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @private\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = event => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @private */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', () => {\n        this._finishOpening();\n      });\n    } else {\n      this._finishOpening();\n    }\n  }\n\n  /** @private */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @private */\n  _finishOpening() {\n    this.removeAttribute('opening');\n  }\n\n  /** @private */\n  _finishClosing() {\n    this._detachOverlay();\n    this.$.overlay.style.removeProperty('pointer-events');\n    this.removeAttribute('closing');\n    this.dispatchEvent(new CustomEvent('vaadin-overlay-closed'));\n  }\n\n  /** @private */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n\n      // Use this.restoreFocusNode if specified, otherwise fallback to the node\n      // which was focused before opening the overlay.\n      const restoreFocusNode = this.restoreFocusNode || this.__restoreFocusNode;\n      if (this.restoreFocusOnClose && restoreFocusNode) {\n        // If the activeElement is `<body>` or inside the overlay,\n        // we are allowed to restore the focus. In all the other\n        // cases focus might have been moved elsewhere by another\n        // component or by the user interaction (e.g. click on a\n        // button outside the overlay).\n        const activeElement = this._getActiveElement();\n        if (activeElement === document.body || this._deepContains(activeElement)) {\n          // Focusing the restoreFocusNode doesn't always work synchronously on Firefox and Safari\n          // (e.g. combo-box overlay close on outside click).\n          setTimeout(() => restoreFocusNode.focus());\n        }\n        this.__restoreFocusNode = null;\n      }\n      this.setAttribute('closing', '');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', () => {\n          this._finishClosing();\n        });\n      } else {\n        this._finishClosing();\n      }\n    }\n  }\n\n  /** @private */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @private */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @private */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    Overlay.__attachedInstances.forEach(el => {\n      if (el !== this) {\n        el.shadowRoot.querySelector('[part=\"overlay\"]').style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @private */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @private */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = Overlay.__attachedInstances;\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while (el = instances.pop()) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n\n  /** @private */\n  _rendererOrDataChanged(renderer, owner, model, opened) {\n    const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n    this._oldModel = model;\n    this._oldOwner = owner;\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n    if (rendererChanged) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n    if (opened && renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  _getActiveElement() {\n    // Document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    let active = document.activeElement || document.body;\n    while (active.shadowRoot && active.shadowRoot.activeElement) {\n      active = active.shadowRoot.activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @private\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // Walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = Overlay.__attachedInstances.filter(o => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n\n  /**\n   * @event vaadin-overlay-open\n   * Fired after the overlay is opened.\n   */\n\n  /**\n   * @event vaadin-overlay-close\n   * Fired when the opened overlay is about to be closed.\n   * Calling `preventDefault()` on the event cancels the closing.\n   */\n\n  /**\n   * @event vaadin-overlay-closing\n   * Fired when the overlay starts to close.\n   * Closing the overlay can be asynchronous depending on the animation.\n   */\n\n  /**\n   * @event vaadin-overlay-closed\n   * Fired after the overlay is closed.\n   */\n\n  /**\n   * @event vaadin-overlay-escape-press\n   * Fired before the overlay is closed on Escape key press.\n   * Calling `preventDefault()` on the event cancels the closing.\n   */\n\n  /**\n   * @event vaadin-overlay-outside-click\n   * Fired before the overlay is closed on outside click.\n   * Calling `preventDefault()` on the event cancels the closing.\n   */\n}\n\ncustomElements.define(Overlay.is, Overlay);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_overlay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('vaadin-overlay', _vaadin_vaadin_material_styles_mixins_overlay_js__WEBPACK_IMPORTED_MODULE_0__.overlay, {\n  moduleId: 'material-vaadin-overlay'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1vdmVybGF5LXN0eWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1vdmVybGF5LXN0eWxlcy5qcz8wZDc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG92ZXJsYXkgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvbWl4aW5zL292ZXJsYXkuanMnO1xuaW1wb3J0IHsgcmVnaXN0ZXJTdHlsZXMgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuXG5yZWdpc3RlclN0eWxlcygndmFhZGluLW92ZXJsYXknLCBvdmVybGF5LCB7IG1vZHVsZUlkOiAnbWF0ZXJpYWwtdmFhZGluLW92ZXJsYXknIH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_overlay_styles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-overlay-styles.js */ \"./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js\");\n/* harmony import */ var _src_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/vaadin-overlay.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1vdmVybGF5LmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1vdmVybGF5LmpzP2NhYzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL3ZhYWRpbi1vdmVybGF5LXN0eWxlcy5qcyc7XG5pbXBvcnQgJy4uLy4uL3NyYy92YWFkaW4tb3ZlcmxheS5qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/color.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/color.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorBase: () => (/* binding */ colorBase),\n/* harmony export */   colorDark: () => (/* binding */ colorDark),\n/* harmony export */   colorLight: () => (/* binding */ colorLight)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@vaadin/vaadin-material-styles/version.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nconst colorLight = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: initial;\n    --_material-text-field-input-line-opacity: initial;\n    --_material-text-field-input-line-hover-opacity: initial;\n    --_material-text-field-focused-label-opacity: initial;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: initial;\n    --_material-button-outline-color: initial;\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: initial;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: initial;\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  [theme~='dark'] {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  a {\n    color: inherit;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', colorLight, {\n  moduleId: 'material-color-light'\n});\nconst colorDark = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', colorDark, {\n  moduleId: 'material-color-dark'\n});\nconst colorBase = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n  }\n`;\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${colorBase.toString().replace(':host', 'html')}</style>`;\ndocument.head.appendChild($tpl.content);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/color.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loader: () => (/* binding */ loader)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nconst loader = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  [part~='loader'] {\n    height: 2px;\n    background: var(--material-background-color)\n      linear-gradient(\n        90deg,\n        transparent 0%,\n        transparent 20%,\n        var(--material-primary-color) 20%,\n        var(--material-primary-color) 40%,\n        transparent 40%,\n        transparent 60%,\n        var(--material-primary-color) 60%,\n        var(--material-primary-color) 80%,\n        transparent 80%,\n        transparent 100%\n      )\n      0 0 / 400% 100% repeat-x;\n    opacity: 0;\n  }\n\n  :host(:not([loading])) [part~='loader'] {\n    display: none;\n  }\n\n  :host([loading]) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress, 0.3s 0.1s both material-loader-fade-in;\n  }\n\n  [part='loader']::before {\n    content: '';\n    display: block;\n    height: 100%;\n    opacity: 0.16;\n    background: var(--material-primary-color);\n  }\n\n  @keyframes material-loader-fade-in {\n    0% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes material-loader-progress {\n    0% {\n      background-position: 0 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: -100% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: -200% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: -300% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  /* RTL specific styles */\n\n  @keyframes material-loader-progress-rtl {\n    0% {\n      background-position: 100% 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: 200% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: 300% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: 400% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  :host([loading][dir='rtl']) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress-rtl, 0.3s 0.1s both material-loader-fade-in;\n  }\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9sb2FkZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9taXhpbnMvbG9hZGVyLmpzPzE3YzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIyIC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgJy4uL2NvbG9yLmpzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IGxvYWRlciA9IGNzc2BcbiAgW3BhcnR+PSdsb2FkZXInXSB7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tbWF0ZXJpYWwtYmFja2dyb3VuZC1jb2xvcilcbiAgICAgIGxpbmVhci1ncmFkaWVudChcbiAgICAgICAgOTBkZWcsXG4gICAgICAgIHRyYW5zcGFyZW50IDAlLFxuICAgICAgICB0cmFuc3BhcmVudCAyMCUsXG4gICAgICAgIHZhcigtLW1hdGVyaWFsLXByaW1hcnktY29sb3IpIDIwJSxcbiAgICAgICAgdmFyKC0tbWF0ZXJpYWwtcHJpbWFyeS1jb2xvcikgNDAlLFxuICAgICAgICB0cmFuc3BhcmVudCA0MCUsXG4gICAgICAgIHRyYW5zcGFyZW50IDYwJSxcbiAgICAgICAgdmFyKC0tbWF0ZXJpYWwtcHJpbWFyeS1jb2xvcikgNjAlLFxuICAgICAgICB2YXIoLS1tYXRlcmlhbC1wcmltYXJ5LWNvbG9yKSA4MCUsXG4gICAgICAgIHRyYW5zcGFyZW50IDgwJSxcbiAgICAgICAgdHJhbnNwYXJlbnQgMTAwJVxuICAgICAgKVxuICAgICAgMCAwIC8gNDAwJSAxMDAlIHJlcGVhdC14O1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cblxuICA6aG9zdCg6bm90KFtsb2FkaW5nXSkpIFtwYXJ0fj0nbG9hZGVyJ10ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICA6aG9zdChbbG9hZGluZ10pIFtwYXJ0PSdsb2FkZXInXSB7XG4gICAgYW5pbWF0aW9uOiAzcyBsaW5lYXIgaW5maW5pdGUgbWF0ZXJpYWwtbG9hZGVyLXByb2dyZXNzLCAwLjNzIDAuMXMgYm90aCBtYXRlcmlhbC1sb2FkZXItZmFkZS1pbjtcbiAgfVxuXG4gIFtwYXJ0PSdsb2FkZXInXTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3BhY2l0eTogMC4xNjtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1tYXRlcmlhbC1wcmltYXJ5LWNvbG9yKTtcbiAgfVxuXG4gIEBrZXlmcmFtZXMgbWF0ZXJpYWwtbG9hZGVyLWZhZGUtaW4ge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgMTAwJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgbWF0ZXJpYWwtbG9hZGVyLXByb2dyZXNzIHtcbiAgICAwJSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDMwMCUgMTAwJTtcbiAgICB9XG5cbiAgICAzMyUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogNDAwJSAxMDAlO1xuICAgIH1cblxuICAgIDY3JSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjAwJSAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyNTAlIDEwMCU7XG4gICAgfVxuXG4gICAgMTAwJSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzAwJSAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMDAlIDEwMCU7XG4gICAgfVxuICB9XG5cbiAgLyogUlRMIHNwZWNpZmljIHN0eWxlcyAqL1xuXG4gIEBrZXlmcmFtZXMgbWF0ZXJpYWwtbG9hZGVyLXByb2dyZXNzLXJ0bCB7XG4gICAgMCUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMDAlIDEwMCU7XG4gICAgfVxuXG4gICAgMzMlIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDIwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogNDAwJSAxMDAlO1xuICAgIH1cblxuICAgIDY3JSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzMDAlIDA7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDI1MCUgMTAwJTtcbiAgICB9XG5cbiAgICAxMDAlIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDQwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMzAwJSAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIDpob3N0KFtsb2FkaW5nXVtkaXI9J3J0bCddKSBbcGFydD0nbG9hZGVyJ10ge1xuICAgIGFuaW1hdGlvbjogM3MgbGluZWFyIGluZmluaXRlIG1hdGVyaWFsLWxvYWRlci1wcm9ncmVzcy1ydGwsIDAuM3MgMC4xcyBib3RoIG1hdGVyaWFsLWxvYWRlci1mYWRlLWluO1xuICB9XG5gO1xuXG5leHBvcnQgeyBsb2FkZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   menuOverlay: () => (/* binding */ menuOverlay)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\nconst menuOverlay = _overlay_js__WEBPACK_IMPORTED_MODULE_2__.overlay;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', menuOverlay, {\n  moduleId: 'material-menu-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9tZW51LW92ZXJsYXkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9taXhpbnMvbWVudS1vdmVybGF5LmpzPzAzNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgJy4uL2NvbG9yLmpzJztcbmltcG9ydCB7IHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcbmltcG9ydCB7IG92ZXJsYXkgfSBmcm9tICcuL292ZXJsYXkuanMnO1xuXG5jb25zdCBtZW51T3ZlcmxheSA9IG92ZXJsYXk7XG5cbnJlZ2lzdGVyU3R5bGVzKCcnLCBtZW51T3ZlcmxheSwgeyBtb2R1bGVJZDogJ21hdGVyaWFsLW1lbnUtb3ZlcmxheScgfSk7XG5cbmV4cG9ydCB7IG1lbnVPdmVybGF5IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   overlay: () => (/* binding */ overlay)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _typography_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _shadow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shadow.js */ \"./node_modules/@vaadin/vaadin-material-styles/shadow.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\nconst overlay = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css`\n  :host {\n    top: 16px;\n    right: 16px;\n    /* TODO (@jouni): remove unnecessary multiplication after https://github.com/vaadin/vaadin-overlay/issues/90 is fixed */\n    bottom: calc(1px * var(--vaadin-overlay-viewport-bottom) + 16px);\n    left: 16px;\n  }\n\n  [part='overlay'] {\n    background-color: var(--material-background-color);\n    border-radius: 4px;\n    box-shadow: var(--material-shadow-elevation-4dp);\n    color: var(--material-body-text-color);\n    font-family: var(--material-font-family);\n    font-size: var(--material-body-font-size);\n    font-weight: 400;\n  }\n\n  [part='content'] {\n    padding: 8px 0;\n  }\n\n  [part='backdrop'] {\n    opacity: 0.2;\n    animation: 0.2s vaadin-overlay-backdrop-enter;\n    will-change: opacity;\n  }\n\n  @keyframes vaadin-overlay-backdrop-enter {\n    0% {\n      opacity: 0;\n    }\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.registerStyles)('', overlay, {\n  moduleId: 'material-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9vdmVybGF5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9taXhpbnMvb3ZlcmxheS5qcz84MjUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNyAtIDIwMjMgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0ICcuLi9jb2xvci5qcyc7XG5pbXBvcnQgJy4uL3R5cG9ncmFwaHkuanMnO1xuaW1wb3J0ICcuLi9zaGFkb3cuanMnO1xuaW1wb3J0IHsgY3NzLCByZWdpc3RlclN0eWxlcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IG92ZXJsYXkgPSBjc3NgXG4gIDpob3N0IHtcbiAgICB0b3A6IDE2cHg7XG4gICAgcmlnaHQ6IDE2cHg7XG4gICAgLyogVE9ETyAoQGpvdW5pKTogcmVtb3ZlIHVubmVjZXNzYXJ5IG11bHRpcGxpY2F0aW9uIGFmdGVyIGh0dHBzOi8vZ2l0aHViLmNvbS92YWFkaW4vdmFhZGluLW92ZXJsYXkvaXNzdWVzLzkwIGlzIGZpeGVkICovXG4gICAgYm90dG9tOiBjYWxjKDFweCAqIHZhcigtLXZhYWRpbi1vdmVybGF5LXZpZXdwb3J0LWJvdHRvbSkgKyAxNnB4KTtcbiAgICBsZWZ0OiAxNnB4O1xuICB9XG5cbiAgW3BhcnQ9J292ZXJsYXknXSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWF0ZXJpYWwtYmFja2dyb3VuZC1jb2xvcik7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJveC1zaGFkb3c6IHZhcigtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tNGRwKTtcbiAgICBjb2xvcjogdmFyKC0tbWF0ZXJpYWwtYm9keS10ZXh0LWNvbG9yKTtcbiAgICBmb250LWZhbWlseTogdmFyKC0tbWF0ZXJpYWwtZm9udC1mYW1pbHkpO1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tbWF0ZXJpYWwtYm9keS1mb250LXNpemUpO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIH1cblxuICBbcGFydD0nY29udGVudCddIHtcbiAgICBwYWRkaW5nOiA4cHggMDtcbiAgfVxuXG4gIFtwYXJ0PSdiYWNrZHJvcCddIHtcbiAgICBvcGFjaXR5OiAwLjI7XG4gICAgYW5pbWF0aW9uOiAwLjJzIHZhYWRpbi1vdmVybGF5LWJhY2tkcm9wLWVudGVyO1xuICAgIHdpbGwtY2hhbmdlOiBvcGFjaXR5O1xuICB9XG5cbiAgQGtleWZyYW1lcyB2YWFkaW4tb3ZlcmxheS1iYWNrZHJvcC1lbnRlciB7XG4gICAgMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gIH1cbmA7XG5cbnJlZ2lzdGVyU3R5bGVzKCcnLCBvdmVybGF5LCB7IG1vZHVsZUlkOiAnbWF0ZXJpYWwtb3ZlcmxheScgfSk7XG5cbmV4cG9ydCB7IG92ZXJsYXkgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/shadow.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/shadow.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shadow: () => (/* binding */ shadow)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@vaadin/vaadin-material-styles/version.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nconst shadow = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  /* prettier-ignore */\n  :host {\n    /* from http://codepen.io/shyndman/pen/c5394ddf2e8b2a5c9185904b57421cdb */\n    --material-shadow-elevation-2dp: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    --material-shadow-elevation-3dp: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-4dp: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-6dp: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-8dp: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-12dp: 0 12px 16px 1px rgba(0, 0, 0, 0.14), 0 4px 22px 3px rgba(0, 0, 0, 0.12), 0 6px 7px -4px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-16dp: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-24dp: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.4);\n  }\n`;\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${shadow.toString().replace(':host', 'html')}</style>`;\ndocument.head.appendChild($tpl.content);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3NoYWRvdy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvc2hhZG93LmpzP2I1NzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgJy4vdmVyc2lvbi5qcyc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuXG5jb25zdCBzaGFkb3cgPSBjc3NgXG4gIC8qIHByZXR0aWVyLWlnbm9yZSAqL1xuICA6aG9zdCB7XG4gICAgLyogZnJvbSBodHRwOi8vY29kZXBlbi5pby9zaHluZG1hbi9wZW4vYzUzOTRkZGYyZThiMmE1YzkxODU5MDRiNTc0MjFjZGIgKi9cbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tMmRwOiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLTNkcDogMCAzcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAxcHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAzcHggM3B4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi00ZHA6IDAgNHB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDJweCA0cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLTZkcDogMCA2cHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDE4cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDNweCA1cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLThkcDogMCA4cHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCA1cHggNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi0xMmRwOiAwIDEycHggMTZweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCA0cHggMjJweCAzcHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCA2cHggN3B4IC00cHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi0xNmRwOiAwIDE2cHggMjRweCAycHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCA2cHggMzBweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCA4cHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tMjRkcDogMCAyNHB4IDM4cHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgOXB4IDQ2cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTFweCAxNXB4IC03cHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB9XG5gO1xuXG5jb25zdCAkdHBsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnKTtcbiR0cGwuaW5uZXJIVE1MID0gYDxzdHlsZT4ke3NoYWRvdy50b1N0cmluZygpLnJlcGxhY2UoJzpob3N0JywgJ2h0bWwnKX08L3N0eWxlPmA7XG5kb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKCR0cGwuY29udGVudCk7XG5cbmV4cG9ydCB7IHNoYWRvdyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/shadow.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Material: () => (/* binding */ Material)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Dummy custom element used for collecting\n * development time usage statistics.\n *\n * @private\n */\nclass Material extends HTMLElement {\n  static get version() {\n    return '24.0.8';\n  }\n}\ncustomElements.define('vaadin-material-styles', Material);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3ZlcnNpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3ZlcnNpb24uanM/Yjk2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIzIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cblxuLyoqXG4gKiBEdW1teSBjdXN0b20gZWxlbWVudCB1c2VkIGZvciBjb2xsZWN0aW5nXG4gKiBkZXZlbG9wbWVudCB0aW1lIHVzYWdlIHN0YXRpc3RpY3MuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuY2xhc3MgTWF0ZXJpYWwgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gIHN0YXRpYyBnZXQgdmVyc2lvbigpIHtcbiAgICByZXR1cm4gJzI0LjAuOCc7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCd2YWFkaW4tbWF0ZXJpYWwtc3R5bGVzJywgTWF0ZXJpYWwpO1xuXG5leHBvcnQgeyBNYXRlcmlhbCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/version.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   css: () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   registerStyles: () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.registerStyles),\n/* harmony export */   unsafeCSS: () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vcmVnaXN0ZXItc3R5bGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vcmVnaXN0ZXItc3R5bGVzLmpzPzhhNDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5leHBvcnQgeyByZWdpc3RlclN0eWxlcywgY3NzLCB1bnNhZmVDU1MgfSBmcm9tICcuL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemableMixin: () => (/* binding */ ThemableMixin),\n/* harmony export */   __themeRegistry: () => (/* binding */ themeRegistry),\n/* harmony export */   css: () => (/* reexport safe */ lit__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   registerStyles: () => (/* binding */ registerStyles),\n/* harmony export */   unsafeCSS: () => (/* reexport safe */ lit__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _vaadin_theme_property_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-theme-property-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n/**\n * @typedef {Object} Theme\n * @property {string} themeFor\n * @property {CSSResult[]} styles\n * @property {string | string[]} [include]\n * @property {string} [moduleId]\n *\n * @typedef {CSSResult[] | CSSResult} CSSResultGroup\n */\n\n/**\n * @type {Theme[]}\n */\nconst themeRegistry = [];\n\n/**\n * Check if the custom element type has themes applied.\n * @param {Function} elementClass\n * @returns {boolean}\n */\nfunction classHasThemes(elementClass) {\n  return elementClass && Object.prototype.hasOwnProperty.call(elementClass, '__themes');\n}\n\n/**\n * Check if the custom element type has themes applied.\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction hasThemes(tagName) {\n  return classHasThemes(customElements.get(tagName));\n}\n\n/**\n * Flattens the styles into a single array of styles.\n * @param {CSSResultGroup} styles\n * @param {CSSResult[]} result\n * @returns {CSSResult[]}\n */\nfunction flattenStyles(styles = []) {\n  return [styles].flat(Infinity).filter(style => {\n    if (style instanceof lit__WEBPACK_IMPORTED_MODULE_0__.CSSResult) {\n      return true;\n    }\n    console.warn('An item in styles is not of type CSSResult. Use `unsafeCSS` or `css`.');\n    return false;\n  });\n}\n\n/**\n * Registers CSS styles for a component type. Make sure to register the styles before\n * the first instance of a component of the type is attached to DOM.\n *\n * @param {string} themeFor The local/tag name of the component type to register the styles for\n * @param {CSSResultGroup} styles The CSS style rules to be registered for the component type\n * matching themeFor and included in the local scope of each component instance\n * @param {{moduleId?: string, include?: string | string[]}} options Additional options\n * @return {void}\n */\nfunction registerStyles(themeFor, styles, options = {}) {\n  if (themeFor) {\n    if (hasThemes(themeFor)) {\n      console.warn(`The custom element definition for \"${themeFor}\"\n      was finalized before a style module was registered.\n      Make sure to add component specific style modules before\n      importing the corresponding custom element.`);\n    }\n  }\n  styles = flattenStyles(styles);\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    window.Vaadin.styleModules.registerStyles(themeFor, styles, options);\n  } else {\n    themeRegistry.push({\n      themeFor,\n      styles,\n      include: options.include,\n      moduleId: options.moduleId\n    });\n  }\n}\n\n/**\n * Returns all registered themes. By default the themeRegistry is returned as is.\n * In case the style-modules adapter is imported, the themes are obtained from there instead\n * @returns {Theme[]}\n */\nfunction getAllThemes() {\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    return window.Vaadin.styleModules.getAllThemes();\n  }\n  return themeRegistry;\n}\n\n/**\n * Returns true if the themeFor string matches the tag name\n * @param {string} themeFor\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction matchesThemeFor(themeFor, tagName) {\n  return (themeFor || '').split(' ').some(themeForToken => {\n    return new RegExp(`^${themeForToken.split('*').join('.*')}$`, 'u').test(tagName);\n  });\n}\n\n/**\n * Maps the moduleName to an include priority number which is used for\n * determining the order in which styles are applied.\n * @param {string} moduleName\n * @returns {number}\n */\nfunction getIncludePriority(moduleName = '') {\n  let includePriority = 0;\n  if (moduleName.startsWith('lumo-') || moduleName.startsWith('material-')) {\n    includePriority = 1;\n  } else if (moduleName.startsWith('vaadin-')) {\n    includePriority = 2;\n  }\n  return includePriority;\n}\n\n/**\n * Gets an array of CSSResults matching the include property of the theme.\n * @param {Theme} theme\n * @returns {CSSResult[]}\n */\nfunction getIncludedStyles(theme) {\n  const includedStyles = [];\n  if (theme.include) {\n    [].concat(theme.include).forEach(includeModuleId => {\n      const includedTheme = getAllThemes().find(s => s.moduleId === includeModuleId);\n      if (includedTheme) {\n        includedStyles.push(...getIncludedStyles(includedTheme), ...includedTheme.styles);\n      } else {\n        console.warn(`Included moduleId ${includeModuleId} not found in style registry`);\n      }\n    }, theme.styles);\n  }\n  return includedStyles;\n}\n\n/**\n * Includes the styles to the template.\n * @param {CSSResult[]} styles\n * @param {HTMLTemplateElement} template\n */\nfunction addStylesToTemplate(styles, template) {\n  const styleEl = document.createElement('style');\n  styleEl.innerHTML = styles.map(style => style.cssText).join('\\n');\n  template.content.appendChild(styleEl);\n}\n\n/**\n * Returns an array of themes that should be used for styling a component matching\n * the tag name. The array is sorted by the include order.\n * @param {string} tagName\n * @returns {Theme[]}\n */\nfunction getThemes(tagName) {\n  const defaultModuleName = `${tagName}-default-theme`;\n  const themes = getAllThemes()\n  // Filter by matching themeFor properties\n  .filter(theme => theme.moduleId !== defaultModuleName && matchesThemeFor(theme.themeFor, tagName)).map(theme => ({\n    ...theme,\n    // Prepend styles from included themes\n    styles: [...getIncludedStyles(theme), ...theme.styles],\n    // Map moduleId to includePriority\n    includePriority: getIncludePriority(theme.moduleId)\n  }))\n  // Sort by includePriority\n  .sort((themeA, themeB) => themeB.includePriority - themeA.includePriority);\n  if (themes.length > 0) {\n    return themes;\n  }\n  // No theme modules found, return the default module if it exists\n  return getAllThemes().filter(theme => theme.moduleId === defaultModuleName);\n}\n\n/**\n * @polymerMixin\n * @mixes ThemePropertyMixin\n */\nconst ThemableMixin = superClass => class VaadinThemableMixin extends (0,_vaadin_theme_property_mixin_js__WEBPACK_IMPORTED_MODULE_1__.ThemePropertyMixin)(superClass) {\n  /**\n   * Covers PolymerElement based component styling\n   * @protected\n   */\n  static finalize() {\n    super.finalize();\n\n    // Make sure not to run the logic intended for PolymerElement when LitElement is used.\n    if (this.elementStyles) {\n      return;\n    }\n    const template = this.prototype._template;\n    if (!template || classHasThemes(this)) {\n      return;\n    }\n    addStylesToTemplate(this.getStylesForThis(), template);\n  }\n\n  /**\n   * Covers LitElement based component styling\n   *\n   * @protected\n   */\n  static finalizeStyles(styles) {\n    // The \"styles\" object originates from the \"static get styles()\" function of\n    // a LitElement based component. The theme styles are added after it\n    // so that they can override the component styles.\n    const themeStyles = this.getStylesForThis();\n    return styles ? [...super.finalizeStyles(styles), ...themeStyles] : themeStyles;\n  }\n\n  /**\n   * Get styles for the component type\n   *\n   * @private\n   */\n  static getStylesForThis() {\n    const parent = Object.getPrototypeOf(this.prototype);\n    const inheritedThemes = (parent ? parent.constructor.__themes : []) || [];\n    this.__themes = [...inheritedThemes, ...getThemes(this.is)];\n    const themeStyles = this.__themes.flatMap(theme => theme.styles);\n    // Remove duplicates\n    return themeStyles.filter((style, index) => index === themeStyles.lastIndexOf(style));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemePropertyMixin: () => (/* binding */ ThemePropertyMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n/**\n * @polymerMixin\n */\nconst ThemePropertyMixin = superClass => class VaadinThemePropertyMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Helper property with theme attribute value facilitating propagation\n       * in shadow DOM.\n       *\n       * Enables the component implementation to propagate the `theme`\n       * attribute value to the sub-components in Shadow DOM by binding\n       * the sub-component's \"theme\" attribute to the `theme` property of\n       * the host.\n       *\n       * **NOTE:** Extending the mixin only provides the property for binding,\n       * and does not make the propagation alone.\n       *\n       * See [Styling Components: Sub-components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components/#sub-components).\n       * page for more information.\n       *\n       * @protected\n       */\n      _theme: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n  static get observedAttributes() {\n    return [...super.observedAttributes, 'theme'];\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'theme') {\n      this._set_theme(newValue);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1lLXByb3BlcnR5LW1peGluLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1lLXByb3BlcnR5LW1peGluLmpzPzU4MzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMyBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG4vKipcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IFRoZW1lUHJvcGVydHlNaXhpbiA9IChzdXBlckNsYXNzKSA9PlxuICBjbGFzcyBWYWFkaW5UaGVtZVByb3BlcnR5TWl4aW4gZXh0ZW5kcyBzdXBlckNsYXNzIHtcbiAgICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogSGVscGVyIHByb3BlcnR5IHdpdGggdGhlbWUgYXR0cmlidXRlIHZhbHVlIGZhY2lsaXRhdGluZyBwcm9wYWdhdGlvblxuICAgICAgICAgKiBpbiBzaGFkb3cgRE9NLlxuICAgICAgICAgKlxuICAgICAgICAgKiBFbmFibGVzIHRoZSBjb21wb25lbnQgaW1wbGVtZW50YXRpb24gdG8gcHJvcGFnYXRlIHRoZSBgdGhlbWVgXG4gICAgICAgICAqIGF0dHJpYnV0ZSB2YWx1ZSB0byB0aGUgc3ViLWNvbXBvbmVudHMgaW4gU2hhZG93IERPTSBieSBiaW5kaW5nXG4gICAgICAgICAqIHRoZSBzdWItY29tcG9uZW50J3MgXCJ0aGVtZVwiIGF0dHJpYnV0ZSB0byB0aGUgYHRoZW1lYCBwcm9wZXJ0eSBvZlxuICAgICAgICAgKiB0aGUgaG9zdC5cbiAgICAgICAgICpcbiAgICAgICAgICogKipOT1RFOioqIEV4dGVuZGluZyB0aGUgbWl4aW4gb25seSBwcm92aWRlcyB0aGUgcHJvcGVydHkgZm9yIGJpbmRpbmcsXG4gICAgICAgICAqIGFuZCBkb2VzIG5vdCBtYWtlIHRoZSBwcm9wYWdhdGlvbiBhbG9uZS5cbiAgICAgICAgICpcbiAgICAgICAgICogU2VlIFtTdHlsaW5nIENvbXBvbmVudHM6IFN1Yi1jb21wb25lbnRzXShodHRwczovL3ZhYWRpbi5jb20vZG9jcy9sYXRlc3Qvc3R5bGluZy9jdXN0b20tdGhlbWUvc3R5bGluZy1jb21wb25lbnRzLyNzdWItY29tcG9uZW50cykuXG4gICAgICAgICAqIHBhZ2UgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIF90aGVtZToge1xuICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICByZWFkT25seTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgICByZXR1cm4gWy4uLnN1cGVyLm9ic2VydmVkQXR0cmlidXRlcywgJ3RoZW1lJ107XG4gICAgfVxuXG4gICAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKSB7XG4gICAgICBzdXBlci5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKTtcblxuICAgICAgaWYgKG5hbWUgPT09ICd0aGVtZScpIHtcbiAgICAgICAgdGhpcy5fc2V0X3RoZW1lKG5ld1ZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js\n");

/***/ }),

/***/ "./node_modules/lit/async-directive.js":
/*!*********************************************!*\
  !*** ./node_modules/lit/async-directive.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncDirective: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.AsyncDirective),
/* harmony export */   Directive: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.Directive),
/* harmony export */   PartType: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.PartType),
/* harmony export */   directive: () => (/* reexport safe */ lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__.directive)
/* harmony export */ });
/* harmony import */ var lit_html_async_directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/async-directive.js */ "./node_modules/lit-html/development/async-directive.js");


/***/ })

}]);