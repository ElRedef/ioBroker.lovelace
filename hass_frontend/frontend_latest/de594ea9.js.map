{"version":3,"file":"de594ea9.js","mappings":";;;;AAgGA;;;AAGA;AAIA;;;AAGA;;;;AAKA;;;AAGA;AAIA;;;AAGA;AAEA;;;;AAKA;;;AAGA;;;;AAOA;AAEA;;AAGA;;AAEA;;;AAGA;;;AAOA;AAEA;;;;AAKA;;;AAGA;AAIA;;;AAGA;AAEA;;AAGA;;AAEA;;;AAIA;;;;;AAOA;;AAOA;;AAGA;;AAEA;AAEA;;AAGA;;;AAOA;;AAGA;;;AAMA;AACA;;AAEA;;AAGA;;;;AAQA;AAEA;;AAGA;;AAEA","sources":["webpack://home-assistant-frontend/./src/dialogs/more-info/controls/more-info-weather.ts"],"sourcesContent":["import {\n  mdiAlertCircleOutline,\n  mdiEye,\n  mdiGauge,\n  mdiThermometer,\n  mdiWaterPercent,\n  mdiWeatherCloudy,\n  mdiWeatherFog,\n  mdiWeatherHail,\n  mdiWeatherLightning,\n  mdiWeatherLightningRainy,\n  mdiWeatherNight,\n  mdiWeatherPartlyCloudy,\n  mdiWeatherPouring,\n  mdiWeatherRainy,\n  mdiWeatherSnowy,\n  mdiWeatherSnowyRainy,\n  mdiWeatherSunny,\n  mdiWeatherWindy,\n  mdiWeatherWindyVariant,\n} from \"@mdi/js\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatDateWeekday } from \"../../../common/datetime/format_date\";\nimport { formatTimeWeekday } from \"../../../common/datetime/format_time\";\nimport { formatNumber } from \"../../../common/number/format_number\";\nimport \"../../../components/ha-svg-icon\";\nimport {\n  getWeatherUnit,\n  getWind,\n  getWeatherStateIcon,\n  weatherStateIsImage,\n} from \"../../../data/weather\"; //IoB adds last two\nimport { HomeAssistant } from \"../../../types\";\n\nconst weatherIcons = {\n  \"clear-night\": mdiWeatherNight,\n  cloudy: mdiWeatherCloudy,\n  exceptional: mdiAlertCircleOutline,\n  fog: mdiWeatherFog,\n  hail: mdiWeatherHail,\n  lightning: mdiWeatherLightning,\n  \"lightning-rainy\": mdiWeatherLightningRainy,\n  partlycloudy: mdiWeatherPartlyCloudy,\n  pouring: mdiWeatherPouring,\n  rainy: mdiWeatherRainy,\n  snowy: mdiWeatherSnowy,\n  \"snowy-rainy\": mdiWeatherSnowyRainy,\n  sunny: mdiWeatherSunny,\n  windy: mdiWeatherWindy,\n  \"windy-variant\": mdiWeatherWindyVariant,\n};\n\n@customElement(\"more-info-weather\")\nclass MoreInfoWeather extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public stateObj?: HassEntity;\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"stateObj\")) {\n      return true;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    if (\n      !oldHass ||\n      oldHass.locale !== this.hass.locale ||\n      oldHass.config.unit_system !== this.hass.config.unit_system\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this.stateObj) {\n      return html``;\n    }\n\n    // for IoB weather icon.\n    const isImage = weatherStateIsImage(this.stateObj.state);\n\n    return html`\n      <div class=\"flex\">\n        <ha-svg-icon .path=${mdiThermometer}></ha-svg-icon>\n        <div class=\"main\">\n          ${this.hass.localize(\"ui.card.weather.attributes.temperature\")}\n        </div>\n        <div>\n          ${formatNumber(\n            this.stateObj.attributes.temperature,\n            this.hass.locale\n          )}\n          ${getWeatherUnit(this.hass, \"temperature\")}\n        </div>\n      </div>\n      ${this._showValue(this.stateObj.attributes.pressure)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiGauge}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.air_pressure\")}\n              </div>\n              <div>\n                ${formatNumber(\n                  this.stateObj.attributes.pressure,\n                  this.hass.locale\n                )}\n                ${getWeatherUnit(this.hass, \"pressure\")}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this._showValue(this.stateObj.attributes.humidity)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiWaterPercent}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.humidity\")}\n              </div>\n              <div>\n                ${formatNumber(\n                  this.stateObj.attributes.humidity,\n                  this.hass.locale\n                )}\n                %\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this._showValue(this.stateObj.attributes.wind_speed)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiWeatherWindy}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.wind_speed\")}\n              </div>\n              <div>\n                ${getWind(\n                  this.hass,\n                  this.stateObj.attributes.wind_speed,\n                  this.stateObj.attributes.wind_bearing\n                )}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this._showValue(this.stateObj.attributes.visibility)\n        ? html`\n            <div class=\"flex\">\n              <ha-svg-icon .path=${mdiEye}></ha-svg-icon>\n              <div class=\"main\">\n                ${this.hass.localize(\"ui.card.weather.attributes.visibility\")}\n              </div>\n              <div>\n                ${formatNumber(\n                  this.stateObj.attributes.visibility,\n                  this.hass.locale\n                )}\n                ${getWeatherUnit(this.hass, \"length\")}\n              </div>\n            </div>\n          `\n        : \"\"}\n      ${this.stateObj.attributes.forecast\n        ? html`\n            <div class=\"section\">\n              ${this.hass.localize(\"ui.card.weather.forecast\")}:\n            </div>\n            ${this.stateObj.attributes.forecast.map(\n              (item) => html`\n                <div class=\"flex\">\n                  <!-- // IoB weather icon from URL - change below in ha-svg-icon is IoB, too. -->\n                  ${item.condition\n                    ? isImage\n                      ? html`\n                          <div\n                            class=\"icon-image\"\n                            style=\"min-width: 32px; min-height: 32px;\"\n                          >\n                            ${getWeatherStateIcon(\n                              item.condition,\n                              this,\n                              false,\n                              this.hass.auth.accessToken\n                            )}\n                          </div>\n                        `\n                      : html`\n                          <ha-svg-icon\n                            .path=${weatherIcons[item.condition]}\n                          ></ha-svg-icon>\n                        `\n                    : \"\"}\n                  ${!this._showValue(item.templow)\n                    ? html`\n                        <div class=\"main\">\n                          ${formatTimeWeekday(\n                            new Date(item.datetime),\n                            this.hass.locale\n                          )}\n                        </div>\n                      `\n                    : \"\"}\n                  ${this._showValue(item.templow)\n                    ? html`\n                        <div class=\"main\">\n                          ${formatDateWeekday(\n                            new Date(item.datetime),\n                            this.hass.locale\n                          )}\n                        </div>\n                        <div class=\"templow\">\n                          ${formatNumber(item.templow, this.hass.locale)}\n                          ${getWeatherUnit(this.hass, \"temperature\")}\n                        </div>\n                      `\n                    : \"\"}\n                  <div class=\"temp\">\n                    ${this._showValue(item.temperature)\n                      ? `${formatNumber(item.temperature, this.hass.locale)}\n                    ${getWeatherUnit(this.hass, \"temperature\")}`\n                      : \"\"}\n                  </div>\n                </div>\n              `\n            )}\n          `\n        : \"\"}\n      ${this.stateObj.attributes.attribution\n        ? html`\n            <div class=\"attribution\">\n              ${this.stateObj.attributes.attribution}\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-svg-icon {\n        color: var(--paper-item-icon-color);\n      }\n      .section {\n        margin: 16px 0 8px 0;\n        font-size: 1.2em;\n      }\n\n      .flex {\n        display: flex;\n        height: 32px;\n        align-items: center;\n      }\n\n      .main {\n        flex: 1;\n        margin-left: 24px;\n      }\n\n      .temp,\n      .templow {\n        min-width: 48px;\n        text-align: right;\n      }\n\n      .templow {\n        margin: 0 16px;\n        color: var(--secondary-text-color);\n      }\n\n      .attribution {\n        color: var(--secondary-text-color);\n        text-align: center;\n      }\n    `;\n  }\n\n  private _showValue(item: string): boolean {\n    return typeof item !== \"undefined\" && item !== null;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-weather\": MoreInfoWeather;\n  }\n}\n"],"names":[],"sourceRoot":""}